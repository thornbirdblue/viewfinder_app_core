// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Headers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Headers_reflection_ = NULL;
const ::google::protobuf::Descriptor* PhotoUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PhotoUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountSettingsMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountSettingsMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorResponse_Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorResponse_Error_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorResponse_ErrorId_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryContactsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryContactsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryEpisodesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryEpisodesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryEpisodesResponse_Episode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryEpisodesResponse_Episode_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryFollowedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryFollowedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryNotificationsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryNotificationsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryNotificationsResponse_InlineViewpoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryNotificationsResponse_InlineViewpoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryNotificationsResponse_InlineInvalidation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryNotificationsResponse_InlineInvalidation_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryNotificationsResponse_Notification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryNotificationsResponse_Notification_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryUsersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryUsersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryUsersResponse_User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryUsersResponse_User_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryViewpointsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryViewpointsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryViewpointsResponse_FollowerMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryViewpointsResponse_FollowerMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryViewpointsResponse_Viewpoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryViewpointsResponse_Viewpoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResolveContactsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResolveContactsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RsvpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RsvpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RsvpResponse_Rsvp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RsvpResponse_Rsvp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UploadContactsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UploadContactsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UploadEpisodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UploadEpisodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpHeaders_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpHeaders_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerOperation_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerOperation_RemovePhotos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerOperation_RemovePhotos_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Server_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Server_2eproto() {
  protobuf_AddDesc_Server_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Server.proto");
  GOOGLE_CHECK(file != NULL);
  Headers_descriptor_ = file->message_type(0);
  static const int Headers_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Headers, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Headers, min_required_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Headers, op_id_),
  };
  Headers_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Headers_descriptor_,
      Headers::internal_default_instance(),
      Headers_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Headers, _has_bits_),
      -1,
      -1,
      sizeof(Headers),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Headers, _internal_metadata_));
  PhotoUpdate_descriptor_ = file->message_type(1);
  static const int PhotoUpdate_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, tn_get_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, tn_put_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, med_get_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, med_put_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, full_get_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, full_put_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, orig_get_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, orig_put_url_),
  };
  PhotoUpdate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PhotoUpdate_descriptor_,
      PhotoUpdate::internal_default_instance(),
      PhotoUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, _has_bits_),
      -1,
      -1,
      sizeof(PhotoUpdate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoUpdate, _internal_metadata_));
  AccountSettingsMetadata_descriptor_ = file->message_type(2);
  static const int AccountSettingsMetadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountSettingsMetadata, email_alerts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountSettingsMetadata, storage_options_),
  };
  AccountSettingsMetadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountSettingsMetadata_descriptor_,
      AccountSettingsMetadata::internal_default_instance(),
      AccountSettingsMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountSettingsMetadata, _has_bits_),
      -1,
      -1,
      sizeof(AccountSettingsMetadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountSettingsMetadata, _internal_metadata_));
  AuthResponse_descriptor_ = file->message_type(3);
  static const int AuthResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, device_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, token_digits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, cookie_),
  };
  AuthResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthResponse_descriptor_,
      AuthResponse::internal_default_instance(),
      AuthResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, _has_bits_),
      -1,
      -1,
      sizeof(AuthResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthResponse, _internal_metadata_));
  ErrorResponse_descriptor_ = file->message_type(4);
  static const int ErrorResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse, error_),
  };
  ErrorResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorResponse_descriptor_,
      ErrorResponse::internal_default_instance(),
      ErrorResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse, _has_bits_),
      -1,
      -1,
      sizeof(ErrorResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse, _internal_metadata_));
  ErrorResponse_Error_descriptor_ = ErrorResponse_descriptor_->nested_type(0);
  static const int ErrorResponse_Error_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse_Error, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse_Error, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse_Error, error_id_),
  };
  ErrorResponse_Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorResponse_Error_descriptor_,
      ErrorResponse_Error::internal_default_instance(),
      ErrorResponse_Error_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse_Error, _has_bits_),
      -1,
      -1,
      sizeof(ErrorResponse_Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorResponse_Error, _internal_metadata_));
  ErrorResponse_ErrorId_descriptor_ = ErrorResponse_descriptor_->enum_type(0);
  PingResponse_descriptor_ = file->message_type(5);
  static const int PingResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, message_),
  };
  PingResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingResponse_descriptor_,
      PingResponse::internal_default_instance(),
      PingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _has_bits_),
      -1,
      -1,
      sizeof(PingResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _internal_metadata_));
  QueryContactsResponse_descriptor_ = file->message_type(6);
  static const int QueryContactsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryContactsResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryContactsResponse, last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryContactsResponse, contacts_),
  };
  QueryContactsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryContactsResponse_descriptor_,
      QueryContactsResponse::internal_default_instance(),
      QueryContactsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryContactsResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryContactsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryContactsResponse, _internal_metadata_));
  QueryEpisodesResponse_descriptor_ = file->message_type(7);
  static const int QueryEpisodesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse, episodes_),
  };
  QueryEpisodesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryEpisodesResponse_descriptor_,
      QueryEpisodesResponse::internal_default_instance(),
      QueryEpisodesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryEpisodesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse, _internal_metadata_));
  QueryEpisodesResponse_Episode_descriptor_ = QueryEpisodesResponse_descriptor_->nested_type(0);
  static const int QueryEpisodesResponse_Episode_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse_Episode, last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse_Episode, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse_Episode, photos_),
  };
  QueryEpisodesResponse_Episode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryEpisodesResponse_Episode_descriptor_,
      QueryEpisodesResponse_Episode::internal_default_instance(),
      QueryEpisodesResponse_Episode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse_Episode, _has_bits_),
      -1,
      -1,
      sizeof(QueryEpisodesResponse_Episode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryEpisodesResponse_Episode, _internal_metadata_));
  QueryFollowedResponse_descriptor_ = file->message_type(8);
  static const int QueryFollowedResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFollowedResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFollowedResponse, last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFollowedResponse, viewpoints_),
  };
  QueryFollowedResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryFollowedResponse_descriptor_,
      QueryFollowedResponse::internal_default_instance(),
      QueryFollowedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFollowedResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryFollowedResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryFollowedResponse, _internal_metadata_));
  QueryNotificationsResponse_descriptor_ = file->message_type(9);
  static const int QueryNotificationsResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, notifications_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, retry_after_),
  };
  QueryNotificationsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryNotificationsResponse_descriptor_,
      QueryNotificationsResponse::internal_default_instance(),
      QueryNotificationsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryNotificationsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse, _internal_metadata_));
  QueryNotificationsResponse_InlineViewpoint_descriptor_ = QueryNotificationsResponse_descriptor_->nested_type(0);
  static const int QueryNotificationsResponse_InlineViewpoint_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineViewpoint, viewpoint_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineViewpoint, update_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineViewpoint, viewed_seq_),
  };
  QueryNotificationsResponse_InlineViewpoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryNotificationsResponse_InlineViewpoint_descriptor_,
      QueryNotificationsResponse_InlineViewpoint::internal_default_instance(),
      QueryNotificationsResponse_InlineViewpoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineViewpoint, _has_bits_),
      -1,
      -1,
      sizeof(QueryNotificationsResponse_InlineViewpoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineViewpoint, _internal_metadata_));
  QueryNotificationsResponse_InlineInvalidation_descriptor_ = QueryNotificationsResponse_descriptor_->nested_type(1);
  static const int QueryNotificationsResponse_InlineInvalidation_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, viewpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, comment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, usage_),
  };
  QueryNotificationsResponse_InlineInvalidation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryNotificationsResponse_InlineInvalidation_descriptor_,
      QueryNotificationsResponse_InlineInvalidation::internal_default_instance(),
      QueryNotificationsResponse_InlineInvalidation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, _has_bits_),
      -1,
      -1,
      sizeof(QueryNotificationsResponse_InlineInvalidation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_InlineInvalidation, _internal_metadata_));
  QueryNotificationsResponse_Notification_descriptor_ = QueryNotificationsResponse_descriptor_->nested_type(2);
  static const int QueryNotificationsResponse_Notification_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, notification_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, op_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, invalidate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, inline_invalidate_),
  };
  QueryNotificationsResponse_Notification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryNotificationsResponse_Notification_descriptor_,
      QueryNotificationsResponse_Notification::internal_default_instance(),
      QueryNotificationsResponse_Notification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, _has_bits_),
      -1,
      -1,
      sizeof(QueryNotificationsResponse_Notification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryNotificationsResponse_Notification, _internal_metadata_));
  QueryUsersResponse_descriptor_ = file->message_type(10);
  static const int QueryUsersResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse, user_),
  };
  QueryUsersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryUsersResponse_descriptor_,
      QueryUsersResponse::internal_default_instance(),
      QueryUsersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryUsersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse, _internal_metadata_));
  QueryUsersResponse_User_descriptor_ = QueryUsersResponse_descriptor_->nested_type(0);
  static const int QueryUsersResponse_User_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, contact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, subscriptions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, account_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, no_password_),
  };
  QueryUsersResponse_User_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryUsersResponse_User_descriptor_,
      QueryUsersResponse_User::internal_default_instance(),
      QueryUsersResponse_User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, _has_bits_),
      -1,
      -1,
      sizeof(QueryUsersResponse_User),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryUsersResponse_User, _internal_metadata_));
  QueryViewpointsResponse_descriptor_ = file->message_type(11);
  static const int QueryViewpointsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse, viewpoints_),
  };
  QueryViewpointsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryViewpointsResponse_descriptor_,
      QueryViewpointsResponse::internal_default_instance(),
      QueryViewpointsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse, _has_bits_),
      -1,
      -1,
      sizeof(QueryViewpointsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse, _internal_metadata_));
  QueryViewpointsResponse_FollowerMetadata_descriptor_ = QueryViewpointsResponse_descriptor_->nested_type(0);
  static const int QueryViewpointsResponse_FollowerMetadata_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_FollowerMetadata, follower_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_FollowerMetadata, label_removed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_FollowerMetadata, label_unrevivable_),
  };
  QueryViewpointsResponse_FollowerMetadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryViewpointsResponse_FollowerMetadata_descriptor_,
      QueryViewpointsResponse_FollowerMetadata::internal_default_instance(),
      QueryViewpointsResponse_FollowerMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_FollowerMetadata, _has_bits_),
      -1,
      -1,
      sizeof(QueryViewpointsResponse_FollowerMetadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_FollowerMetadata, _internal_metadata_));
  QueryViewpointsResponse_Viewpoint_descriptor_ = QueryViewpointsResponse_descriptor_->nested_type(1);
  static const int QueryViewpointsResponse_Viewpoint_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, follower_last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, activity_last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, episode_last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, comment_last_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, followers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, activities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, episodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, comments_),
  };
  QueryViewpointsResponse_Viewpoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryViewpointsResponse_Viewpoint_descriptor_,
      QueryViewpointsResponse_Viewpoint::internal_default_instance(),
      QueryViewpointsResponse_Viewpoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, _has_bits_),
      -1,
      -1,
      sizeof(QueryViewpointsResponse_Viewpoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryViewpointsResponse_Viewpoint, _internal_metadata_));
  ResolveContactsResponse_descriptor_ = file->message_type(12);
  static const int ResolveContactsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveContactsResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveContactsResponse, contacts_),
  };
  ResolveContactsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResolveContactsResponse_descriptor_,
      ResolveContactsResponse::internal_default_instance(),
      ResolveContactsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveContactsResponse, _has_bits_),
      -1,
      -1,
      sizeof(ResolveContactsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolveContactsResponse, _internal_metadata_));
  RsvpResponse_descriptor_ = file->message_type(13);
  static const int RsvpResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse, rsvps_),
  };
  RsvpResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RsvpResponse_descriptor_,
      RsvpResponse::internal_default_instance(),
      RsvpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse, _has_bits_),
      -1,
      -1,
      sizeof(RsvpResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse, _internal_metadata_));
  RsvpResponse_Rsvp_descriptor_ = RsvpResponse_descriptor_->nested_type(0);
  static const int RsvpResponse_Rsvp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse_Rsvp, episode_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse_Rsvp, labels_),
  };
  RsvpResponse_Rsvp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RsvpResponse_Rsvp_descriptor_,
      RsvpResponse_Rsvp::internal_default_instance(),
      RsvpResponse_Rsvp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse_Rsvp, _has_bits_),
      -1,
      -1,
      sizeof(RsvpResponse_Rsvp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsvpResponse_Rsvp, _internal_metadata_));
  UploadContactsResponse_descriptor_ = file->message_type(14);
  static const int UploadContactsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadContactsResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadContactsResponse, contact_ids_),
  };
  UploadContactsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UploadContactsResponse_descriptor_,
      UploadContactsResponse::internal_default_instance(),
      UploadContactsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadContactsResponse, _has_bits_),
      -1,
      -1,
      sizeof(UploadContactsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadContactsResponse, _internal_metadata_));
  UploadEpisodeResponse_descriptor_ = file->message_type(15);
  static const int UploadEpisodeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadEpisodeResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadEpisodeResponse, photos_),
  };
  UploadEpisodeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UploadEpisodeResponse_descriptor_,
      UploadEpisodeResponse::internal_default_instance(),
      UploadEpisodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadEpisodeResponse, _has_bits_),
      -1,
      -1,
      sizeof(UploadEpisodeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadEpisodeResponse, _internal_metadata_));
  OpHeaders_descriptor_ = file->message_type(16);
  static const int OpHeaders_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpHeaders, op_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpHeaders, op_timestamp_),
  };
  OpHeaders_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpHeaders_descriptor_,
      OpHeaders::internal_default_instance(),
      OpHeaders_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpHeaders, _has_bits_),
      -1,
      -1,
      sizeof(OpHeaders),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpHeaders, _internal_metadata_));
  ServerOperation_descriptor_ = file->message_type(17);
  static const int ServerOperation_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, upload_activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, update_photo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, remove_photos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, update_viewpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, stats_),
  };
  ServerOperation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerOperation_descriptor_,
      ServerOperation::internal_default_instance(),
      ServerOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, _has_bits_),
      -1,
      -1,
      sizeof(ServerOperation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation, _internal_metadata_));
  ServerOperation_RemovePhotos_descriptor_ = ServerOperation_descriptor_->nested_type(0);
  static const int ServerOperation_RemovePhotos_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation_RemovePhotos, episodes_),
  };
  ServerOperation_RemovePhotos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerOperation_RemovePhotos_descriptor_,
      ServerOperation_RemovePhotos::internal_default_instance(),
      ServerOperation_RemovePhotos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation_RemovePhotos, _has_bits_),
      -1,
      -1,
      sizeof(ServerOperation_RemovePhotos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerOperation_RemovePhotos, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Server_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Headers_descriptor_, Headers::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PhotoUpdate_descriptor_, PhotoUpdate::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountSettingsMetadata_descriptor_, AccountSettingsMetadata::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthResponse_descriptor_, AuthResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorResponse_descriptor_, ErrorResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorResponse_Error_descriptor_, ErrorResponse_Error::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingResponse_descriptor_, PingResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryContactsResponse_descriptor_, QueryContactsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryEpisodesResponse_descriptor_, QueryEpisodesResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryEpisodesResponse_Episode_descriptor_, QueryEpisodesResponse_Episode::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryFollowedResponse_descriptor_, QueryFollowedResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryNotificationsResponse_descriptor_, QueryNotificationsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryNotificationsResponse_InlineViewpoint_descriptor_, QueryNotificationsResponse_InlineViewpoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryNotificationsResponse_InlineInvalidation_descriptor_, QueryNotificationsResponse_InlineInvalidation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryNotificationsResponse_Notification_descriptor_, QueryNotificationsResponse_Notification::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryUsersResponse_descriptor_, QueryUsersResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryUsersResponse_User_descriptor_, QueryUsersResponse_User::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryViewpointsResponse_descriptor_, QueryViewpointsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryViewpointsResponse_FollowerMetadata_descriptor_, QueryViewpointsResponse_FollowerMetadata::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryViewpointsResponse_Viewpoint_descriptor_, QueryViewpointsResponse_Viewpoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResolveContactsResponse_descriptor_, ResolveContactsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RsvpResponse_descriptor_, RsvpResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RsvpResponse_Rsvp_descriptor_, RsvpResponse_Rsvp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UploadContactsResponse_descriptor_, UploadContactsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UploadEpisodeResponse_descriptor_, UploadEpisodeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpHeaders_descriptor_, OpHeaders::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerOperation_descriptor_, ServerOperation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerOperation_RemovePhotos_descriptor_, ServerOperation_RemovePhotos::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Server_2eproto() {
  Headers_default_instance_.Shutdown();
  delete Headers_reflection_;
  PhotoUpdate_default_instance_.Shutdown();
  delete PhotoUpdate_reflection_;
  AccountSettingsMetadata_default_instance_.Shutdown();
  delete AccountSettingsMetadata_reflection_;
  AuthResponse_default_instance_.Shutdown();
  delete AuthResponse_reflection_;
  ErrorResponse_default_instance_.Shutdown();
  delete ErrorResponse_reflection_;
  ErrorResponse_Error_default_instance_.Shutdown();
  delete ErrorResponse_Error_reflection_;
  PingResponse_default_instance_.Shutdown();
  delete PingResponse_reflection_;
  QueryContactsResponse_default_instance_.Shutdown();
  delete QueryContactsResponse_reflection_;
  QueryEpisodesResponse_default_instance_.Shutdown();
  delete QueryEpisodesResponse_reflection_;
  QueryEpisodesResponse_Episode_default_instance_.Shutdown();
  delete QueryEpisodesResponse_Episode_reflection_;
  QueryFollowedResponse_default_instance_.Shutdown();
  delete QueryFollowedResponse_reflection_;
  QueryNotificationsResponse_default_instance_.Shutdown();
  delete QueryNotificationsResponse_reflection_;
  QueryNotificationsResponse_InlineViewpoint_default_instance_.Shutdown();
  delete QueryNotificationsResponse_InlineViewpoint_reflection_;
  QueryNotificationsResponse_InlineInvalidation_default_instance_.Shutdown();
  delete QueryNotificationsResponse_InlineInvalidation_reflection_;
  QueryNotificationsResponse_Notification_default_instance_.Shutdown();
  delete QueryNotificationsResponse_Notification_reflection_;
  QueryUsersResponse_default_instance_.Shutdown();
  delete QueryUsersResponse_reflection_;
  QueryUsersResponse_User_default_instance_.Shutdown();
  delete QueryUsersResponse_User_reflection_;
  QueryViewpointsResponse_default_instance_.Shutdown();
  delete QueryViewpointsResponse_reflection_;
  QueryViewpointsResponse_FollowerMetadata_default_instance_.Shutdown();
  delete QueryViewpointsResponse_FollowerMetadata_reflection_;
  QueryViewpointsResponse_Viewpoint_default_instance_.Shutdown();
  delete QueryViewpointsResponse_Viewpoint_reflection_;
  ResolveContactsResponse_default_instance_.Shutdown();
  delete ResolveContactsResponse_reflection_;
  RsvpResponse_default_instance_.Shutdown();
  delete RsvpResponse_reflection_;
  RsvpResponse_Rsvp_default_instance_.Shutdown();
  delete RsvpResponse_Rsvp_reflection_;
  UploadContactsResponse_default_instance_.Shutdown();
  delete UploadContactsResponse_reflection_;
  UploadEpisodeResponse_default_instance_.Shutdown();
  delete UploadEpisodeResponse_reflection_;
  OpHeaders_default_instance_.Shutdown();
  delete OpHeaders_reflection_;
  ServerOperation_default_instance_.Shutdown();
  delete ServerOperation_reflection_;
  ServerOperation_RemovePhotos_default_instance_.Shutdown();
  delete ServerOperation_RemovePhotos_reflection_;
}

void protobuf_InitDefaults_Server_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_ActivityMetadata_2eproto();
  ::protobuf_InitDefaults_CommentMetadata_2eproto();
  ::protobuf_InitDefaults_ContactMetadata_2eproto();
  ::protobuf_InitDefaults_EpisodeMetadata_2eproto();
  ::protobuf_InitDefaults_InvalidateMetadata_2eproto();
  ::protobuf_InitDefaults_PhotoMetadata_2eproto();
  ::protobuf_InitDefaults_SubscriptionMetadata_2eproto();
  ::protobuf_InitDefaults_SystemMessage_2eproto();
  ::protobuf_InitDefaults_UserMetadata_2eproto();
  ::protobuf_InitDefaults_ViewpointMetadata_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  Headers_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PhotoUpdate_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AccountSettingsMetadata_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthResponse_default_instance_.DefaultConstruct();
  ErrorResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorResponse_Error_default_instance_.DefaultConstruct();
  PingResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryContactsResponse_default_instance_.DefaultConstruct();
  QueryEpisodesResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryEpisodesResponse_Episode_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryFollowedResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryNotificationsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryNotificationsResponse_InlineViewpoint_default_instance_.DefaultConstruct();
  QueryNotificationsResponse_InlineInvalidation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryNotificationsResponse_Notification_default_instance_.DefaultConstruct();
  QueryUsersResponse_default_instance_.DefaultConstruct();
  QueryUsersResponse_User_default_instance_.DefaultConstruct();
  QueryViewpointsResponse_default_instance_.DefaultConstruct();
  QueryViewpointsResponse_FollowerMetadata_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryViewpointsResponse_Viewpoint_default_instance_.DefaultConstruct();
  ResolveContactsResponse_default_instance_.DefaultConstruct();
  RsvpResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RsvpResponse_Rsvp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UploadContactsResponse_default_instance_.DefaultConstruct();
  UploadEpisodeResponse_default_instance_.DefaultConstruct();
  OpHeaders_default_instance_.DefaultConstruct();
  ServerOperation_default_instance_.DefaultConstruct();
  ServerOperation_RemovePhotos_default_instance_.DefaultConstruct();
  Headers_default_instance_.get_mutable()->InitAsDefaultInstance();
  PhotoUpdate_default_instance_.get_mutable()->InitAsDefaultInstance();
  AccountSettingsMetadata_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorResponse_Error_default_instance_.get_mutable()->InitAsDefaultInstance();
  PingResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryContactsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryEpisodesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryEpisodesResponse_Episode_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryFollowedResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryNotificationsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryNotificationsResponse_InlineViewpoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryNotificationsResponse_InlineInvalidation_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryNotificationsResponse_Notification_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryUsersResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryUsersResponse_User_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryViewpointsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryViewpointsResponse_FollowerMetadata_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryViewpointsResponse_Viewpoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResolveContactsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RsvpResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RsvpResponse_Rsvp_default_instance_.get_mutable()->InitAsDefaultInstance();
  UploadContactsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  UploadEpisodeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpHeaders_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServerOperation_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServerOperation_RemovePhotos_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Server_2eproto_once_);
void protobuf_InitDefaults_Server_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Server_2eproto_once_,
                 &protobuf_InitDefaults_Server_2eproto_impl);
}
void protobuf_AddDesc_Server_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Server_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Server.proto\032\026ActivityMetadata.proto\032\025"
    "CommentMetadata.proto\032\025ContactMetadata.p"
    "roto\032\025EpisodeMetadata.proto\032\030InvalidateM"
    "etadata.proto\032\023PhotoMetadata.proto\032\032Subs"
    "criptionMetadata.proto\032\023SystemMessage.pr"
    "oto\032\022UserMetadata.proto\032\027ViewpointMetada"
    "ta.proto\"G\n\007Headers\022\017\n\007version\030\001 \001(\005\022\034\n\024"
    "min_required_version\030\002 \001(\005\022\r\n\005op_id\030\003 \001("
    "\t\"\331\001\n\013PhotoUpdate\022 \n\010metadata\030\001 \001(\0132\016.Ph"
    "otoMetadata\022\022\n\ntn_get_url\030\002 \001(\t\022\022\n\ntn_pu"
    "t_url\030\003 \001(\t\022\023\n\013med_get_url\030\004 \001(\t\022\023\n\013med_"
    "put_url\030\005 \001(\t\022\024\n\014full_get_url\030\006 \001(\t\022\024\n\014f"
    "ull_put_url\030\007 \001(\t\022\024\n\014orig_get_url\030\010 \001(\t\022"
    "\024\n\014orig_put_url\030\t \001(\t\"H\n\027AccountSettings"
    "Metadata\022\024\n\014email_alerts\030\001 \001(\t\022\027\n\017storag"
    "e_options\030\002 \003(\t\"s\n\014AuthResponse\022\031\n\007heade"
    "rs\030\001 \001(\0132\010.Headers\022\017\n\007user_id\030\002 \001(\003\022\021\n\td"
    "evice_id\030\003 \001(\003\022\024\n\014token_digits\030\004 \001(\005\022\016\n\006"
    "cookie\030\005 \001(\t\"\255\002\n\rErrorResponse\022#\n\005error\030"
    "\001 \001(\0132\024.ErrorResponse.Error\032X\n\005Error\022\016\n\006"
    "method\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\0221\n\010error_id\030\003"
    " \001(\0162\026.ErrorResponse.ErrorId:\007UNKNOWN\"\234\001"
    "\n\007ErrorId\022\006\n\002OK\020\000\022\013\n\007UNKNOWN\020\001\022\030\n\024INVALI"
    "D_JSON_REQUEST\020\002\022\023\n\017NO_USER_ACCOUNT\020\003\022\034\n"
    "\030UPDATE_PWD_NOT_CONFIRMED\020\004\022\026\n\022ALREADY_R"
    "EGISTERED\020\005\022\027\n\023NETWORK_UNAVAILABLE\020\006\"/\n\014"
    "PingResponse\022\037\n\007message\030\001 \001(\0132\016.SystemMe"
    "ssage\"h\n\025QueryContactsResponse\022\031\n\007header"
    "s\030\001 \001(\0132\010.Headers\022\020\n\010last_key\030\002 \001(\t\022\"\n\010c"
    "ontacts\030\003 \003(\0132\020.ContactMetadata\"\303\001\n\025Quer"
    "yEpisodesResponse\022\031\n\007headers\030\001 \001(\0132\010.Hea"
    "ders\0220\n\010episodes\030\002 \003(\0132\036.QueryEpisodesRe"
    "sponse.Episode\032]\n\007Episode\022\020\n\010last_key\030\001 "
    "\001(\t\022\"\n\010metadata\030\002 \001(\0132\020.EpisodeMetadata\022"
    "\034\n\006photos\030\003 \003(\0132\014.PhotoUpdate\"l\n\025QueryFo"
    "llowedResponse\022\031\n\007headers\030\001 \001(\0132\010.Header"
    "s\022\020\n\010last_key\030\002 \001(\t\022&\n\nviewpoints\030\003 \003(\0132"
    "\022.ViewpointMetadata\"\217\005\n\032QueryNotificatio"
    "nsResponse\022\031\n\007headers\030\001 \001(\0132\010.Headers\022\020\n"
    "\010last_key\030\002 \001(\t\022\?\n\rnotifications\030\003 \003(\0132("
    ".QueryNotificationsResponse.Notification"
    "\022\023\n\013retry_after\030\004 \001(\001\032O\n\017InlineViewpoint"
    "\022\024\n\014viewpoint_id\030\001 \001(\t\022\022\n\nupdate_seq\030\002 \001"
    "(\003\022\022\n\nviewed_seq\030\003 \001(\003\032\273\001\n\022InlineInvalid"
    "ation\022#\n\010activity\030\001 \001(\0132\021.ActivityMetada"
    "ta\022>\n\tviewpoint\030\002 \001(\0132+.QueryNotificatio"
    "nsResponse.InlineViewpoint\022!\n\007comment\030\003 "
    "\001(\0132\020.CommentMetadata\022\035\n\005usage\030\004 \001(\0132\016.U"
    "sageMetadata\032\336\001\n\014Notification\022\027\n\017notific"
    "ation_id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\021\n\tsender_i"
    "d\030\003 \001(\003\022\r\n\005op_id\030\007 \001(\t\022\021\n\ttimestamp\030\004 \001("
    "\001\022\'\n\ninvalidate\030\005 \001(\0132\023.InvalidateMetada"
    "ta\022I\n\021inline_invalidate\030\006 \001(\0132..QueryNot"
    "ificationsResponse.InlineInvalidation\"\200\002"
    "\n\022QueryUsersResponse\022\031\n\007headers\030\001 \001(\0132\010."
    "Headers\022&\n\004user\030\002 \003(\n2\030.QueryUsersRespon"
    "se.User\032\246\001\n\004User\022!\n\007contact\030\003 \001(\0132\020.Cont"
    "actMetadata\0222\n\rsubscriptions\030\004 \003(\0132\033.Ser"
    "verSubscriptionMetadata\0222\n\020account_setti"
    "ngs\030\005 \001(\0132\030.AccountSettingsMetadata\022\023\n\013n"
    "o_password\030\007 \001(\010\"\222\004\n\027QueryViewpointsResp"
    "onse\022\031\n\007headers\030\001 \001(\0132\010.Headers\0226\n\nviewp"
    "oints\030\002 \003(\0132\".QueryViewpointsResponse.Vi"
    "ewpoint\032Y\n\020FollowerMetadata\022\023\n\013follower_"
    "id\030\001 \001(\003\022\025\n\rlabel_removed\030\002 \001(\010\022\031\n\021label"
    "_unrevivable\030\003 \001(\010\032\310\002\n\tViewpoint\022\031\n\021foll"
    "ower_last_key\030\001 \001(\t\022\031\n\021activity_last_key"
    "\030\002 \001(\t\022\030\n\020episode_last_key\030\003 \001(\t\022\030\n\020comm"
    "ent_last_key\030\004 \001(\t\022$\n\010metadata\030\005 \001(\0132\022.V"
    "iewpointMetadata\022<\n\tfollowers\030\006 \003(\0132).Qu"
    "eryViewpointsResponse.FollowerMetadata\022%"
    "\n\nactivities\030\007 \003(\0132\021.ActivityMetadata\022\"\n"
    "\010episodes\030\010 \003(\0132\020.EpisodeMetadata\022\"\n\010com"
    "ments\030\t \003(\0132\020.CommentMetadata\"X\n\027Resolve"
    "ContactsResponse\022\031\n\007headers\030\001 \001(\0132\010.Head"
    "ers\022\"\n\010contacts\030\002 \003(\0132\020.ContactMetadata\""
    "x\n\014RsvpResponse\022\031\n\007headers\030\001 \001(\0132\010.Heade"
    "rs\022!\n\005rsvps\030\002 \003(\0132\022.RsvpResponse.Rsvp\032*\n"
    "\004Rsvp\022\022\n\nepisode_id\030\001 \001(\t\022\016\n\006labels\030\002 \003("
    "\t\"H\n\026UploadContactsResponse\022\031\n\007headers\030\001"
    " \001(\0132\010.Headers\022\023\n\013contact_ids\030\002 \003(\t\"P\n\025U"
    "ploadEpisodeResponse\022\031\n\007headers\030\001 \001(\0132\010."
    "Headers\022\034\n\006photos\030\002 \003(\0132\014.PhotoUpdate\"0\n"
    "\tOpHeaders\022\r\n\005op_id\030\001 \001(\003\022\024\n\014op_timestam"
    "p\030\002 \001(\001\"\371\001\n\017ServerOperation\022\033\n\007headers\030\001"
    " \001(\0132\n.OpHeaders\022\027\n\017upload_activity\030\002 \001("
    "\003\022\024\n\014update_photo\030\003 \001(\003\0224\n\rremove_photos"
    "\030\004 \001(\0132\035.ServerOperation.RemovePhotos\022\030\n"
    "\020update_viewpoint\030\005 \001(\003\022\r\n\005stats\030\006 \003(\005\032;"
    "\n\014RemovePhotos\022+\n\010episodes\030\001 \003(\0132\031.Activ"
    "ityMetadata.EpisodeB\037\n\023co.viewfinder.pro"
    "toB\010ServerPB", 3652);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Server.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_ActivityMetadata_2eproto();
  ::protobuf_AddDesc_CommentMetadata_2eproto();
  ::protobuf_AddDesc_ContactMetadata_2eproto();
  ::protobuf_AddDesc_EpisodeMetadata_2eproto();
  ::protobuf_AddDesc_InvalidateMetadata_2eproto();
  ::protobuf_AddDesc_PhotoMetadata_2eproto();
  ::protobuf_AddDesc_SubscriptionMetadata_2eproto();
  ::protobuf_AddDesc_SystemMessage_2eproto();
  ::protobuf_AddDesc_UserMetadata_2eproto();
  ::protobuf_AddDesc_ViewpointMetadata_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Server_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Server_2eproto_once_);
void protobuf_AddDesc_Server_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Server_2eproto_once_,
                 &protobuf_AddDesc_Server_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Server_2eproto {
  StaticDescriptorInitializer_Server_2eproto() {
    protobuf_AddDesc_Server_2eproto();
  }
} static_descriptor_initializer_Server_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Headers::kVersionFieldNumber;
const int Headers::kMinRequiredVersionFieldNumber;
const int Headers::kOpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Headers::Headers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Headers)
}

void Headers::InitAsDefaultInstance() {
}

Headers::Headers(const Headers& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Headers)
}

void Headers::SharedCtor() {
  _cached_size_ = 0;
  op_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, reinterpret_cast<char*>(&min_required_version_) -
    reinterpret_cast<char*>(&version_) + sizeof(min_required_version_));
}

Headers::~Headers() {
  // @@protoc_insertion_point(destructor:Headers)
  SharedDtor();
}

void Headers::SharedDtor() {
  op_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Headers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Headers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Headers_descriptor_;
}

const Headers& Headers::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Headers> Headers_default_instance_;

Headers* Headers::New(::google::protobuf::Arena* arena) const {
  Headers* n = new Headers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Headers::Clear() {
// @@protoc_insertion_point(message_clear_start:Headers)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Headers, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Headers*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(version_, min_required_version_);
    if (has_op_id()) {
      op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Headers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Headers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (tag == 8) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_min_required_version;
        break;
      }

      // optional int32 min_required_version = 2;
      case 2: {
        if (tag == 16) {
         parse_min_required_version:
          set_has_min_required_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_required_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_op_id;
        break;
      }

      // optional string op_id = 3;
      case 3: {
        if (tag == 26) {
         parse_op_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_id().data(), this->op_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Headers.op_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Headers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Headers)
  return false;
#undef DO_
}

void Headers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Headers)
  // optional int32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional int32 min_required_version = 2;
  if (has_min_required_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_required_version(), output);
  }

  // optional string op_id = 3;
  if (has_op_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_id().data(), this->op_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Headers.op_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->op_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Headers)
}

::google::protobuf::uint8* Headers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Headers)
  // optional int32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional int32 min_required_version = 2;
  if (has_min_required_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_required_version(), target);
  }

  // optional string op_id = 3;
  if (has_op_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_id().data(), this->op_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Headers.op_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->op_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Headers)
  return target;
}

size_t Headers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Headers)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 min_required_version = 2;
    if (has_min_required_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_required_version());
    }

    // optional string op_id = 3;
    if (has_op_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Headers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Headers)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Headers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Headers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Headers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Headers)
    UnsafeMergeFrom(*source);
  }
}

void Headers::MergeFrom(const Headers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Headers)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Headers::UnsafeMergeFrom(const Headers& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_min_required_version()) {
      set_min_required_version(from.min_required_version());
    }
    if (from.has_op_id()) {
      set_has_op_id();
      op_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Headers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Headers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Headers::CopyFrom(const Headers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Headers)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Headers::IsInitialized() const {

  return true;
}

void Headers::Swap(Headers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Headers::InternalSwap(Headers* other) {
  std::swap(version_, other->version_);
  std::swap(min_required_version_, other->min_required_version_);
  op_id_.Swap(&other->op_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Headers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Headers_descriptor_;
  metadata.reflection = Headers_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Headers

// optional int32 version = 1;
bool Headers::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Headers::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void Headers::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void Headers::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 Headers::version() const {
  // @@protoc_insertion_point(field_get:Headers.version)
  return version_;
}
void Headers::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Headers.version)
}

// optional int32 min_required_version = 2;
bool Headers::has_min_required_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Headers::set_has_min_required_version() {
  _has_bits_[0] |= 0x00000002u;
}
void Headers::clear_has_min_required_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void Headers::clear_min_required_version() {
  min_required_version_ = 0;
  clear_has_min_required_version();
}
::google::protobuf::int32 Headers::min_required_version() const {
  // @@protoc_insertion_point(field_get:Headers.min_required_version)
  return min_required_version_;
}
void Headers::set_min_required_version(::google::protobuf::int32 value) {
  set_has_min_required_version();
  min_required_version_ = value;
  // @@protoc_insertion_point(field_set:Headers.min_required_version)
}

// optional string op_id = 3;
bool Headers::has_op_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Headers::set_has_op_id() {
  _has_bits_[0] |= 0x00000004u;
}
void Headers::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void Headers::clear_op_id() {
  op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_id();
}
const ::std::string& Headers::op_id() const {
  // @@protoc_insertion_point(field_get:Headers.op_id)
  return op_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Headers::set_op_id(const ::std::string& value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Headers.op_id)
}
void Headers::set_op_id(const char* value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Headers.op_id)
}
void Headers::set_op_id(const char* value, size_t size) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Headers.op_id)
}
::std::string* Headers::mutable_op_id() {
  set_has_op_id();
  // @@protoc_insertion_point(field_mutable:Headers.op_id)
  return op_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Headers::release_op_id() {
  // @@protoc_insertion_point(field_release:Headers.op_id)
  clear_has_op_id();
  return op_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Headers::set_allocated_op_id(::std::string* op_id) {
  if (op_id != NULL) {
    set_has_op_id();
  } else {
    clear_has_op_id();
  }
  op_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_id);
  // @@protoc_insertion_point(field_set_allocated:Headers.op_id)
}

inline const Headers* Headers::internal_default_instance() {
  return &Headers_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhotoUpdate::kMetadataFieldNumber;
const int PhotoUpdate::kTnGetUrlFieldNumber;
const int PhotoUpdate::kTnPutUrlFieldNumber;
const int PhotoUpdate::kMedGetUrlFieldNumber;
const int PhotoUpdate::kMedPutUrlFieldNumber;
const int PhotoUpdate::kFullGetUrlFieldNumber;
const int PhotoUpdate::kFullPutUrlFieldNumber;
const int PhotoUpdate::kOrigGetUrlFieldNumber;
const int PhotoUpdate::kOrigPutUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhotoUpdate::PhotoUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhotoUpdate)
}

void PhotoUpdate::InitAsDefaultInstance() {
  metadata_ = const_cast< ::PhotoMetadata*>(
      ::PhotoMetadata::internal_default_instance());
}

PhotoUpdate::PhotoUpdate(const PhotoUpdate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PhotoUpdate)
}

void PhotoUpdate::SharedCtor() {
  _cached_size_ = 0;
  tn_get_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tn_put_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  med_get_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  med_put_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_get_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_put_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_get_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_put_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
}

PhotoUpdate::~PhotoUpdate() {
  // @@protoc_insertion_point(destructor:PhotoUpdate)
  SharedDtor();
}

void PhotoUpdate::SharedDtor() {
  tn_get_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tn_put_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  med_get_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  med_put_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_get_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_put_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_get_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orig_put_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &PhotoUpdate_default_instance_.get()) {
    delete metadata_;
  }
}

void PhotoUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhotoUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PhotoUpdate_descriptor_;
}

const PhotoUpdate& PhotoUpdate::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PhotoUpdate> PhotoUpdate_default_instance_;

PhotoUpdate* PhotoUpdate::New(::google::protobuf::Arena* arena) const {
  PhotoUpdate* n = new PhotoUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhotoUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:PhotoUpdate)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::PhotoMetadata::Clear();
    }
    if (has_tn_get_url()) {
      tn_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tn_put_url()) {
      tn_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_med_get_url()) {
      med_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_med_put_url()) {
      med_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_full_get_url()) {
      full_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_full_put_url()) {
      full_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_orig_get_url()) {
      orig_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_orig_put_url()) {
    orig_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PhotoUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PhotoUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PhotoMetadata metadata = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tn_get_url;
        break;
      }

      // optional string tn_get_url = 2;
      case 2: {
        if (tag == 18) {
         parse_tn_get_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tn_get_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tn_get_url().data(), this->tn_get_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.tn_get_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tn_put_url;
        break;
      }

      // optional string tn_put_url = 3;
      case 3: {
        if (tag == 26) {
         parse_tn_put_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tn_put_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tn_put_url().data(), this->tn_put_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.tn_put_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_med_get_url;
        break;
      }

      // optional string med_get_url = 4;
      case 4: {
        if (tag == 34) {
         parse_med_get_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_med_get_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->med_get_url().data(), this->med_get_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.med_get_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_med_put_url;
        break;
      }

      // optional string med_put_url = 5;
      case 5: {
        if (tag == 42) {
         parse_med_put_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_med_put_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->med_put_url().data(), this->med_put_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.med_put_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_full_get_url;
        break;
      }

      // optional string full_get_url = 6;
      case 6: {
        if (tag == 50) {
         parse_full_get_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_get_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_get_url().data(), this->full_get_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.full_get_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_full_put_url;
        break;
      }

      // optional string full_put_url = 7;
      case 7: {
        if (tag == 58) {
         parse_full_put_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_put_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_put_url().data(), this->full_put_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.full_put_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_orig_get_url;
        break;
      }

      // optional string orig_get_url = 8;
      case 8: {
        if (tag == 66) {
         parse_orig_get_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orig_get_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orig_get_url().data(), this->orig_get_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.orig_get_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_orig_put_url;
        break;
      }

      // optional string orig_put_url = 9;
      case 9: {
        if (tag == 74) {
         parse_orig_put_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orig_put_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orig_put_url().data(), this->orig_put_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PhotoUpdate.orig_put_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PhotoUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PhotoUpdate)
  return false;
#undef DO_
}

void PhotoUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PhotoUpdate)
  // optional .PhotoMetadata metadata = 1;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->metadata_, output);
  }

  // optional string tn_get_url = 2;
  if (has_tn_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tn_get_url().data(), this->tn_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.tn_get_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tn_get_url(), output);
  }

  // optional string tn_put_url = 3;
  if (has_tn_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tn_put_url().data(), this->tn_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.tn_put_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tn_put_url(), output);
  }

  // optional string med_get_url = 4;
  if (has_med_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->med_get_url().data(), this->med_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.med_get_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->med_get_url(), output);
  }

  // optional string med_put_url = 5;
  if (has_med_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->med_put_url().data(), this->med_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.med_put_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->med_put_url(), output);
  }

  // optional string full_get_url = 6;
  if (has_full_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_get_url().data(), this->full_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.full_get_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->full_get_url(), output);
  }

  // optional string full_put_url = 7;
  if (has_full_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_put_url().data(), this->full_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.full_put_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->full_put_url(), output);
  }

  // optional string orig_get_url = 8;
  if (has_orig_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_get_url().data(), this->orig_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.orig_get_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->orig_get_url(), output);
  }

  // optional string orig_put_url = 9;
  if (has_orig_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_put_url().data(), this->orig_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.orig_put_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->orig_put_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PhotoUpdate)
}

::google::protobuf::uint8* PhotoUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PhotoUpdate)
  // optional .PhotoMetadata metadata = 1;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->metadata_, false, target);
  }

  // optional string tn_get_url = 2;
  if (has_tn_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tn_get_url().data(), this->tn_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.tn_get_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tn_get_url(), target);
  }

  // optional string tn_put_url = 3;
  if (has_tn_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tn_put_url().data(), this->tn_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.tn_put_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tn_put_url(), target);
  }

  // optional string med_get_url = 4;
  if (has_med_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->med_get_url().data(), this->med_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.med_get_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->med_get_url(), target);
  }

  // optional string med_put_url = 5;
  if (has_med_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->med_put_url().data(), this->med_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.med_put_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->med_put_url(), target);
  }

  // optional string full_get_url = 6;
  if (has_full_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_get_url().data(), this->full_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.full_get_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->full_get_url(), target);
  }

  // optional string full_put_url = 7;
  if (has_full_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_put_url().data(), this->full_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.full_put_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->full_put_url(), target);
  }

  // optional string orig_get_url = 8;
  if (has_orig_get_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_get_url().data(), this->orig_get_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.orig_get_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->orig_get_url(), target);
  }

  // optional string orig_put_url = 9;
  if (has_orig_put_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_put_url().data(), this->orig_put_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PhotoUpdate.orig_put_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->orig_put_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhotoUpdate)
  return target;
}

size_t PhotoUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhotoUpdate)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .PhotoMetadata metadata = 1;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->metadata_);
    }

    // optional string tn_get_url = 2;
    if (has_tn_get_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tn_get_url());
    }

    // optional string tn_put_url = 3;
    if (has_tn_put_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tn_put_url());
    }

    // optional string med_get_url = 4;
    if (has_med_get_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->med_get_url());
    }

    // optional string med_put_url = 5;
    if (has_med_put_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->med_put_url());
    }

    // optional string full_get_url = 6;
    if (has_full_get_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_get_url());
    }

    // optional string full_put_url = 7;
    if (has_full_put_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_put_url());
    }

    // optional string orig_get_url = 8;
    if (has_orig_get_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orig_get_url());
    }

  }
  // optional string orig_put_url = 9;
  if (has_orig_put_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orig_put_url());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhotoUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhotoUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PhotoUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhotoUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhotoUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhotoUpdate)
    UnsafeMergeFrom(*source);
  }
}

void PhotoUpdate::MergeFrom(const PhotoUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhotoUpdate)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PhotoUpdate::UnsafeMergeFrom(const PhotoUpdate& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_metadata()) {
      mutable_metadata()->::PhotoMetadata::MergeFrom(from.metadata());
    }
    if (from.has_tn_get_url()) {
      set_has_tn_get_url();
      tn_get_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tn_get_url_);
    }
    if (from.has_tn_put_url()) {
      set_has_tn_put_url();
      tn_put_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tn_put_url_);
    }
    if (from.has_med_get_url()) {
      set_has_med_get_url();
      med_get_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.med_get_url_);
    }
    if (from.has_med_put_url()) {
      set_has_med_put_url();
      med_put_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.med_put_url_);
    }
    if (from.has_full_get_url()) {
      set_has_full_get_url();
      full_get_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_get_url_);
    }
    if (from.has_full_put_url()) {
      set_has_full_put_url();
      full_put_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_put_url_);
    }
    if (from.has_orig_get_url()) {
      set_has_orig_get_url();
      orig_get_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_get_url_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_orig_put_url()) {
      set_has_orig_put_url();
      orig_put_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_put_url_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PhotoUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhotoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhotoUpdate::CopyFrom(const PhotoUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhotoUpdate)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PhotoUpdate::IsInitialized() const {

  return true;
}

void PhotoUpdate::Swap(PhotoUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhotoUpdate::InternalSwap(PhotoUpdate* other) {
  std::swap(metadata_, other->metadata_);
  tn_get_url_.Swap(&other->tn_get_url_);
  tn_put_url_.Swap(&other->tn_put_url_);
  med_get_url_.Swap(&other->med_get_url_);
  med_put_url_.Swap(&other->med_put_url_);
  full_get_url_.Swap(&other->full_get_url_);
  full_put_url_.Swap(&other->full_put_url_);
  orig_get_url_.Swap(&other->orig_get_url_);
  orig_put_url_.Swap(&other->orig_put_url_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhotoUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PhotoUpdate_descriptor_;
  metadata.reflection = PhotoUpdate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhotoUpdate

// optional .PhotoMetadata metadata = 1;
bool PhotoUpdate::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PhotoUpdate::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
void PhotoUpdate::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
void PhotoUpdate::clear_metadata() {
  if (metadata_ != NULL) metadata_->::PhotoMetadata::Clear();
  clear_has_metadata();
}
const ::PhotoMetadata& PhotoUpdate::metadata() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::PhotoMetadata::internal_default_instance();
}
::PhotoMetadata* PhotoUpdate::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::PhotoMetadata;
  }
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.metadata)
  return metadata_;
}
::PhotoMetadata* PhotoUpdate::release_metadata() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.metadata)
  clear_has_metadata();
  ::PhotoMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void PhotoUpdate::set_allocated_metadata(::PhotoMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.metadata)
}

// optional string tn_get_url = 2;
bool PhotoUpdate::has_tn_get_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PhotoUpdate::set_has_tn_get_url() {
  _has_bits_[0] |= 0x00000002u;
}
void PhotoUpdate::clear_has_tn_get_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void PhotoUpdate::clear_tn_get_url() {
  tn_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tn_get_url();
}
const ::std::string& PhotoUpdate::tn_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.tn_get_url)
  return tn_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_tn_get_url(const ::std::string& value) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.tn_get_url)
}
void PhotoUpdate::set_tn_get_url(const char* value) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.tn_get_url)
}
void PhotoUpdate::set_tn_get_url(const char* value, size_t size) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.tn_get_url)
}
::std::string* PhotoUpdate::mutable_tn_get_url() {
  set_has_tn_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.tn_get_url)
  return tn_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_tn_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.tn_get_url)
  clear_has_tn_get_url();
  return tn_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_tn_get_url(::std::string* tn_get_url) {
  if (tn_get_url != NULL) {
    set_has_tn_get_url();
  } else {
    clear_has_tn_get_url();
  }
  tn_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tn_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.tn_get_url)
}

// optional string tn_put_url = 3;
bool PhotoUpdate::has_tn_put_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PhotoUpdate::set_has_tn_put_url() {
  _has_bits_[0] |= 0x00000004u;
}
void PhotoUpdate::clear_has_tn_put_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void PhotoUpdate::clear_tn_put_url() {
  tn_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tn_put_url();
}
const ::std::string& PhotoUpdate::tn_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.tn_put_url)
  return tn_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_tn_put_url(const ::std::string& value) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.tn_put_url)
}
void PhotoUpdate::set_tn_put_url(const char* value) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.tn_put_url)
}
void PhotoUpdate::set_tn_put_url(const char* value, size_t size) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.tn_put_url)
}
::std::string* PhotoUpdate::mutable_tn_put_url() {
  set_has_tn_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.tn_put_url)
  return tn_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_tn_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.tn_put_url)
  clear_has_tn_put_url();
  return tn_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_tn_put_url(::std::string* tn_put_url) {
  if (tn_put_url != NULL) {
    set_has_tn_put_url();
  } else {
    clear_has_tn_put_url();
  }
  tn_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tn_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.tn_put_url)
}

// optional string med_get_url = 4;
bool PhotoUpdate::has_med_get_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PhotoUpdate::set_has_med_get_url() {
  _has_bits_[0] |= 0x00000008u;
}
void PhotoUpdate::clear_has_med_get_url() {
  _has_bits_[0] &= ~0x00000008u;
}
void PhotoUpdate::clear_med_get_url() {
  med_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_med_get_url();
}
const ::std::string& PhotoUpdate::med_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.med_get_url)
  return med_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_med_get_url(const ::std::string& value) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.med_get_url)
}
void PhotoUpdate::set_med_get_url(const char* value) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.med_get_url)
}
void PhotoUpdate::set_med_get_url(const char* value, size_t size) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.med_get_url)
}
::std::string* PhotoUpdate::mutable_med_get_url() {
  set_has_med_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.med_get_url)
  return med_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_med_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.med_get_url)
  clear_has_med_get_url();
  return med_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_med_get_url(::std::string* med_get_url) {
  if (med_get_url != NULL) {
    set_has_med_get_url();
  } else {
    clear_has_med_get_url();
  }
  med_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), med_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.med_get_url)
}

// optional string med_put_url = 5;
bool PhotoUpdate::has_med_put_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PhotoUpdate::set_has_med_put_url() {
  _has_bits_[0] |= 0x00000010u;
}
void PhotoUpdate::clear_has_med_put_url() {
  _has_bits_[0] &= ~0x00000010u;
}
void PhotoUpdate::clear_med_put_url() {
  med_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_med_put_url();
}
const ::std::string& PhotoUpdate::med_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.med_put_url)
  return med_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_med_put_url(const ::std::string& value) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.med_put_url)
}
void PhotoUpdate::set_med_put_url(const char* value) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.med_put_url)
}
void PhotoUpdate::set_med_put_url(const char* value, size_t size) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.med_put_url)
}
::std::string* PhotoUpdate::mutable_med_put_url() {
  set_has_med_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.med_put_url)
  return med_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_med_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.med_put_url)
  clear_has_med_put_url();
  return med_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_med_put_url(::std::string* med_put_url) {
  if (med_put_url != NULL) {
    set_has_med_put_url();
  } else {
    clear_has_med_put_url();
  }
  med_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), med_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.med_put_url)
}

// optional string full_get_url = 6;
bool PhotoUpdate::has_full_get_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PhotoUpdate::set_has_full_get_url() {
  _has_bits_[0] |= 0x00000020u;
}
void PhotoUpdate::clear_has_full_get_url() {
  _has_bits_[0] &= ~0x00000020u;
}
void PhotoUpdate::clear_full_get_url() {
  full_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_get_url();
}
const ::std::string& PhotoUpdate::full_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.full_get_url)
  return full_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_full_get_url(const ::std::string& value) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.full_get_url)
}
void PhotoUpdate::set_full_get_url(const char* value) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.full_get_url)
}
void PhotoUpdate::set_full_get_url(const char* value, size_t size) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.full_get_url)
}
::std::string* PhotoUpdate::mutable_full_get_url() {
  set_has_full_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.full_get_url)
  return full_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_full_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.full_get_url)
  clear_has_full_get_url();
  return full_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_full_get_url(::std::string* full_get_url) {
  if (full_get_url != NULL) {
    set_has_full_get_url();
  } else {
    clear_has_full_get_url();
  }
  full_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.full_get_url)
}

// optional string full_put_url = 7;
bool PhotoUpdate::has_full_put_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PhotoUpdate::set_has_full_put_url() {
  _has_bits_[0] |= 0x00000040u;
}
void PhotoUpdate::clear_has_full_put_url() {
  _has_bits_[0] &= ~0x00000040u;
}
void PhotoUpdate::clear_full_put_url() {
  full_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_put_url();
}
const ::std::string& PhotoUpdate::full_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.full_put_url)
  return full_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_full_put_url(const ::std::string& value) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.full_put_url)
}
void PhotoUpdate::set_full_put_url(const char* value) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.full_put_url)
}
void PhotoUpdate::set_full_put_url(const char* value, size_t size) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.full_put_url)
}
::std::string* PhotoUpdate::mutable_full_put_url() {
  set_has_full_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.full_put_url)
  return full_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_full_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.full_put_url)
  clear_has_full_put_url();
  return full_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_full_put_url(::std::string* full_put_url) {
  if (full_put_url != NULL) {
    set_has_full_put_url();
  } else {
    clear_has_full_put_url();
  }
  full_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.full_put_url)
}

// optional string orig_get_url = 8;
bool PhotoUpdate::has_orig_get_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PhotoUpdate::set_has_orig_get_url() {
  _has_bits_[0] |= 0x00000080u;
}
void PhotoUpdate::clear_has_orig_get_url() {
  _has_bits_[0] &= ~0x00000080u;
}
void PhotoUpdate::clear_orig_get_url() {
  orig_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_get_url();
}
const ::std::string& PhotoUpdate::orig_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.orig_get_url)
  return orig_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_orig_get_url(const ::std::string& value) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.orig_get_url)
}
void PhotoUpdate::set_orig_get_url(const char* value) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.orig_get_url)
}
void PhotoUpdate::set_orig_get_url(const char* value, size_t size) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.orig_get_url)
}
::std::string* PhotoUpdate::mutable_orig_get_url() {
  set_has_orig_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.orig_get_url)
  return orig_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_orig_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.orig_get_url)
  clear_has_orig_get_url();
  return orig_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_orig_get_url(::std::string* orig_get_url) {
  if (orig_get_url != NULL) {
    set_has_orig_get_url();
  } else {
    clear_has_orig_get_url();
  }
  orig_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.orig_get_url)
}

// optional string orig_put_url = 9;
bool PhotoUpdate::has_orig_put_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PhotoUpdate::set_has_orig_put_url() {
  _has_bits_[0] |= 0x00000100u;
}
void PhotoUpdate::clear_has_orig_put_url() {
  _has_bits_[0] &= ~0x00000100u;
}
void PhotoUpdate::clear_orig_put_url() {
  orig_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_put_url();
}
const ::std::string& PhotoUpdate::orig_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.orig_put_url)
  return orig_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_orig_put_url(const ::std::string& value) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.orig_put_url)
}
void PhotoUpdate::set_orig_put_url(const char* value) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.orig_put_url)
}
void PhotoUpdate::set_orig_put_url(const char* value, size_t size) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.orig_put_url)
}
::std::string* PhotoUpdate::mutable_orig_put_url() {
  set_has_orig_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.orig_put_url)
  return orig_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhotoUpdate::release_orig_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.orig_put_url)
  clear_has_orig_put_url();
  return orig_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhotoUpdate::set_allocated_orig_put_url(::std::string* orig_put_url) {
  if (orig_put_url != NULL) {
    set_has_orig_put_url();
  } else {
    clear_has_orig_put_url();
  }
  orig_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.orig_put_url)
}

inline const PhotoUpdate* PhotoUpdate::internal_default_instance() {
  return &PhotoUpdate_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountSettingsMetadata::kEmailAlertsFieldNumber;
const int AccountSettingsMetadata::kStorageOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountSettingsMetadata::AccountSettingsMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountSettingsMetadata)
}

void AccountSettingsMetadata::InitAsDefaultInstance() {
}

AccountSettingsMetadata::AccountSettingsMetadata(const AccountSettingsMetadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountSettingsMetadata)
}

void AccountSettingsMetadata::SharedCtor() {
  _cached_size_ = 0;
  email_alerts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountSettingsMetadata::~AccountSettingsMetadata() {
  // @@protoc_insertion_point(destructor:AccountSettingsMetadata)
  SharedDtor();
}

void AccountSettingsMetadata::SharedDtor() {
  email_alerts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountSettingsMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountSettingsMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountSettingsMetadata_descriptor_;
}

const AccountSettingsMetadata& AccountSettingsMetadata::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AccountSettingsMetadata> AccountSettingsMetadata_default_instance_;

AccountSettingsMetadata* AccountSettingsMetadata::New(::google::protobuf::Arena* arena) const {
  AccountSettingsMetadata* n = new AccountSettingsMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountSettingsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountSettingsMetadata)
  if (has_email_alerts()) {
    email_alerts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  storage_options_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AccountSettingsMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountSettingsMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email_alerts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_alerts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email_alerts().data(), this->email_alerts().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountSettingsMetadata.email_alerts");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_storage_options;
        break;
      }

      // repeated string storage_options = 2;
      case 2: {
        if (tag == 18) {
         parse_storage_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_storage_options()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->storage_options(this->storage_options_size() - 1).data(),
            this->storage_options(this->storage_options_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountSettingsMetadata.storage_options");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_storage_options;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountSettingsMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountSettingsMetadata)
  return false;
#undef DO_
}

void AccountSettingsMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountSettingsMetadata)
  // optional string email_alerts = 1;
  if (has_email_alerts()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_alerts().data(), this->email_alerts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountSettingsMetadata.email_alerts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email_alerts(), output);
  }

  // repeated string storage_options = 2;
  for (int i = 0; i < this->storage_options_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storage_options(i).data(), this->storage_options(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountSettingsMetadata.storage_options");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->storage_options(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountSettingsMetadata)
}

::google::protobuf::uint8* AccountSettingsMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountSettingsMetadata)
  // optional string email_alerts = 1;
  if (has_email_alerts()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_alerts().data(), this->email_alerts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountSettingsMetadata.email_alerts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email_alerts(), target);
  }

  // repeated string storage_options = 2;
  for (int i = 0; i < this->storage_options_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storage_options(i).data(), this->storage_options(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountSettingsMetadata.storage_options");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->storage_options(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountSettingsMetadata)
  return target;
}

size_t AccountSettingsMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountSettingsMetadata)
  size_t total_size = 0;

  // optional string email_alerts = 1;
  if (has_email_alerts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email_alerts());
  }

  // repeated string storage_options = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->storage_options_size());
  for (int i = 0; i < this->storage_options_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->storage_options(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountSettingsMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountSettingsMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AccountSettingsMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountSettingsMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountSettingsMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountSettingsMetadata)
    UnsafeMergeFrom(*source);
  }
}

void AccountSettingsMetadata::MergeFrom(const AccountSettingsMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountSettingsMetadata)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AccountSettingsMetadata::UnsafeMergeFrom(const AccountSettingsMetadata& from) {
  GOOGLE_DCHECK(&from != this);
  storage_options_.UnsafeMergeFrom(from.storage_options_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_email_alerts()) {
      set_has_email_alerts();
      email_alerts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_alerts_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AccountSettingsMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountSettingsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountSettingsMetadata::CopyFrom(const AccountSettingsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountSettingsMetadata)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AccountSettingsMetadata::IsInitialized() const {

  return true;
}

void AccountSettingsMetadata::Swap(AccountSettingsMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountSettingsMetadata::InternalSwap(AccountSettingsMetadata* other) {
  email_alerts_.Swap(&other->email_alerts_);
  storage_options_.UnsafeArenaSwap(&other->storage_options_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountSettingsMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountSettingsMetadata_descriptor_;
  metadata.reflection = AccountSettingsMetadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountSettingsMetadata

// optional string email_alerts = 1;
bool AccountSettingsMetadata::has_email_alerts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AccountSettingsMetadata::set_has_email_alerts() {
  _has_bits_[0] |= 0x00000001u;
}
void AccountSettingsMetadata::clear_has_email_alerts() {
  _has_bits_[0] &= ~0x00000001u;
}
void AccountSettingsMetadata::clear_email_alerts() {
  email_alerts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email_alerts();
}
const ::std::string& AccountSettingsMetadata::email_alerts() const {
  // @@protoc_insertion_point(field_get:AccountSettingsMetadata.email_alerts)
  return email_alerts_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountSettingsMetadata::set_email_alerts(const ::std::string& value) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountSettingsMetadata.email_alerts)
}
void AccountSettingsMetadata::set_email_alerts(const char* value) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountSettingsMetadata.email_alerts)
}
void AccountSettingsMetadata::set_email_alerts(const char* value, size_t size) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountSettingsMetadata.email_alerts)
}
::std::string* AccountSettingsMetadata::mutable_email_alerts() {
  set_has_email_alerts();
  // @@protoc_insertion_point(field_mutable:AccountSettingsMetadata.email_alerts)
  return email_alerts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountSettingsMetadata::release_email_alerts() {
  // @@protoc_insertion_point(field_release:AccountSettingsMetadata.email_alerts)
  clear_has_email_alerts();
  return email_alerts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountSettingsMetadata::set_allocated_email_alerts(::std::string* email_alerts) {
  if (email_alerts != NULL) {
    set_has_email_alerts();
  } else {
    clear_has_email_alerts();
  }
  email_alerts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email_alerts);
  // @@protoc_insertion_point(field_set_allocated:AccountSettingsMetadata.email_alerts)
}

// repeated string storage_options = 2;
int AccountSettingsMetadata::storage_options_size() const {
  return storage_options_.size();
}
void AccountSettingsMetadata::clear_storage_options() {
  storage_options_.Clear();
}
const ::std::string& AccountSettingsMetadata::storage_options(int index) const {
  // @@protoc_insertion_point(field_get:AccountSettingsMetadata.storage_options)
  return storage_options_.Get(index);
}
::std::string* AccountSettingsMetadata::mutable_storage_options(int index) {
  // @@protoc_insertion_point(field_mutable:AccountSettingsMetadata.storage_options)
  return storage_options_.Mutable(index);
}
void AccountSettingsMetadata::set_storage_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AccountSettingsMetadata.storage_options)
  storage_options_.Mutable(index)->assign(value);
}
void AccountSettingsMetadata::set_storage_options(int index, const char* value) {
  storage_options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AccountSettingsMetadata.storage_options)
}
void AccountSettingsMetadata::set_storage_options(int index, const char* value, size_t size) {
  storage_options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AccountSettingsMetadata.storage_options)
}
::std::string* AccountSettingsMetadata::add_storage_options() {
  // @@protoc_insertion_point(field_add_mutable:AccountSettingsMetadata.storage_options)
  return storage_options_.Add();
}
void AccountSettingsMetadata::add_storage_options(const ::std::string& value) {
  storage_options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AccountSettingsMetadata.storage_options)
}
void AccountSettingsMetadata::add_storage_options(const char* value) {
  storage_options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AccountSettingsMetadata.storage_options)
}
void AccountSettingsMetadata::add_storage_options(const char* value, size_t size) {
  storage_options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AccountSettingsMetadata.storage_options)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AccountSettingsMetadata::storage_options() const {
  // @@protoc_insertion_point(field_list:AccountSettingsMetadata.storage_options)
  return storage_options_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AccountSettingsMetadata::mutable_storage_options() {
  // @@protoc_insertion_point(field_mutable_list:AccountSettingsMetadata.storage_options)
  return &storage_options_;
}

inline const AccountSettingsMetadata* AccountSettingsMetadata::internal_default_instance() {
  return &AccountSettingsMetadata_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthResponse::kHeadersFieldNumber;
const int AuthResponse::kUserIdFieldNumber;
const int AuthResponse::kDeviceIdFieldNumber;
const int AuthResponse::kTokenDigitsFieldNumber;
const int AuthResponse::kCookieFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthResponse::AuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthResponse)
}

void AuthResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

AuthResponse::AuthResponse(const AuthResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AuthResponse)
}

void AuthResponse::SharedCtor() {
  _cached_size_ = 0;
  cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headers_ = NULL;
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&token_digits_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(token_digits_));
}

AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:AuthResponse)
  SharedDtor();
}

void AuthResponse::SharedDtor() {
  cookie_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &AuthResponse_default_instance_.get()) {
    delete headers_;
  }
}

void AuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthResponse_descriptor_;
}

const AuthResponse& AuthResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthResponse> AuthResponse_default_instance_;

AuthResponse* AuthResponse::New(::google::protobuf::Arena* arena) const {
  AuthResponse* n = new AuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AuthResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AuthResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(user_id_, token_digits_);
    if (has_headers()) {
      if (headers_ != NULL) headers_->::Headers::Clear();
    }
    if (has_cookie()) {
      cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional int64 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_device_id;
        break;
      }

      // optional int64 device_id = 3;
      case 3: {
        if (tag == 24) {
         parse_device_id:
          set_has_device_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_token_digits;
        break;
      }

      // optional int32 token_digits = 4;
      case 4: {
        if (tag == 32) {
         parse_token_digits:
          set_has_token_digits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &token_digits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cookie;
        break;
      }

      // optional string cookie = 5;
      case 5: {
        if (tag == 42) {
         parse_cookie:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cookie()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cookie().data(), this->cookie().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AuthResponse.cookie");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthResponse)
  return false;
#undef DO_
}

void AuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // optional int64 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->user_id(), output);
  }

  // optional int64 device_id = 3;
  if (has_device_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->device_id(), output);
  }

  // optional int32 token_digits = 4;
  if (has_token_digits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->token_digits(), output);
  }

  // optional string cookie = 5;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cookie().data(), this->cookie().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthResponse.cookie");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cookie(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AuthResponse)
}

::google::protobuf::uint8* AuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AuthResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // optional int64 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->user_id(), target);
  }

  // optional int64 device_id = 3;
  if (has_device_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->device_id(), target);
  }

  // optional int32 token_digits = 4;
  if (has_token_digits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->token_digits(), target);
  }

  // optional string cookie = 5;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cookie().data(), this->cookie().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthResponse.cookie");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cookie(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AuthResponse)
  return target;
}

size_t AuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional .Headers headers = 1;
    if (has_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->headers_);
    }

    // optional int64 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->user_id());
    }

    // optional int64 device_id = 3;
    if (has_device_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->device_id());
    }

    // optional int32 token_digits = 4;
    if (has_token_digits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->token_digits());
    }

    // optional string cookie = 5;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cookie());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthResponse)
    UnsafeMergeFrom(*source);
  }
}

void AuthResponse::MergeFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthResponse::UnsafeMergeFrom(const AuthResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_device_id()) {
      set_device_id(from.device_id());
    }
    if (from.has_token_digits()) {
      set_token_digits(from.token_digits());
    }
    if (from.has_cookie()) {
      set_has_cookie();
      cookie_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cookie_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthResponse::IsInitialized() const {

  return true;
}

void AuthResponse::Swap(AuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthResponse::InternalSwap(AuthResponse* other) {
  std::swap(headers_, other->headers_);
  std::swap(user_id_, other->user_id_);
  std::swap(device_id_, other->device_id_);
  std::swap(token_digits_, other->token_digits_);
  cookie_.Swap(&other->cookie_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthResponse_descriptor_;
  metadata.reflection = AuthResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthResponse

// optional .Headers headers = 1;
bool AuthResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& AuthResponse::headers() const {
  // @@protoc_insertion_point(field_get:AuthResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* AuthResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:AuthResponse.headers)
  return headers_;
}
::Headers* AuthResponse::release_headers() {
  // @@protoc_insertion_point(field_release:AuthResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void AuthResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:AuthResponse.headers)
}

// optional int64 user_id = 2;
bool AuthResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthResponse::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
::google::protobuf::int64 AuthResponse::user_id() const {
  // @@protoc_insertion_point(field_get:AuthResponse.user_id)
  return user_id_;
}
void AuthResponse::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.user_id)
}

// optional int64 device_id = 3;
bool AuthResponse::has_device_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AuthResponse::set_has_device_id() {
  _has_bits_[0] |= 0x00000004u;
}
void AuthResponse::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void AuthResponse::clear_device_id() {
  device_id_ = GOOGLE_LONGLONG(0);
  clear_has_device_id();
}
::google::protobuf::int64 AuthResponse::device_id() const {
  // @@protoc_insertion_point(field_get:AuthResponse.device_id)
  return device_id_;
}
void AuthResponse::set_device_id(::google::protobuf::int64 value) {
  set_has_device_id();
  device_id_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.device_id)
}

// optional int32 token_digits = 4;
bool AuthResponse::has_token_digits() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AuthResponse::set_has_token_digits() {
  _has_bits_[0] |= 0x00000008u;
}
void AuthResponse::clear_has_token_digits() {
  _has_bits_[0] &= ~0x00000008u;
}
void AuthResponse::clear_token_digits() {
  token_digits_ = 0;
  clear_has_token_digits();
}
::google::protobuf::int32 AuthResponse::token_digits() const {
  // @@protoc_insertion_point(field_get:AuthResponse.token_digits)
  return token_digits_;
}
void AuthResponse::set_token_digits(::google::protobuf::int32 value) {
  set_has_token_digits();
  token_digits_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.token_digits)
}

// optional string cookie = 5;
bool AuthResponse::has_cookie() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AuthResponse::set_has_cookie() {
  _has_bits_[0] |= 0x00000010u;
}
void AuthResponse::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000010u;
}
void AuthResponse::clear_cookie() {
  cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cookie();
}
const ::std::string& AuthResponse::cookie() const {
  // @@protoc_insertion_point(field_get:AuthResponse.cookie)
  return cookie_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthResponse::set_cookie(const ::std::string& value) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthResponse.cookie)
}
void AuthResponse::set_cookie(const char* value) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthResponse.cookie)
}
void AuthResponse::set_cookie(const char* value, size_t size) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthResponse.cookie)
}
::std::string* AuthResponse::mutable_cookie() {
  set_has_cookie();
  // @@protoc_insertion_point(field_mutable:AuthResponse.cookie)
  return cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthResponse::release_cookie() {
  // @@protoc_insertion_point(field_release:AuthResponse.cookie)
  clear_has_cookie();
  return cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthResponse::set_allocated_cookie(::std::string* cookie) {
  if (cookie != NULL) {
    set_has_cookie();
  } else {
    clear_has_cookie();
  }
  cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cookie);
  // @@protoc_insertion_point(field_set_allocated:AuthResponse.cookie)
}

inline const AuthResponse* AuthResponse::internal_default_instance() {
  return &AuthResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ErrorResponse_ErrorId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorResponse_ErrorId_descriptor_;
}
bool ErrorResponse_ErrorId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ErrorResponse_ErrorId ErrorResponse::OK;
const ErrorResponse_ErrorId ErrorResponse::UNKNOWN;
const ErrorResponse_ErrorId ErrorResponse::INVALID_JSON_REQUEST;
const ErrorResponse_ErrorId ErrorResponse::NO_USER_ACCOUNT;
const ErrorResponse_ErrorId ErrorResponse::UPDATE_PWD_NOT_CONFIRMED;
const ErrorResponse_ErrorId ErrorResponse::ALREADY_REGISTERED;
const ErrorResponse_ErrorId ErrorResponse::NETWORK_UNAVAILABLE;
const ErrorResponse_ErrorId ErrorResponse::ErrorId_MIN;
const ErrorResponse_ErrorId ErrorResponse::ErrorId_MAX;
const int ErrorResponse::ErrorId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorResponse_Error::kMethodFieldNumber;
const int ErrorResponse_Error::kTextFieldNumber;
const int ErrorResponse_Error::kErrorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorResponse_Error::ErrorResponse_Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ErrorResponse.Error)
}

void ErrorResponse_Error::InitAsDefaultInstance() {
}

ErrorResponse_Error::ErrorResponse_Error(const ErrorResponse_Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ErrorResponse.Error)
}

void ErrorResponse_Error::SharedCtor() {
  _cached_size_ = 0;
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_id_ = 1;
}

ErrorResponse_Error::~ErrorResponse_Error() {
  // @@protoc_insertion_point(destructor:ErrorResponse.Error)
  SharedDtor();
}

void ErrorResponse_Error::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorResponse_Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorResponse_Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorResponse_Error_descriptor_;
}

const ErrorResponse_Error& ErrorResponse_Error::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse_Error> ErrorResponse_Error_default_instance_;

ErrorResponse_Error* ErrorResponse_Error::New(::google::protobuf::Arena* arena) const {
  ErrorResponse_Error* n = new ErrorResponse_Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorResponse_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:ErrorResponse.Error)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_method()) {
      method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    error_id_ = 1;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ErrorResponse_Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ErrorResponse.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ErrorResponse.Error.method");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ErrorResponse.Error.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_error_id;
        break;
      }

      // optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
      case 3: {
        if (tag == 24) {
         parse_error_id:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ErrorResponse_ErrorId_IsValid(value)) {
            set_error_id(static_cast< ::ErrorResponse_ErrorId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ErrorResponse.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ErrorResponse.Error)
  return false;
#undef DO_
}

void ErrorResponse_Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ErrorResponse.Error)
  // optional string method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorResponse.Error.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorResponse.Error.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
  if (has_error_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ErrorResponse.Error)
}

::google::protobuf::uint8* ErrorResponse_Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ErrorResponse.Error)
  // optional string method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorResponse.Error.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorResponse.Error.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
  if (has_error_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->error_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ErrorResponse.Error)
  return target;
}

size_t ErrorResponse_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ErrorResponse.Error)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string method = 1;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
    if (has_error_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorResponse_Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ErrorResponse.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorResponse_Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorResponse_Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ErrorResponse.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ErrorResponse.Error)
    UnsafeMergeFrom(*source);
  }
}

void ErrorResponse_Error::MergeFrom(const ErrorResponse_Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ErrorResponse.Error)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorResponse_Error::UnsafeMergeFrom(const ErrorResponse_Error& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_method()) {
      set_has_method();
      method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_error_id()) {
      set_error_id(from.error_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ErrorResponse_Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ErrorResponse.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse_Error::CopyFrom(const ErrorResponse_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ErrorResponse.Error)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorResponse_Error::IsInitialized() const {

  return true;
}

void ErrorResponse_Error::Swap(ErrorResponse_Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorResponse_Error::InternalSwap(ErrorResponse_Error* other) {
  method_.Swap(&other->method_);
  text_.Swap(&other->text_);
  std::swap(error_id_, other->error_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorResponse_Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorResponse_Error_descriptor_;
  metadata.reflection = ErrorResponse_Error_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorResponse::ErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ErrorResponse)
}

void ErrorResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::ErrorResponse_Error*>(
      ::ErrorResponse_Error::internal_default_instance());
}

ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ErrorResponse)
}

void ErrorResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:ErrorResponse)
  SharedDtor();
}

void ErrorResponse::SharedDtor() {
  if (this != &ErrorResponse_default_instance_.get()) {
    delete error_;
  }
}

void ErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorResponse_descriptor_;
}

const ErrorResponse& ErrorResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse> ErrorResponse_default_instance_;

ErrorResponse* ErrorResponse::New(::google::protobuf::Arena* arena) const {
  ErrorResponse* n = new ErrorResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ErrorResponse)
  if (has_error()) {
    if (error_ != NULL) error_->::ErrorResponse_Error::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ErrorResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ErrorResponse.Error error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ErrorResponse)
  return false;
#undef DO_
}

void ErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ErrorResponse)
  // optional .ErrorResponse.Error error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ErrorResponse)
}

::google::protobuf::uint8* ErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ErrorResponse)
  // optional .ErrorResponse.Error error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ErrorResponse)
  size_t total_size = 0;

  // optional .ErrorResponse.Error error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ErrorResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ErrorResponse)
    UnsafeMergeFrom(*source);
  }
}

void ErrorResponse::MergeFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ErrorResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorResponse::UnsafeMergeFrom(const ErrorResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      mutable_error()->::ErrorResponse_Error::MergeFrom(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ErrorResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {

  return true;
}

void ErrorResponse::Swap(ErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorResponse::InternalSwap(ErrorResponse* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorResponse_descriptor_;
  metadata.reflection = ErrorResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorResponse_Error

// optional string method = 1;
bool ErrorResponse_Error::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ErrorResponse_Error::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
void ErrorResponse_Error::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
void ErrorResponse_Error::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
const ::std::string& ErrorResponse_Error::method() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorResponse_Error::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.method)
}
void ErrorResponse_Error::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorResponse.Error.method)
}
void ErrorResponse_Error::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorResponse.Error.method)
}
::std::string* ErrorResponse_Error::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:ErrorResponse.Error.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorResponse_Error::release_method() {
  // @@protoc_insertion_point(field_release:ErrorResponse.Error.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorResponse_Error::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.Error.method)
}

// optional string text = 2;
bool ErrorResponse_Error::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ErrorResponse_Error::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void ErrorResponse_Error::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void ErrorResponse_Error::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& ErrorResponse_Error::text() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorResponse_Error::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.text)
}
void ErrorResponse_Error::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorResponse.Error.text)
}
void ErrorResponse_Error::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorResponse.Error.text)
}
::std::string* ErrorResponse_Error::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ErrorResponse.Error.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorResponse_Error::release_text() {
  // @@protoc_insertion_point(field_release:ErrorResponse.Error.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorResponse_Error::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.Error.text)
}

// optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
bool ErrorResponse_Error::has_error_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ErrorResponse_Error::set_has_error_id() {
  _has_bits_[0] |= 0x00000004u;
}
void ErrorResponse_Error::clear_has_error_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void ErrorResponse_Error::clear_error_id() {
  error_id_ = 1;
  clear_has_error_id();
}
::ErrorResponse_ErrorId ErrorResponse_Error::error_id() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.error_id)
  return static_cast< ::ErrorResponse_ErrorId >(error_id_);
}
void ErrorResponse_Error::set_error_id(::ErrorResponse_ErrorId value) {
  assert(::ErrorResponse_ErrorId_IsValid(value));
  set_has_error_id();
  error_id_ = value;
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.error_id)
}

inline const ErrorResponse_Error* ErrorResponse_Error::internal_default_instance() {
  return &ErrorResponse_Error_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorResponse

// optional .ErrorResponse.Error error = 1;
bool ErrorResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ErrorResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void ErrorResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void ErrorResponse::clear_error() {
  if (error_ != NULL) error_->::ErrorResponse_Error::Clear();
  clear_has_error();
}
const ::ErrorResponse_Error& ErrorResponse::error() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.error)
  return error_ != NULL ? *error_
                         : *::ErrorResponse_Error::internal_default_instance();
}
::ErrorResponse_Error* ErrorResponse::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::ErrorResponse_Error;
  }
  // @@protoc_insertion_point(field_mutable:ErrorResponse.error)
  return error_;
}
::ErrorResponse_Error* ErrorResponse::release_error() {
  // @@protoc_insertion_point(field_release:ErrorResponse.error)
  clear_has_error();
  ::ErrorResponse_Error* temp = error_;
  error_ = NULL;
  return temp;
}
void ErrorResponse::set_allocated_error(::ErrorResponse_Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.error)
}

inline const ErrorResponse* ErrorResponse::internal_default_instance() {
  return &ErrorResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingResponse::PingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PingResponse)
}

void PingResponse::InitAsDefaultInstance() {
  message_ = const_cast< ::SystemMessage*>(
      ::SystemMessage::internal_default_instance());
}

PingResponse::PingResponse(const PingResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PingResponse)
}

void PingResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
}

PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:PingResponse)
  SharedDtor();
}

void PingResponse::SharedDtor() {
  if (this != &PingResponse_default_instance_.get()) {
    delete message_;
  }
}

void PingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingResponse_descriptor_;
}

const PingResponse& PingResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PingResponse> PingResponse_default_instance_;

PingResponse* PingResponse::New(::google::protobuf::Arena* arena) const {
  PingResponse* n = new PingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PingResponse)
  if (has_message()) {
    if (message_ != NULL) message_->::SystemMessage::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SystemMessage message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PingResponse)
  return false;
#undef DO_
}

void PingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PingResponse)
  // optional .SystemMessage message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PingResponse)
}

::google::protobuf::uint8* PingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PingResponse)
  // optional .SystemMessage message = 1;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PingResponse)
  return target;
}

size_t PingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PingResponse)
  size_t total_size = 0;

  // optional .SystemMessage message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PingResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PingResponse)
    UnsafeMergeFrom(*source);
  }
}

void PingResponse::MergeFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PingResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PingResponse::UnsafeMergeFrom(const PingResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      mutable_message()->::SystemMessage::MergeFrom(from.message());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PingResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PingResponse::IsInitialized() const {

  return true;
}

void PingResponse::Swap(PingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingResponse::InternalSwap(PingResponse* other) {
  std::swap(message_, other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingResponse_descriptor_;
  metadata.reflection = PingResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingResponse

// optional .SystemMessage message = 1;
bool PingResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PingResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void PingResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void PingResponse::clear_message() {
  if (message_ != NULL) message_->::SystemMessage::Clear();
  clear_has_message();
}
const ::SystemMessage& PingResponse::message() const {
  // @@protoc_insertion_point(field_get:PingResponse.message)
  return message_ != NULL ? *message_
                         : *::SystemMessage::internal_default_instance();
}
::SystemMessage* PingResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) {
    message_ = new ::SystemMessage;
  }
  // @@protoc_insertion_point(field_mutable:PingResponse.message)
  return message_;
}
::SystemMessage* PingResponse::release_message() {
  // @@protoc_insertion_point(field_release:PingResponse.message)
  clear_has_message();
  ::SystemMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void PingResponse::set_allocated_message(::SystemMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:PingResponse.message)
}

inline const PingResponse* PingResponse::internal_default_instance() {
  return &PingResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryContactsResponse::kHeadersFieldNumber;
const int QueryContactsResponse::kLastKeyFieldNumber;
const int QueryContactsResponse::kContactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryContactsResponse::QueryContactsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryContactsResponse)
}

void QueryContactsResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryContactsResponse::QueryContactsResponse(const QueryContactsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryContactsResponse)
}

void QueryContactsResponse::SharedCtor() {
  _cached_size_ = 0;
  last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headers_ = NULL;
}

QueryContactsResponse::~QueryContactsResponse() {
  // @@protoc_insertion_point(destructor:QueryContactsResponse)
  SharedDtor();
}

void QueryContactsResponse::SharedDtor() {
  last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryContactsResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryContactsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryContactsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryContactsResponse_descriptor_;
}

const QueryContactsResponse& QueryContactsResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryContactsResponse> QueryContactsResponse_default_instance_;

QueryContactsResponse* QueryContactsResponse::New(::google::protobuf::Arena* arena) const {
  QueryContactsResponse* n = new QueryContactsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryContactsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryContactsResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_headers()) {
      if (headers_ != NULL) headers_->::Headers::Clear();
    }
    if (has_last_key()) {
      last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  contacts_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryContactsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryContactsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_last_key;
        break;
      }

      // optional string last_key = 2;
      case 2: {
        if (tag == 18) {
         parse_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_key().data(), this->last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryContactsResponse.last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contacts;
        break;
      }

      // repeated .ContactMetadata contacts = 3;
      case 3: {
        if (tag == 26) {
         parse_contacts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contacts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contacts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_contacts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryContactsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryContactsResponse)
  return false;
#undef DO_
}

void QueryContactsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryContactsResponse.last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_key(), output);
  }

  // repeated .ContactMetadata contacts = 3;
  for (unsigned int i = 0, n = this->contacts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->contacts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryContactsResponse)
}

::google::protobuf::uint8* QueryContactsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryContactsResponse.last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_key(), target);
  }

  // repeated .ContactMetadata contacts = 3;
  for (unsigned int i = 0, n = this->contacts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->contacts(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryContactsResponse)
  return target;
}

size_t QueryContactsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryContactsResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .Headers headers = 1;
    if (has_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->headers_);
    }

    // optional string last_key = 2;
    if (has_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->last_key());
    }

  }
  // repeated .ContactMetadata contacts = 3;
  {
    unsigned int count = this->contacts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contacts(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryContactsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryContactsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryContactsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryContactsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryContactsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryContactsResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryContactsResponse::MergeFrom(const QueryContactsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryContactsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryContactsResponse::UnsafeMergeFrom(const QueryContactsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  contacts_.MergeFrom(from.contacts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
    if (from.has_last_key()) {
      set_has_last_key();
      last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryContactsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryContactsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryContactsResponse::CopyFrom(const QueryContactsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryContactsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryContactsResponse::IsInitialized() const {

  return true;
}

void QueryContactsResponse::Swap(QueryContactsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryContactsResponse::InternalSwap(QueryContactsResponse* other) {
  std::swap(headers_, other->headers_);
  last_key_.Swap(&other->last_key_);
  contacts_.UnsafeArenaSwap(&other->contacts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryContactsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryContactsResponse_descriptor_;
  metadata.reflection = QueryContactsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryContactsResponse

// optional .Headers headers = 1;
bool QueryContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.headers)
  return headers_;
}
::Headers* QueryContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryContactsResponse.headers)
}

// optional string last_key = 2;
bool QueryContactsResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryContactsResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryContactsResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryContactsResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
const ::std::string& QueryContactsResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryContactsResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryContactsResponse.last_key)
}
void QueryContactsResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryContactsResponse.last_key)
}
void QueryContactsResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryContactsResponse.last_key)
}
::std::string* QueryContactsResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryContactsResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryContactsResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryContactsResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryContactsResponse.last_key)
}

// repeated .ContactMetadata contacts = 3;
int QueryContactsResponse::contacts_size() const {
  return contacts_.size();
}
void QueryContactsResponse::clear_contacts() {
  contacts_.Clear();
}
const ::ContactMetadata& QueryContactsResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.contacts)
  return contacts_.Get(index);
}
::ContactMetadata* QueryContactsResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.contacts)
  return contacts_.Mutable(index);
}
::ContactMetadata* QueryContactsResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:QueryContactsResponse.contacts)
  return contacts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
QueryContactsResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:QueryContactsResponse.contacts)
  return &contacts_;
}
const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
QueryContactsResponse::contacts() const {
  // @@protoc_insertion_point(field_list:QueryContactsResponse.contacts)
  return contacts_;
}

inline const QueryContactsResponse* QueryContactsResponse::internal_default_instance() {
  return &QueryContactsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryEpisodesResponse_Episode::kLastKeyFieldNumber;
const int QueryEpisodesResponse_Episode::kMetadataFieldNumber;
const int QueryEpisodesResponse_Episode::kPhotosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryEpisodesResponse_Episode::QueryEpisodesResponse_Episode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryEpisodesResponse.Episode)
}

void QueryEpisodesResponse_Episode::InitAsDefaultInstance() {
  metadata_ = const_cast< ::EpisodeMetadata*>(
      ::EpisodeMetadata::internal_default_instance());
}

QueryEpisodesResponse_Episode::QueryEpisodesResponse_Episode(const QueryEpisodesResponse_Episode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryEpisodesResponse.Episode)
}

void QueryEpisodesResponse_Episode::SharedCtor() {
  _cached_size_ = 0;
  last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
}

QueryEpisodesResponse_Episode::~QueryEpisodesResponse_Episode() {
  // @@protoc_insertion_point(destructor:QueryEpisodesResponse.Episode)
  SharedDtor();
}

void QueryEpisodesResponse_Episode::SharedDtor() {
  last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryEpisodesResponse_Episode_default_instance_.get()) {
    delete metadata_;
  }
}

void QueryEpisodesResponse_Episode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryEpisodesResponse_Episode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryEpisodesResponse_Episode_descriptor_;
}

const QueryEpisodesResponse_Episode& QueryEpisodesResponse_Episode::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryEpisodesResponse_Episode> QueryEpisodesResponse_Episode_default_instance_;

QueryEpisodesResponse_Episode* QueryEpisodesResponse_Episode::New(::google::protobuf::Arena* arena) const {
  QueryEpisodesResponse_Episode* n = new QueryEpisodesResponse_Episode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryEpisodesResponse_Episode::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryEpisodesResponse.Episode)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_last_key()) {
      last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::EpisodeMetadata::Clear();
    }
  }
  photos_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryEpisodesResponse_Episode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryEpisodesResponse.Episode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string last_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_key().data(), this->last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryEpisodesResponse.Episode.last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_metadata;
        break;
      }

      // optional .EpisodeMetadata metadata = 2;
      case 2: {
        if (tag == 18) {
         parse_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_photos;
        break;
      }

      // repeated .PhotoUpdate photos = 3;
      case 3: {
        if (tag == 26) {
         parse_photos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_photos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryEpisodesResponse.Episode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryEpisodesResponse.Episode)
  return false;
#undef DO_
}

void QueryEpisodesResponse_Episode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryEpisodesResponse.Episode)
  // optional string last_key = 1;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryEpisodesResponse.Episode.last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->last_key(), output);
  }

  // optional .EpisodeMetadata metadata = 2;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // repeated .PhotoUpdate photos = 3;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->photos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryEpisodesResponse.Episode)
}

::google::protobuf::uint8* QueryEpisodesResponse_Episode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryEpisodesResponse.Episode)
  // optional string last_key = 1;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryEpisodesResponse.Episode.last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->last_key(), target);
  }

  // optional .EpisodeMetadata metadata = 2;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->metadata_, false, target);
  }

  // repeated .PhotoUpdate photos = 3;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->photos(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryEpisodesResponse.Episode)
  return target;
}

size_t QueryEpisodesResponse_Episode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryEpisodesResponse.Episode)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string last_key = 1;
    if (has_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->last_key());
    }

    // optional .EpisodeMetadata metadata = 2;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->metadata_);
    }

  }
  // repeated .PhotoUpdate photos = 3;
  {
    unsigned int count = this->photos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->photos(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryEpisodesResponse_Episode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryEpisodesResponse.Episode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryEpisodesResponse_Episode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryEpisodesResponse_Episode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryEpisodesResponse.Episode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryEpisodesResponse.Episode)
    UnsafeMergeFrom(*source);
  }
}

void QueryEpisodesResponse_Episode::MergeFrom(const QueryEpisodesResponse_Episode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryEpisodesResponse.Episode)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryEpisodesResponse_Episode::UnsafeMergeFrom(const QueryEpisodesResponse_Episode& from) {
  GOOGLE_DCHECK(&from != this);
  photos_.MergeFrom(from.photos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_key()) {
      set_has_last_key();
      last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_key_);
    }
    if (from.has_metadata()) {
      mutable_metadata()->::EpisodeMetadata::MergeFrom(from.metadata());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryEpisodesResponse_Episode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryEpisodesResponse.Episode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryEpisodesResponse_Episode::CopyFrom(const QueryEpisodesResponse_Episode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryEpisodesResponse.Episode)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryEpisodesResponse_Episode::IsInitialized() const {

  return true;
}

void QueryEpisodesResponse_Episode::Swap(QueryEpisodesResponse_Episode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryEpisodesResponse_Episode::InternalSwap(QueryEpisodesResponse_Episode* other) {
  last_key_.Swap(&other->last_key_);
  std::swap(metadata_, other->metadata_);
  photos_.UnsafeArenaSwap(&other->photos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryEpisodesResponse_Episode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryEpisodesResponse_Episode_descriptor_;
  metadata.reflection = QueryEpisodesResponse_Episode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryEpisodesResponse::kHeadersFieldNumber;
const int QueryEpisodesResponse::kEpisodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryEpisodesResponse::QueryEpisodesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryEpisodesResponse)
}

void QueryEpisodesResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryEpisodesResponse::QueryEpisodesResponse(const QueryEpisodesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryEpisodesResponse)
}

void QueryEpisodesResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

QueryEpisodesResponse::~QueryEpisodesResponse() {
  // @@protoc_insertion_point(destructor:QueryEpisodesResponse)
  SharedDtor();
}

void QueryEpisodesResponse::SharedDtor() {
  if (this != &QueryEpisodesResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryEpisodesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryEpisodesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryEpisodesResponse_descriptor_;
}

const QueryEpisodesResponse& QueryEpisodesResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryEpisodesResponse> QueryEpisodesResponse_default_instance_;

QueryEpisodesResponse* QueryEpisodesResponse::New(::google::protobuf::Arena* arena) const {
  QueryEpisodesResponse* n = new QueryEpisodesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryEpisodesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryEpisodesResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  episodes_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryEpisodesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryEpisodesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_episodes;
        break;
      }

      // repeated .QueryEpisodesResponse.Episode episodes = 2;
      case 2: {
        if (tag == 18) {
         parse_episodes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_episodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_episodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_episodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryEpisodesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryEpisodesResponse)
  return false;
#undef DO_
}

void QueryEpisodesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryEpisodesResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated .QueryEpisodesResponse.Episode episodes = 2;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->episodes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryEpisodesResponse)
}

::google::protobuf::uint8* QueryEpisodesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryEpisodesResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated .QueryEpisodesResponse.Episode episodes = 2;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->episodes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryEpisodesResponse)
  return target;
}

size_t QueryEpisodesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryEpisodesResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated .QueryEpisodesResponse.Episode episodes = 2;
  {
    unsigned int count = this->episodes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->episodes(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryEpisodesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryEpisodesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryEpisodesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryEpisodesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryEpisodesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryEpisodesResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryEpisodesResponse::MergeFrom(const QueryEpisodesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryEpisodesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryEpisodesResponse::UnsafeMergeFrom(const QueryEpisodesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  episodes_.MergeFrom(from.episodes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryEpisodesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryEpisodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryEpisodesResponse::CopyFrom(const QueryEpisodesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryEpisodesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryEpisodesResponse::IsInitialized() const {

  return true;
}

void QueryEpisodesResponse::Swap(QueryEpisodesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryEpisodesResponse::InternalSwap(QueryEpisodesResponse* other) {
  std::swap(headers_, other->headers_);
  episodes_.UnsafeArenaSwap(&other->episodes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryEpisodesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryEpisodesResponse_descriptor_;
  metadata.reflection = QueryEpisodesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryEpisodesResponse_Episode

// optional string last_key = 1;
bool QueryEpisodesResponse_Episode::has_last_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryEpisodesResponse_Episode::set_has_last_key() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryEpisodesResponse_Episode::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryEpisodesResponse_Episode::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
const ::std::string& QueryEpisodesResponse_Episode::last_key() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryEpisodesResponse_Episode::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryEpisodesResponse.Episode.last_key)
}
void QueryEpisodesResponse_Episode::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryEpisodesResponse.Episode.last_key)
}
void QueryEpisodesResponse_Episode::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryEpisodesResponse.Episode.last_key)
}
::std::string* QueryEpisodesResponse_Episode::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryEpisodesResponse_Episode::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.Episode.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryEpisodesResponse_Episode::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.Episode.last_key)
}

// optional .EpisodeMetadata metadata = 2;
bool QueryEpisodesResponse_Episode::has_metadata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryEpisodesResponse_Episode::set_has_metadata() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryEpisodesResponse_Episode::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryEpisodesResponse_Episode::clear_metadata() {
  if (metadata_ != NULL) metadata_->::EpisodeMetadata::Clear();
  clear_has_metadata();
}
const ::EpisodeMetadata& QueryEpisodesResponse_Episode::metadata() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::EpisodeMetadata::internal_default_instance();
}
::EpisodeMetadata* QueryEpisodesResponse_Episode::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::EpisodeMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.metadata)
  return metadata_;
}
::EpisodeMetadata* QueryEpisodesResponse_Episode::release_metadata() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.Episode.metadata)
  clear_has_metadata();
  ::EpisodeMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void QueryEpisodesResponse_Episode::set_allocated_metadata(::EpisodeMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.Episode.metadata)
}

// repeated .PhotoUpdate photos = 3;
int QueryEpisodesResponse_Episode::photos_size() const {
  return photos_.size();
}
void QueryEpisodesResponse_Episode::clear_photos() {
  photos_.Clear();
}
const ::PhotoUpdate& QueryEpisodesResponse_Episode::photos(int index) const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.photos)
  return photos_.Get(index);
}
::PhotoUpdate* QueryEpisodesResponse_Episode::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.photos)
  return photos_.Mutable(index);
}
::PhotoUpdate* QueryEpisodesResponse_Episode::add_photos() {
  // @@protoc_insertion_point(field_add:QueryEpisodesResponse.Episode.photos)
  return photos_.Add();
}
::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
QueryEpisodesResponse_Episode::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:QueryEpisodesResponse.Episode.photos)
  return &photos_;
}
const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
QueryEpisodesResponse_Episode::photos() const {
  // @@protoc_insertion_point(field_list:QueryEpisodesResponse.Episode.photos)
  return photos_;
}

inline const QueryEpisodesResponse_Episode* QueryEpisodesResponse_Episode::internal_default_instance() {
  return &QueryEpisodesResponse_Episode_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryEpisodesResponse

// optional .Headers headers = 1;
bool QueryEpisodesResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryEpisodesResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryEpisodesResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryEpisodesResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryEpisodesResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryEpisodesResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.headers)
  return headers_;
}
::Headers* QueryEpisodesResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryEpisodesResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.headers)
}

// repeated .QueryEpisodesResponse.Episode episodes = 2;
int QueryEpisodesResponse::episodes_size() const {
  return episodes_.size();
}
void QueryEpisodesResponse::clear_episodes() {
  episodes_.Clear();
}
const ::QueryEpisodesResponse_Episode& QueryEpisodesResponse::episodes(int index) const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.episodes)
  return episodes_.Get(index);
}
::QueryEpisodesResponse_Episode* QueryEpisodesResponse::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.episodes)
  return episodes_.Mutable(index);
}
::QueryEpisodesResponse_Episode* QueryEpisodesResponse::add_episodes() {
  // @@protoc_insertion_point(field_add:QueryEpisodesResponse.episodes)
  return episodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >*
QueryEpisodesResponse::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:QueryEpisodesResponse.episodes)
  return &episodes_;
}
const ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >&
QueryEpisodesResponse::episodes() const {
  // @@protoc_insertion_point(field_list:QueryEpisodesResponse.episodes)
  return episodes_;
}

inline const QueryEpisodesResponse* QueryEpisodesResponse::internal_default_instance() {
  return &QueryEpisodesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFollowedResponse::kHeadersFieldNumber;
const int QueryFollowedResponse::kLastKeyFieldNumber;
const int QueryFollowedResponse::kViewpointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFollowedResponse::QueryFollowedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryFollowedResponse)
}

void QueryFollowedResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryFollowedResponse::QueryFollowedResponse(const QueryFollowedResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryFollowedResponse)
}

void QueryFollowedResponse::SharedCtor() {
  _cached_size_ = 0;
  last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headers_ = NULL;
}

QueryFollowedResponse::~QueryFollowedResponse() {
  // @@protoc_insertion_point(destructor:QueryFollowedResponse)
  SharedDtor();
}

void QueryFollowedResponse::SharedDtor() {
  last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryFollowedResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryFollowedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryFollowedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryFollowedResponse_descriptor_;
}

const QueryFollowedResponse& QueryFollowedResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryFollowedResponse> QueryFollowedResponse_default_instance_;

QueryFollowedResponse* QueryFollowedResponse::New(::google::protobuf::Arena* arena) const {
  QueryFollowedResponse* n = new QueryFollowedResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryFollowedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryFollowedResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_headers()) {
      if (headers_ != NULL) headers_->::Headers::Clear();
    }
    if (has_last_key()) {
      last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  viewpoints_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryFollowedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryFollowedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_last_key;
        break;
      }

      // optional string last_key = 2;
      case 2: {
        if (tag == 18) {
         parse_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_key().data(), this->last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryFollowedResponse.last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_viewpoints;
        break;
      }

      // repeated .ViewpointMetadata viewpoints = 3;
      case 3: {
        if (tag == 26) {
         parse_viewpoints:
          DO_(input->IncrementRecursionDepth());
         parse_loop_viewpoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_viewpoints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_viewpoints;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryFollowedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryFollowedResponse)
  return false;
#undef DO_
}

void QueryFollowedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryFollowedResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryFollowedResponse.last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_key(), output);
  }

  // repeated .ViewpointMetadata viewpoints = 3;
  for (unsigned int i = 0, n = this->viewpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->viewpoints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryFollowedResponse)
}

::google::protobuf::uint8* QueryFollowedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryFollowedResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryFollowedResponse.last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_key(), target);
  }

  // repeated .ViewpointMetadata viewpoints = 3;
  for (unsigned int i = 0, n = this->viewpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->viewpoints(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryFollowedResponse)
  return target;
}

size_t QueryFollowedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryFollowedResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .Headers headers = 1;
    if (has_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->headers_);
    }

    // optional string last_key = 2;
    if (has_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->last_key());
    }

  }
  // repeated .ViewpointMetadata viewpoints = 3;
  {
    unsigned int count = this->viewpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->viewpoints(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryFollowedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryFollowedResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryFollowedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFollowedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryFollowedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryFollowedResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryFollowedResponse::MergeFrom(const QueryFollowedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryFollowedResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryFollowedResponse::UnsafeMergeFrom(const QueryFollowedResponse& from) {
  GOOGLE_DCHECK(&from != this);
  viewpoints_.MergeFrom(from.viewpoints_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
    if (from.has_last_key()) {
      set_has_last_key();
      last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryFollowedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryFollowedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFollowedResponse::CopyFrom(const QueryFollowedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryFollowedResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryFollowedResponse::IsInitialized() const {

  return true;
}

void QueryFollowedResponse::Swap(QueryFollowedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFollowedResponse::InternalSwap(QueryFollowedResponse* other) {
  std::swap(headers_, other->headers_);
  last_key_.Swap(&other->last_key_);
  viewpoints_.UnsafeArenaSwap(&other->viewpoints_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryFollowedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryFollowedResponse_descriptor_;
  metadata.reflection = QueryFollowedResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryFollowedResponse

// optional .Headers headers = 1;
bool QueryFollowedResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryFollowedResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryFollowedResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryFollowedResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryFollowedResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryFollowedResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.headers)
  return headers_;
}
::Headers* QueryFollowedResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryFollowedResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryFollowedResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryFollowedResponse.headers)
}

// optional string last_key = 2;
bool QueryFollowedResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryFollowedResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryFollowedResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryFollowedResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
const ::std::string& QueryFollowedResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFollowedResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryFollowedResponse.last_key)
}
void QueryFollowedResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryFollowedResponse.last_key)
}
void QueryFollowedResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryFollowedResponse.last_key)
}
::std::string* QueryFollowedResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryFollowedResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryFollowedResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryFollowedResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryFollowedResponse.last_key)
}

// repeated .ViewpointMetadata viewpoints = 3;
int QueryFollowedResponse::viewpoints_size() const {
  return viewpoints_.size();
}
void QueryFollowedResponse::clear_viewpoints() {
  viewpoints_.Clear();
}
const ::ViewpointMetadata& QueryFollowedResponse::viewpoints(int index) const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.viewpoints)
  return viewpoints_.Get(index);
}
::ViewpointMetadata* QueryFollowedResponse::mutable_viewpoints(int index) {
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.viewpoints)
  return viewpoints_.Mutable(index);
}
::ViewpointMetadata* QueryFollowedResponse::add_viewpoints() {
  // @@protoc_insertion_point(field_add:QueryFollowedResponse.viewpoints)
  return viewpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >*
QueryFollowedResponse::mutable_viewpoints() {
  // @@protoc_insertion_point(field_mutable_list:QueryFollowedResponse.viewpoints)
  return &viewpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >&
QueryFollowedResponse::viewpoints() const {
  // @@protoc_insertion_point(field_list:QueryFollowedResponse.viewpoints)
  return viewpoints_;
}

inline const QueryFollowedResponse* QueryFollowedResponse::internal_default_instance() {
  return &QueryFollowedResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryNotificationsResponse_InlineViewpoint::kViewpointIdFieldNumber;
const int QueryNotificationsResponse_InlineViewpoint::kUpdateSeqFieldNumber;
const int QueryNotificationsResponse_InlineViewpoint::kViewedSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryNotificationsResponse_InlineViewpoint::QueryNotificationsResponse_InlineViewpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryNotificationsResponse.InlineViewpoint)
}

void QueryNotificationsResponse_InlineViewpoint::InitAsDefaultInstance() {
}

QueryNotificationsResponse_InlineViewpoint::QueryNotificationsResponse_InlineViewpoint(const QueryNotificationsResponse_InlineViewpoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryNotificationsResponse.InlineViewpoint)
}

void QueryNotificationsResponse_InlineViewpoint::SharedCtor() {
  _cached_size_ = 0;
  viewpoint_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_seq_, 0, reinterpret_cast<char*>(&viewed_seq_) -
    reinterpret_cast<char*>(&update_seq_) + sizeof(viewed_seq_));
}

QueryNotificationsResponse_InlineViewpoint::~QueryNotificationsResponse_InlineViewpoint() {
  // @@protoc_insertion_point(destructor:QueryNotificationsResponse.InlineViewpoint)
  SharedDtor();
}

void QueryNotificationsResponse_InlineViewpoint::SharedDtor() {
  viewpoint_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryNotificationsResponse_InlineViewpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryNotificationsResponse_InlineViewpoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryNotificationsResponse_InlineViewpoint_descriptor_;
}

const QueryNotificationsResponse_InlineViewpoint& QueryNotificationsResponse_InlineViewpoint::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_InlineViewpoint> QueryNotificationsResponse_InlineViewpoint_default_instance_;

QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineViewpoint::New(::google::protobuf::Arena* arena) const {
  QueryNotificationsResponse_InlineViewpoint* n = new QueryNotificationsResponse_InlineViewpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryNotificationsResponse_InlineViewpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryNotificationsResponse.InlineViewpoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryNotificationsResponse_InlineViewpoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryNotificationsResponse_InlineViewpoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(update_seq_, viewed_seq_);
    if (has_viewpoint_id()) {
      viewpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryNotificationsResponse_InlineViewpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryNotificationsResponse.InlineViewpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string viewpoint_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewpoint_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->viewpoint_id().data(), this->viewpoint_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryNotificationsResponse.InlineViewpoint.viewpoint_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_update_seq;
        break;
      }

      // optional int64 update_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_update_seq:
          set_has_update_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_seq_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_viewed_seq;
        break;
      }

      // optional int64 viewed_seq = 3;
      case 3: {
        if (tag == 24) {
         parse_viewed_seq:
          set_has_viewed_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &viewed_seq_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryNotificationsResponse.InlineViewpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryNotificationsResponse.InlineViewpoint)
  return false;
#undef DO_
}

void QueryNotificationsResponse_InlineViewpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryNotificationsResponse.InlineViewpoint)
  // optional string viewpoint_id = 1;
  if (has_viewpoint_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewpoint_id().data(), this->viewpoint_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.InlineViewpoint.viewpoint_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->viewpoint_id(), output);
  }

  // optional int64 update_seq = 2;
  if (has_update_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->update_seq(), output);
  }

  // optional int64 viewed_seq = 3;
  if (has_viewed_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->viewed_seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryNotificationsResponse.InlineViewpoint)
}

::google::protobuf::uint8* QueryNotificationsResponse_InlineViewpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryNotificationsResponse.InlineViewpoint)
  // optional string viewpoint_id = 1;
  if (has_viewpoint_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->viewpoint_id().data(), this->viewpoint_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.InlineViewpoint.viewpoint_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->viewpoint_id(), target);
  }

  // optional int64 update_seq = 2;
  if (has_update_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->update_seq(), target);
  }

  // optional int64 viewed_seq = 3;
  if (has_viewed_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->viewed_seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryNotificationsResponse.InlineViewpoint)
  return target;
}

size_t QueryNotificationsResponse_InlineViewpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryNotificationsResponse.InlineViewpoint)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string viewpoint_id = 1;
    if (has_viewpoint_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->viewpoint_id());
    }

    // optional int64 update_seq = 2;
    if (has_update_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->update_seq());
    }

    // optional int64 viewed_seq = 3;
    if (has_viewed_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->viewed_seq());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryNotificationsResponse_InlineViewpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryNotificationsResponse.InlineViewpoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryNotificationsResponse_InlineViewpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryNotificationsResponse_InlineViewpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryNotificationsResponse.InlineViewpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryNotificationsResponse.InlineViewpoint)
    UnsafeMergeFrom(*source);
  }
}

void QueryNotificationsResponse_InlineViewpoint::MergeFrom(const QueryNotificationsResponse_InlineViewpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryNotificationsResponse.InlineViewpoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryNotificationsResponse_InlineViewpoint::UnsafeMergeFrom(const QueryNotificationsResponse_InlineViewpoint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_viewpoint_id()) {
      set_has_viewpoint_id();
      viewpoint_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.viewpoint_id_);
    }
    if (from.has_update_seq()) {
      set_update_seq(from.update_seq());
    }
    if (from.has_viewed_seq()) {
      set_viewed_seq(from.viewed_seq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryNotificationsResponse_InlineViewpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryNotificationsResponse.InlineViewpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryNotificationsResponse_InlineViewpoint::CopyFrom(const QueryNotificationsResponse_InlineViewpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryNotificationsResponse.InlineViewpoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryNotificationsResponse_InlineViewpoint::IsInitialized() const {

  return true;
}

void QueryNotificationsResponse_InlineViewpoint::Swap(QueryNotificationsResponse_InlineViewpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryNotificationsResponse_InlineViewpoint::InternalSwap(QueryNotificationsResponse_InlineViewpoint* other) {
  viewpoint_id_.Swap(&other->viewpoint_id_);
  std::swap(update_seq_, other->update_seq_);
  std::swap(viewed_seq_, other->viewed_seq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryNotificationsResponse_InlineViewpoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryNotificationsResponse_InlineViewpoint_descriptor_;
  metadata.reflection = QueryNotificationsResponse_InlineViewpoint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryNotificationsResponse_InlineInvalidation::kActivityFieldNumber;
const int QueryNotificationsResponse_InlineInvalidation::kViewpointFieldNumber;
const int QueryNotificationsResponse_InlineInvalidation::kCommentFieldNumber;
const int QueryNotificationsResponse_InlineInvalidation::kUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryNotificationsResponse_InlineInvalidation::QueryNotificationsResponse_InlineInvalidation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryNotificationsResponse.InlineInvalidation)
}

void QueryNotificationsResponse_InlineInvalidation::InitAsDefaultInstance() {
  activity_ = const_cast< ::ActivityMetadata*>(
      ::ActivityMetadata::internal_default_instance());
  viewpoint_ = const_cast< ::QueryNotificationsResponse_InlineViewpoint*>(
      ::QueryNotificationsResponse_InlineViewpoint::internal_default_instance());
  comment_ = const_cast< ::CommentMetadata*>(
      ::CommentMetadata::internal_default_instance());
  usage_ = const_cast< ::UsageMetadata*>(
      ::UsageMetadata::internal_default_instance());
}

QueryNotificationsResponse_InlineInvalidation::QueryNotificationsResponse_InlineInvalidation(const QueryNotificationsResponse_InlineInvalidation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryNotificationsResponse.InlineInvalidation)
}

void QueryNotificationsResponse_InlineInvalidation::SharedCtor() {
  _cached_size_ = 0;
  activity_ = NULL;
  viewpoint_ = NULL;
  comment_ = NULL;
  usage_ = NULL;
}

QueryNotificationsResponse_InlineInvalidation::~QueryNotificationsResponse_InlineInvalidation() {
  // @@protoc_insertion_point(destructor:QueryNotificationsResponse.InlineInvalidation)
  SharedDtor();
}

void QueryNotificationsResponse_InlineInvalidation::SharedDtor() {
  if (this != &QueryNotificationsResponse_InlineInvalidation_default_instance_.get()) {
    delete activity_;
    delete viewpoint_;
    delete comment_;
    delete usage_;
  }
}

void QueryNotificationsResponse_InlineInvalidation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryNotificationsResponse_InlineInvalidation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryNotificationsResponse_InlineInvalidation_descriptor_;
}

const QueryNotificationsResponse_InlineInvalidation& QueryNotificationsResponse_InlineInvalidation::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_InlineInvalidation> QueryNotificationsResponse_InlineInvalidation_default_instance_;

QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_InlineInvalidation::New(::google::protobuf::Arena* arena) const {
  QueryNotificationsResponse_InlineInvalidation* n = new QueryNotificationsResponse_InlineInvalidation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryNotificationsResponse_InlineInvalidation::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryNotificationsResponse.InlineInvalidation)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_activity()) {
      if (activity_ != NULL) activity_->::ActivityMetadata::Clear();
    }
    if (has_viewpoint()) {
      if (viewpoint_ != NULL) viewpoint_->::QueryNotificationsResponse_InlineViewpoint::Clear();
    }
    if (has_comment()) {
      if (comment_ != NULL) comment_->::CommentMetadata::Clear();
    }
    if (has_usage()) {
      if (usage_ != NULL) usage_->::UsageMetadata::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryNotificationsResponse_InlineInvalidation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryNotificationsResponse.InlineInvalidation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActivityMetadata activity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_viewpoint;
        break;
      }

      // optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
      case 2: {
        if (tag == 18) {
         parse_viewpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_viewpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_comment;
        break;
      }

      // optional .CommentMetadata comment = 3;
      case 3: {
        if (tag == 26) {
         parse_comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_usage;
        break;
      }

      // optional .UsageMetadata usage = 4;
      case 4: {
        if (tag == 34) {
         parse_usage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryNotificationsResponse.InlineInvalidation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryNotificationsResponse.InlineInvalidation)
  return false;
#undef DO_
}

void QueryNotificationsResponse_InlineInvalidation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryNotificationsResponse.InlineInvalidation)
  // optional .ActivityMetadata activity = 1;
  if (has_activity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->activity_, output);
  }

  // optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
  if (has_viewpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->viewpoint_, output);
  }

  // optional .CommentMetadata comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->comment_, output);
  }

  // optional .UsageMetadata usage = 4;
  if (has_usage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->usage_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryNotificationsResponse.InlineInvalidation)
}

::google::protobuf::uint8* QueryNotificationsResponse_InlineInvalidation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryNotificationsResponse.InlineInvalidation)
  // optional .ActivityMetadata activity = 1;
  if (has_activity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->activity_, false, target);
  }

  // optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
  if (has_viewpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->viewpoint_, false, target);
  }

  // optional .CommentMetadata comment = 3;
  if (has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->comment_, false, target);
  }

  // optional .UsageMetadata usage = 4;
  if (has_usage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->usage_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryNotificationsResponse.InlineInvalidation)
  return target;
}

size_t QueryNotificationsResponse_InlineInvalidation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryNotificationsResponse.InlineInvalidation)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .ActivityMetadata activity = 1;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->activity_);
    }

    // optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
    if (has_viewpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->viewpoint_);
    }

    // optional .CommentMetadata comment = 3;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->comment_);
    }

    // optional .UsageMetadata usage = 4;
    if (has_usage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->usage_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryNotificationsResponse_InlineInvalidation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryNotificationsResponse.InlineInvalidation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryNotificationsResponse_InlineInvalidation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryNotificationsResponse_InlineInvalidation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryNotificationsResponse.InlineInvalidation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryNotificationsResponse.InlineInvalidation)
    UnsafeMergeFrom(*source);
  }
}

void QueryNotificationsResponse_InlineInvalidation::MergeFrom(const QueryNotificationsResponse_InlineInvalidation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryNotificationsResponse.InlineInvalidation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryNotificationsResponse_InlineInvalidation::UnsafeMergeFrom(const QueryNotificationsResponse_InlineInvalidation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity()) {
      mutable_activity()->::ActivityMetadata::MergeFrom(from.activity());
    }
    if (from.has_viewpoint()) {
      mutable_viewpoint()->::QueryNotificationsResponse_InlineViewpoint::MergeFrom(from.viewpoint());
    }
    if (from.has_comment()) {
      mutable_comment()->::CommentMetadata::MergeFrom(from.comment());
    }
    if (from.has_usage()) {
      mutable_usage()->::UsageMetadata::MergeFrom(from.usage());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryNotificationsResponse_InlineInvalidation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryNotificationsResponse.InlineInvalidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryNotificationsResponse_InlineInvalidation::CopyFrom(const QueryNotificationsResponse_InlineInvalidation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryNotificationsResponse.InlineInvalidation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryNotificationsResponse_InlineInvalidation::IsInitialized() const {

  return true;
}

void QueryNotificationsResponse_InlineInvalidation::Swap(QueryNotificationsResponse_InlineInvalidation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryNotificationsResponse_InlineInvalidation::InternalSwap(QueryNotificationsResponse_InlineInvalidation* other) {
  std::swap(activity_, other->activity_);
  std::swap(viewpoint_, other->viewpoint_);
  std::swap(comment_, other->comment_);
  std::swap(usage_, other->usage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryNotificationsResponse_InlineInvalidation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryNotificationsResponse_InlineInvalidation_descriptor_;
  metadata.reflection = QueryNotificationsResponse_InlineInvalidation_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryNotificationsResponse_Notification::kNotificationIdFieldNumber;
const int QueryNotificationsResponse_Notification::kNameFieldNumber;
const int QueryNotificationsResponse_Notification::kSenderIdFieldNumber;
const int QueryNotificationsResponse_Notification::kOpIdFieldNumber;
const int QueryNotificationsResponse_Notification::kTimestampFieldNumber;
const int QueryNotificationsResponse_Notification::kInvalidateFieldNumber;
const int QueryNotificationsResponse_Notification::kInlineInvalidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryNotificationsResponse_Notification::QueryNotificationsResponse_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryNotificationsResponse.Notification)
}

void QueryNotificationsResponse_Notification::InitAsDefaultInstance() {
  invalidate_ = const_cast< ::InvalidateMetadata*>(
      ::InvalidateMetadata::internal_default_instance());
  inline_invalidate_ = const_cast< ::QueryNotificationsResponse_InlineInvalidation*>(
      ::QueryNotificationsResponse_InlineInvalidation::internal_default_instance());
}

QueryNotificationsResponse_Notification::QueryNotificationsResponse_Notification(const QueryNotificationsResponse_Notification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryNotificationsResponse.Notification)
}

void QueryNotificationsResponse_Notification::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invalidate_ = NULL;
  inline_invalidate_ = NULL;
  ::memset(&notification_id_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&notification_id_) + sizeof(timestamp_));
}

QueryNotificationsResponse_Notification::~QueryNotificationsResponse_Notification() {
  // @@protoc_insertion_point(destructor:QueryNotificationsResponse.Notification)
  SharedDtor();
}

void QueryNotificationsResponse_Notification::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryNotificationsResponse_Notification_default_instance_.get()) {
    delete invalidate_;
    delete inline_invalidate_;
  }
}

void QueryNotificationsResponse_Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryNotificationsResponse_Notification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryNotificationsResponse_Notification_descriptor_;
}

const QueryNotificationsResponse_Notification& QueryNotificationsResponse_Notification::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_Notification> QueryNotificationsResponse_Notification_default_instance_;

QueryNotificationsResponse_Notification* QueryNotificationsResponse_Notification::New(::google::protobuf::Arena* arena) const {
  QueryNotificationsResponse_Notification* n = new QueryNotificationsResponse_Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryNotificationsResponse_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryNotificationsResponse.Notification)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryNotificationsResponse_Notification, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryNotificationsResponse_Notification*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(notification_id_, timestamp_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_op_id()) {
      op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_invalidate()) {
      if (invalidate_ != NULL) invalidate_->::InvalidateMetadata::Clear();
    }
    if (has_inline_invalidate()) {
      if (inline_invalidate_ != NULL) inline_invalidate_->::QueryNotificationsResponse_InlineInvalidation::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryNotificationsResponse_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryNotificationsResponse.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 notification_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_notification_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &notification_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryNotificationsResponse.Notification.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sender_id;
        break;
      }

      // optional int64 sender_id = 3;
      case 3: {
        if (tag == 24) {
         parse_sender_id:
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_timestamp;
        break;
      }

      // optional double timestamp = 4;
      case 4: {
        if (tag == 33) {
         parse_timestamp:
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_invalidate;
        break;
      }

      // optional .InvalidateMetadata invalidate = 5;
      case 5: {
        if (tag == 42) {
         parse_invalidate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invalidate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_inline_invalidate;
        break;
      }

      // optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
      case 6: {
        if (tag == 50) {
         parse_inline_invalidate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inline_invalidate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_op_id;
        break;
      }

      // optional string op_id = 7;
      case 7: {
        if (tag == 58) {
         parse_op_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_id().data(), this->op_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryNotificationsResponse.Notification.op_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryNotificationsResponse.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryNotificationsResponse.Notification)
  return false;
#undef DO_
}

void QueryNotificationsResponse_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryNotificationsResponse.Notification)
  // optional int64 notification_id = 1;
  if (has_notification_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->notification_id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.Notification.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int64 sender_id = 3;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sender_id(), output);
  }

  // optional double timestamp = 4;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->timestamp(), output);
  }

  // optional .InvalidateMetadata invalidate = 5;
  if (has_invalidate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->invalidate_, output);
  }

  // optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
  if (has_inline_invalidate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->inline_invalidate_, output);
  }

  // optional string op_id = 7;
  if (has_op_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_id().data(), this->op_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.Notification.op_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->op_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryNotificationsResponse.Notification)
}

::google::protobuf::uint8* QueryNotificationsResponse_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryNotificationsResponse.Notification)
  // optional int64 notification_id = 1;
  if (has_notification_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->notification_id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.Notification.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int64 sender_id = 3;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sender_id(), target);
  }

  // optional double timestamp = 4;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->timestamp(), target);
  }

  // optional .InvalidateMetadata invalidate = 5;
  if (has_invalidate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->invalidate_, false, target);
  }

  // optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
  if (has_inline_invalidate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->inline_invalidate_, false, target);
  }

  // optional string op_id = 7;
  if (has_op_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_id().data(), this->op_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.Notification.op_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->op_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryNotificationsResponse.Notification)
  return target;
}

size_t QueryNotificationsResponse_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryNotificationsResponse.Notification)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional int64 notification_id = 1;
    if (has_notification_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->notification_id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 sender_id = 3;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sender_id());
    }

    // optional string op_id = 7;
    if (has_op_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_id());
    }

    // optional double timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional .InvalidateMetadata invalidate = 5;
    if (has_invalidate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->invalidate_);
    }

    // optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
    if (has_inline_invalidate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inline_invalidate_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryNotificationsResponse_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryNotificationsResponse.Notification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryNotificationsResponse_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryNotificationsResponse_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryNotificationsResponse.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryNotificationsResponse.Notification)
    UnsafeMergeFrom(*source);
  }
}

void QueryNotificationsResponse_Notification::MergeFrom(const QueryNotificationsResponse_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryNotificationsResponse.Notification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryNotificationsResponse_Notification::UnsafeMergeFrom(const QueryNotificationsResponse_Notification& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_notification_id()) {
      set_notification_id(from.notification_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_op_id()) {
      set_has_op_id();
      op_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_id_);
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_invalidate()) {
      mutable_invalidate()->::InvalidateMetadata::MergeFrom(from.invalidate());
    }
    if (from.has_inline_invalidate()) {
      mutable_inline_invalidate()->::QueryNotificationsResponse_InlineInvalidation::MergeFrom(from.inline_invalidate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryNotificationsResponse_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryNotificationsResponse.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryNotificationsResponse_Notification::CopyFrom(const QueryNotificationsResponse_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryNotificationsResponse.Notification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryNotificationsResponse_Notification::IsInitialized() const {

  return true;
}

void QueryNotificationsResponse_Notification::Swap(QueryNotificationsResponse_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryNotificationsResponse_Notification::InternalSwap(QueryNotificationsResponse_Notification* other) {
  std::swap(notification_id_, other->notification_id_);
  name_.Swap(&other->name_);
  std::swap(sender_id_, other->sender_id_);
  op_id_.Swap(&other->op_id_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(invalidate_, other->invalidate_);
  std::swap(inline_invalidate_, other->inline_invalidate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryNotificationsResponse_Notification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryNotificationsResponse_Notification_descriptor_;
  metadata.reflection = QueryNotificationsResponse_Notification_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryNotificationsResponse::kHeadersFieldNumber;
const int QueryNotificationsResponse::kLastKeyFieldNumber;
const int QueryNotificationsResponse::kNotificationsFieldNumber;
const int QueryNotificationsResponse::kRetryAfterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryNotificationsResponse::QueryNotificationsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryNotificationsResponse)
}

void QueryNotificationsResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryNotificationsResponse::QueryNotificationsResponse(const QueryNotificationsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryNotificationsResponse)
}

void QueryNotificationsResponse::SharedCtor() {
  _cached_size_ = 0;
  last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headers_ = NULL;
  retry_after_ = 0;
}

QueryNotificationsResponse::~QueryNotificationsResponse() {
  // @@protoc_insertion_point(destructor:QueryNotificationsResponse)
  SharedDtor();
}

void QueryNotificationsResponse::SharedDtor() {
  last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryNotificationsResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryNotificationsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryNotificationsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryNotificationsResponse_descriptor_;
}

const QueryNotificationsResponse& QueryNotificationsResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse> QueryNotificationsResponse_default_instance_;

QueryNotificationsResponse* QueryNotificationsResponse::New(::google::protobuf::Arena* arena) const {
  QueryNotificationsResponse* n = new QueryNotificationsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryNotificationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryNotificationsResponse)
  if (_has_bits_[0 / 32] & 11u) {
    if (has_headers()) {
      if (headers_ != NULL) headers_->::Headers::Clear();
    }
    if (has_last_key()) {
      last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    retry_after_ = 0;
  }
  notifications_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryNotificationsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryNotificationsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_last_key;
        break;
      }

      // optional string last_key = 2;
      case 2: {
        if (tag == 18) {
         parse_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_key().data(), this->last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryNotificationsResponse.last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_notifications;
        break;
      }

      // repeated .QueryNotificationsResponse.Notification notifications = 3;
      case 3: {
        if (tag == 26) {
         parse_notifications:
          DO_(input->IncrementRecursionDepth());
         parse_loop_notifications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_notifications;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(33)) goto parse_retry_after;
        break;
      }

      // optional double retry_after = 4;
      case 4: {
        if (tag == 33) {
         parse_retry_after:
          set_has_retry_after();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &retry_after_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryNotificationsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryNotificationsResponse)
  return false;
#undef DO_
}

void QueryNotificationsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryNotificationsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_key(), output);
  }

  // repeated .QueryNotificationsResponse.Notification notifications = 3;
  for (unsigned int i = 0, n = this->notifications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->notifications(i), output);
  }

  // optional double retry_after = 4;
  if (has_retry_after()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->retry_after(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryNotificationsResponse)
}

::google::protobuf::uint8* QueryNotificationsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryNotificationsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // optional string last_key = 2;
  if (has_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_key().data(), this->last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryNotificationsResponse.last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_key(), target);
  }

  // repeated .QueryNotificationsResponse.Notification notifications = 3;
  for (unsigned int i = 0, n = this->notifications_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->notifications(i), false, target);
  }

  // optional double retry_after = 4;
  if (has_retry_after()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->retry_after(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryNotificationsResponse)
  return target;
}

size_t QueryNotificationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryNotificationsResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 11u) {
    // optional .Headers headers = 1;
    if (has_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->headers_);
    }

    // optional string last_key = 2;
    if (has_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->last_key());
    }

    // optional double retry_after = 4;
    if (has_retry_after()) {
      total_size += 1 + 8;
    }

  }
  // repeated .QueryNotificationsResponse.Notification notifications = 3;
  {
    unsigned int count = this->notifications_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notifications(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryNotificationsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryNotificationsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryNotificationsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryNotificationsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryNotificationsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryNotificationsResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryNotificationsResponse::MergeFrom(const QueryNotificationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryNotificationsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryNotificationsResponse::UnsafeMergeFrom(const QueryNotificationsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  notifications_.MergeFrom(from.notifications_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
    if (from.has_last_key()) {
      set_has_last_key();
      last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_key_);
    }
    if (from.has_retry_after()) {
      set_retry_after(from.retry_after());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryNotificationsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryNotificationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryNotificationsResponse::CopyFrom(const QueryNotificationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryNotificationsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryNotificationsResponse::IsInitialized() const {

  return true;
}

void QueryNotificationsResponse::Swap(QueryNotificationsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryNotificationsResponse::InternalSwap(QueryNotificationsResponse* other) {
  std::swap(headers_, other->headers_);
  last_key_.Swap(&other->last_key_);
  notifications_.UnsafeArenaSwap(&other->notifications_);
  std::swap(retry_after_, other->retry_after_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryNotificationsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryNotificationsResponse_descriptor_;
  metadata.reflection = QueryNotificationsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryNotificationsResponse_InlineViewpoint

// optional string viewpoint_id = 1;
bool QueryNotificationsResponse_InlineViewpoint::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryNotificationsResponse_InlineViewpoint::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_viewpoint_id() {
  viewpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_viewpoint_id();
}
const ::std::string& QueryNotificationsResponse_InlineViewpoint::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  return viewpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const ::std::string& value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const char* value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const char* value, size_t size) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
::std::string* QueryNotificationsResponse_InlineViewpoint::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  return viewpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryNotificationsResponse_InlineViewpoint::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  clear_has_viewpoint_id();
  return viewpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_InlineViewpoint::set_allocated_viewpoint_id(::std::string* viewpoint_id) {
  if (viewpoint_id != NULL) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  viewpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), viewpoint_id);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}

// optional int64 update_seq = 2;
bool QueryNotificationsResponse_InlineViewpoint::has_update_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryNotificationsResponse_InlineViewpoint::set_has_update_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_has_update_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_update_seq() {
  update_seq_ = GOOGLE_LONGLONG(0);
  clear_has_update_seq();
}
::google::protobuf::int64 QueryNotificationsResponse_InlineViewpoint::update_seq() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.update_seq)
  return update_seq_;
}
void QueryNotificationsResponse_InlineViewpoint::set_update_seq(::google::protobuf::int64 value) {
  set_has_update_seq();
  update_seq_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.update_seq)
}

// optional int64 viewed_seq = 3;
bool QueryNotificationsResponse_InlineViewpoint::has_viewed_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryNotificationsResponse_InlineViewpoint::set_has_viewed_seq() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_has_viewed_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryNotificationsResponse_InlineViewpoint::clear_viewed_seq() {
  viewed_seq_ = GOOGLE_LONGLONG(0);
  clear_has_viewed_seq();
}
::google::protobuf::int64 QueryNotificationsResponse_InlineViewpoint::viewed_seq() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.viewed_seq)
  return viewed_seq_;
}
void QueryNotificationsResponse_InlineViewpoint::set_viewed_seq(::google::protobuf::int64 value) {
  set_has_viewed_seq();
  viewed_seq_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.viewed_seq)
}

inline const QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineViewpoint::internal_default_instance() {
  return &QueryNotificationsResponse_InlineViewpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse_InlineInvalidation

// optional .ActivityMetadata activity = 1;
bool QueryNotificationsResponse_InlineInvalidation::has_activity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryNotificationsResponse_InlineInvalidation::set_has_activity() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_has_activity() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_activity() {
  if (activity_ != NULL) activity_->::ActivityMetadata::Clear();
  clear_has_activity();
}
const ::ActivityMetadata& QueryNotificationsResponse_InlineInvalidation::activity() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.activity)
  return activity_ != NULL ? *activity_
                         : *::ActivityMetadata::internal_default_instance();
}
::ActivityMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) {
    activity_ = new ::ActivityMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.activity)
  return activity_;
}
::ActivityMetadata* QueryNotificationsResponse_InlineInvalidation::release_activity() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.activity)
  clear_has_activity();
  ::ActivityMetadata* temp = activity_;
  activity_ = NULL;
  return temp;
}
void QueryNotificationsResponse_InlineInvalidation::set_allocated_activity(::ActivityMetadata* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.activity)
}

// optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
bool QueryNotificationsResponse_InlineInvalidation::has_viewpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryNotificationsResponse_InlineInvalidation::set_has_viewpoint() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_has_viewpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_viewpoint() {
  if (viewpoint_ != NULL) viewpoint_->::QueryNotificationsResponse_InlineViewpoint::Clear();
  clear_has_viewpoint();
}
const ::QueryNotificationsResponse_InlineViewpoint& QueryNotificationsResponse_InlineInvalidation::viewpoint() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  return viewpoint_ != NULL ? *viewpoint_
                         : *::QueryNotificationsResponse_InlineViewpoint::internal_default_instance();
}
::QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineInvalidation::mutable_viewpoint() {
  set_has_viewpoint();
  if (viewpoint_ == NULL) {
    viewpoint_ = new ::QueryNotificationsResponse_InlineViewpoint;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  return viewpoint_;
}
::QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineInvalidation::release_viewpoint() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  clear_has_viewpoint();
  ::QueryNotificationsResponse_InlineViewpoint* temp = viewpoint_;
  viewpoint_ = NULL;
  return temp;
}
void QueryNotificationsResponse_InlineInvalidation::set_allocated_viewpoint(::QueryNotificationsResponse_InlineViewpoint* viewpoint) {
  delete viewpoint_;
  viewpoint_ = viewpoint;
  if (viewpoint) {
    set_has_viewpoint();
  } else {
    clear_has_viewpoint();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.viewpoint)
}

// optional .CommentMetadata comment = 3;
bool QueryNotificationsResponse_InlineInvalidation::has_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryNotificationsResponse_InlineInvalidation::set_has_comment() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_has_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_comment() {
  if (comment_ != NULL) comment_->::CommentMetadata::Clear();
  clear_has_comment();
}
const ::CommentMetadata& QueryNotificationsResponse_InlineInvalidation::comment() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.comment)
  return comment_ != NULL ? *comment_
                         : *::CommentMetadata::internal_default_instance();
}
::CommentMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_comment() {
  set_has_comment();
  if (comment_ == NULL) {
    comment_ = new ::CommentMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.comment)
  return comment_;
}
::CommentMetadata* QueryNotificationsResponse_InlineInvalidation::release_comment() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.comment)
  clear_has_comment();
  ::CommentMetadata* temp = comment_;
  comment_ = NULL;
  return temp;
}
void QueryNotificationsResponse_InlineInvalidation::set_allocated_comment(::CommentMetadata* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.comment)
}

// optional .UsageMetadata usage = 4;
bool QueryNotificationsResponse_InlineInvalidation::has_usage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryNotificationsResponse_InlineInvalidation::set_has_usage() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_has_usage() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryNotificationsResponse_InlineInvalidation::clear_usage() {
  if (usage_ != NULL) usage_->::UsageMetadata::Clear();
  clear_has_usage();
}
const ::UsageMetadata& QueryNotificationsResponse_InlineInvalidation::usage() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.usage)
  return usage_ != NULL ? *usage_
                         : *::UsageMetadata::internal_default_instance();
}
::UsageMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_usage() {
  set_has_usage();
  if (usage_ == NULL) {
    usage_ = new ::UsageMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.usage)
  return usage_;
}
::UsageMetadata* QueryNotificationsResponse_InlineInvalidation::release_usage() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.usage)
  clear_has_usage();
  ::UsageMetadata* temp = usage_;
  usage_ = NULL;
  return temp;
}
void QueryNotificationsResponse_InlineInvalidation::set_allocated_usage(::UsageMetadata* usage) {
  delete usage_;
  usage_ = usage;
  if (usage) {
    set_has_usage();
  } else {
    clear_has_usage();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.usage)
}

inline const QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_InlineInvalidation::internal_default_instance() {
  return &QueryNotificationsResponse_InlineInvalidation_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse_Notification

// optional int64 notification_id = 1;
bool QueryNotificationsResponse_Notification::has_notification_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_notification_id() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryNotificationsResponse_Notification::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryNotificationsResponse_Notification::clear_notification_id() {
  notification_id_ = GOOGLE_LONGLONG(0);
  clear_has_notification_id();
}
::google::protobuf::int64 QueryNotificationsResponse_Notification::notification_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.notification_id)
  return notification_id_;
}
void QueryNotificationsResponse_Notification::set_notification_id(::google::protobuf::int64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.notification_id)
}

// optional string name = 2;
bool QueryNotificationsResponse_Notification::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryNotificationsResponse_Notification::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryNotificationsResponse_Notification::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& QueryNotificationsResponse_Notification::name() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_Notification::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.name)
}
void QueryNotificationsResponse_Notification::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.Notification.name)
}
void QueryNotificationsResponse_Notification::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.Notification.name)
}
::std::string* QueryNotificationsResponse_Notification::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryNotificationsResponse_Notification::release_name() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_Notification::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.name)
}

// optional int64 sender_id = 3;
bool QueryNotificationsResponse_Notification::has_sender_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_sender_id() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryNotificationsResponse_Notification::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryNotificationsResponse_Notification::clear_sender_id() {
  sender_id_ = GOOGLE_LONGLONG(0);
  clear_has_sender_id();
}
::google::protobuf::int64 QueryNotificationsResponse_Notification::sender_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.sender_id)
  return sender_id_;
}
void QueryNotificationsResponse_Notification::set_sender_id(::google::protobuf::int64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.sender_id)
}

// optional string op_id = 7;
bool QueryNotificationsResponse_Notification::has_op_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_op_id() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryNotificationsResponse_Notification::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryNotificationsResponse_Notification::clear_op_id() {
  op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_id();
}
const ::std::string& QueryNotificationsResponse_Notification::op_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.op_id)
  return op_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_Notification::set_op_id(const ::std::string& value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.op_id)
}
void QueryNotificationsResponse_Notification::set_op_id(const char* value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.Notification.op_id)
}
void QueryNotificationsResponse_Notification::set_op_id(const char* value, size_t size) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.Notification.op_id)
}
::std::string* QueryNotificationsResponse_Notification::mutable_op_id() {
  set_has_op_id();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.op_id)
  return op_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryNotificationsResponse_Notification::release_op_id() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.op_id)
  clear_has_op_id();
  return op_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse_Notification::set_allocated_op_id(::std::string* op_id) {
  if (op_id != NULL) {
    set_has_op_id();
  } else {
    clear_has_op_id();
  }
  op_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_id);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.op_id)
}

// optional double timestamp = 4;
bool QueryNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
void QueryNotificationsResponse_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueryNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
double QueryNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
void QueryNotificationsResponse_Notification::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.timestamp)
}

// optional .InvalidateMetadata invalidate = 5;
bool QueryNotificationsResponse_Notification::has_invalidate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_invalidate() {
  _has_bits_[0] |= 0x00000020u;
}
void QueryNotificationsResponse_Notification::clear_has_invalidate() {
  _has_bits_[0] &= ~0x00000020u;
}
void QueryNotificationsResponse_Notification::clear_invalidate() {
  if (invalidate_ != NULL) invalidate_->::InvalidateMetadata::Clear();
  clear_has_invalidate();
}
const ::InvalidateMetadata& QueryNotificationsResponse_Notification::invalidate() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.invalidate)
  return invalidate_ != NULL ? *invalidate_
                         : *::InvalidateMetadata::internal_default_instance();
}
::InvalidateMetadata* QueryNotificationsResponse_Notification::mutable_invalidate() {
  set_has_invalidate();
  if (invalidate_ == NULL) {
    invalidate_ = new ::InvalidateMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.invalidate)
  return invalidate_;
}
::InvalidateMetadata* QueryNotificationsResponse_Notification::release_invalidate() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.invalidate)
  clear_has_invalidate();
  ::InvalidateMetadata* temp = invalidate_;
  invalidate_ = NULL;
  return temp;
}
void QueryNotificationsResponse_Notification::set_allocated_invalidate(::InvalidateMetadata* invalidate) {
  delete invalidate_;
  invalidate_ = invalidate;
  if (invalidate) {
    set_has_invalidate();
  } else {
    clear_has_invalidate();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.invalidate)
}

// optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
bool QueryNotificationsResponse_Notification::has_inline_invalidate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QueryNotificationsResponse_Notification::set_has_inline_invalidate() {
  _has_bits_[0] |= 0x00000040u;
}
void QueryNotificationsResponse_Notification::clear_has_inline_invalidate() {
  _has_bits_[0] &= ~0x00000040u;
}
void QueryNotificationsResponse_Notification::clear_inline_invalidate() {
  if (inline_invalidate_ != NULL) inline_invalidate_->::QueryNotificationsResponse_InlineInvalidation::Clear();
  clear_has_inline_invalidate();
}
const ::QueryNotificationsResponse_InlineInvalidation& QueryNotificationsResponse_Notification::inline_invalidate() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.inline_invalidate)
  return inline_invalidate_ != NULL ? *inline_invalidate_
                         : *::QueryNotificationsResponse_InlineInvalidation::internal_default_instance();
}
::QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_Notification::mutable_inline_invalidate() {
  set_has_inline_invalidate();
  if (inline_invalidate_ == NULL) {
    inline_invalidate_ = new ::QueryNotificationsResponse_InlineInvalidation;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.inline_invalidate)
  return inline_invalidate_;
}
::QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_Notification::release_inline_invalidate() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.inline_invalidate)
  clear_has_inline_invalidate();
  ::QueryNotificationsResponse_InlineInvalidation* temp = inline_invalidate_;
  inline_invalidate_ = NULL;
  return temp;
}
void QueryNotificationsResponse_Notification::set_allocated_inline_invalidate(::QueryNotificationsResponse_InlineInvalidation* inline_invalidate) {
  delete inline_invalidate_;
  inline_invalidate_ = inline_invalidate;
  if (inline_invalidate) {
    set_has_inline_invalidate();
  } else {
    clear_has_inline_invalidate();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.inline_invalidate)
}

inline const QueryNotificationsResponse_Notification* QueryNotificationsResponse_Notification::internal_default_instance() {
  return &QueryNotificationsResponse_Notification_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse

// optional .Headers headers = 1;
bool QueryNotificationsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryNotificationsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryNotificationsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryNotificationsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryNotificationsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryNotificationsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.headers)
  return headers_;
}
::Headers* QueryNotificationsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryNotificationsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.headers)
}

// optional string last_key = 2;
bool QueryNotificationsResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryNotificationsResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryNotificationsResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryNotificationsResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
const ::std::string& QueryNotificationsResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.last_key)
}
void QueryNotificationsResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.last_key)
}
void QueryNotificationsResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.last_key)
}
::std::string* QueryNotificationsResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryNotificationsResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryNotificationsResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.last_key)
}

// repeated .QueryNotificationsResponse.Notification notifications = 3;
int QueryNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
void QueryNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
const ::QueryNotificationsResponse_Notification& QueryNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.notifications)
  return notifications_.Get(index);
}
::QueryNotificationsResponse_Notification* QueryNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
::QueryNotificationsResponse_Notification* QueryNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:QueryNotificationsResponse.notifications)
  return notifications_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >*
QueryNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:QueryNotificationsResponse.notifications)
  return &notifications_;
}
const ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >&
QueryNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:QueryNotificationsResponse.notifications)
  return notifications_;
}

// optional double retry_after = 4;
bool QueryNotificationsResponse::has_retry_after() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryNotificationsResponse::set_has_retry_after() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryNotificationsResponse::clear_has_retry_after() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryNotificationsResponse::clear_retry_after() {
  retry_after_ = 0;
  clear_has_retry_after();
}
double QueryNotificationsResponse::retry_after() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.retry_after)
  return retry_after_;
}
void QueryNotificationsResponse::set_retry_after(double value) {
  set_has_retry_after();
  retry_after_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.retry_after)
}

inline const QueryNotificationsResponse* QueryNotificationsResponse::internal_default_instance() {
  return &QueryNotificationsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsersResponse_User::kContactFieldNumber;
const int QueryUsersResponse_User::kSubscriptionsFieldNumber;
const int QueryUsersResponse_User::kAccountSettingsFieldNumber;
const int QueryUsersResponse_User::kNoPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsersResponse_User::QueryUsersResponse_User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryUsersResponse.User)
}

void QueryUsersResponse_User::InitAsDefaultInstance() {
  contact_ = const_cast< ::ContactMetadata*>(
      ::ContactMetadata::internal_default_instance());
  account_settings_ = const_cast< ::AccountSettingsMetadata*>(
      ::AccountSettingsMetadata::internal_default_instance());
}

QueryUsersResponse_User::QueryUsersResponse_User(const QueryUsersResponse_User& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryUsersResponse.User)
}

void QueryUsersResponse_User::SharedCtor() {
  _cached_size_ = 0;
  contact_ = NULL;
  account_settings_ = NULL;
  no_password_ = false;
}

QueryUsersResponse_User::~QueryUsersResponse_User() {
  // @@protoc_insertion_point(destructor:QueryUsersResponse.User)
  SharedDtor();
}

void QueryUsersResponse_User::SharedDtor() {
  if (this != &QueryUsersResponse_User_default_instance_.get()) {
    delete contact_;
    delete account_settings_;
  }
}

void QueryUsersResponse_User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsersResponse_User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryUsersResponse_User_descriptor_;
}

const QueryUsersResponse_User& QueryUsersResponse_User::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryUsersResponse_User> QueryUsersResponse_User_default_instance_;

QueryUsersResponse_User* QueryUsersResponse_User::New(::google::protobuf::Arena* arena) const {
  QueryUsersResponse_User* n = new QueryUsersResponse_User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsersResponse_User::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryUsersResponse.User)
  if (_has_bits_[0 / 32] & 13u) {
    if (has_contact()) {
      if (contact_ != NULL) contact_->::ContactMetadata::Clear();
    }
    if (has_account_settings()) {
      if (account_settings_ != NULL) account_settings_->::AccountSettingsMetadata::Clear();
    }
    no_password_ = false;
  }
  subscriptions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryUsersResponse_User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryUsersResponse.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ContactMetadata contact = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contact()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_subscriptions;
        break;
      }

      // repeated .ServerSubscriptionMetadata subscriptions = 4;
      case 4: {
        if (tag == 34) {
         parse_subscriptions:
          DO_(input->IncrementRecursionDepth());
         parse_loop_subscriptions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subscriptions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_subscriptions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_account_settings;
        break;
      }

      // optional .AccountSettingsMetadata account_settings = 5;
      case 5: {
        if (tag == 42) {
         parse_account_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_no_password;
        break;
      }

      // optional bool no_password = 7;
      case 7: {
        if (tag == 56) {
         parse_no_password:
          set_has_no_password();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_password_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryUsersResponse.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryUsersResponse.User)
  return false;
#undef DO_
}

void QueryUsersResponse_User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryUsersResponse.User)
  // optional .ContactMetadata contact = 3;
  if (has_contact()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->contact_, output);
  }

  // repeated .ServerSubscriptionMetadata subscriptions = 4;
  for (unsigned int i = 0, n = this->subscriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->subscriptions(i), output);
  }

  // optional .AccountSettingsMetadata account_settings = 5;
  if (has_account_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->account_settings_, output);
  }

  // optional bool no_password = 7;
  if (has_no_password()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->no_password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryUsersResponse.User)
}

::google::protobuf::uint8* QueryUsersResponse_User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryUsersResponse.User)
  // optional .ContactMetadata contact = 3;
  if (has_contact()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->contact_, false, target);
  }

  // repeated .ServerSubscriptionMetadata subscriptions = 4;
  for (unsigned int i = 0, n = this->subscriptions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->subscriptions(i), false, target);
  }

  // optional .AccountSettingsMetadata account_settings = 5;
  if (has_account_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->account_settings_, false, target);
  }

  // optional bool no_password = 7;
  if (has_no_password()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->no_password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryUsersResponse.User)
  return target;
}

size_t QueryUsersResponse_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryUsersResponse.User)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 13u) {
    // optional .ContactMetadata contact = 3;
    if (has_contact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->contact_);
    }

    // optional .AccountSettingsMetadata account_settings = 5;
    if (has_account_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->account_settings_);
    }

    // optional bool no_password = 7;
    if (has_no_password()) {
      total_size += 1 + 1;
    }

  }
  // repeated .ServerSubscriptionMetadata subscriptions = 4;
  {
    unsigned int count = this->subscriptions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscriptions(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsersResponse_User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryUsersResponse.User)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryUsersResponse_User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsersResponse_User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryUsersResponse.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryUsersResponse.User)
    UnsafeMergeFrom(*source);
  }
}

void QueryUsersResponse_User::MergeFrom(const QueryUsersResponse_User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryUsersResponse.User)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryUsersResponse_User::UnsafeMergeFrom(const QueryUsersResponse_User& from) {
  GOOGLE_DCHECK(&from != this);
  subscriptions_.MergeFrom(from.subscriptions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contact()) {
      mutable_contact()->::ContactMetadata::MergeFrom(from.contact());
    }
    if (from.has_account_settings()) {
      mutable_account_settings()->::AccountSettingsMetadata::MergeFrom(from.account_settings());
    }
    if (from.has_no_password()) {
      set_no_password(from.no_password());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryUsersResponse_User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryUsersResponse.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsersResponse_User::CopyFrom(const QueryUsersResponse_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryUsersResponse.User)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryUsersResponse_User::IsInitialized() const {

  return true;
}

void QueryUsersResponse_User::Swap(QueryUsersResponse_User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsersResponse_User::InternalSwap(QueryUsersResponse_User* other) {
  std::swap(contact_, other->contact_);
  subscriptions_.UnsafeArenaSwap(&other->subscriptions_);
  std::swap(account_settings_, other->account_settings_);
  std::swap(no_password_, other->no_password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsersResponse_User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryUsersResponse_User_descriptor_;
  metadata.reflection = QueryUsersResponse_User_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUsersResponse::kHeadersFieldNumber;
const int QueryUsersResponse::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUsersResponse::QueryUsersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryUsersResponse)
}

void QueryUsersResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryUsersResponse::QueryUsersResponse(const QueryUsersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryUsersResponse)
}

void QueryUsersResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

QueryUsersResponse::~QueryUsersResponse() {
  // @@protoc_insertion_point(destructor:QueryUsersResponse)
  SharedDtor();
}

void QueryUsersResponse::SharedDtor() {
  if (this != &QueryUsersResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryUsersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUsersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryUsersResponse_descriptor_;
}

const QueryUsersResponse& QueryUsersResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryUsersResponse> QueryUsersResponse_default_instance_;

QueryUsersResponse* QueryUsersResponse::New(::google::protobuf::Arena* arena) const {
  QueryUsersResponse* n = new QueryUsersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryUsersResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  user_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryUsersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryUsersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(19)) goto parse_user;
        break;
      }

      // repeated group User = 2 { ... };
      case 2: {
        if (tag == 19) {
         parse_user:
          DO_(input->IncrementRecursionDepth());
         parse_loop_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                2, input, add_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(19)) goto parse_loop_user;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryUsersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryUsersResponse)
  return false;
#undef DO_
}

void QueryUsersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryUsersResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated group User = 2 { ... };
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      2, this->user(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryUsersResponse)
}

::google::protobuf::uint8* QueryUsersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryUsersResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated group User = 2 { ... };
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        2, this->user(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryUsersResponse)
  return target;
}

size_t QueryUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryUsersResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated group User = 2 { ... };
  {
    unsigned int count = this->user_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->user(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUsersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryUsersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryUsersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUsersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryUsersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryUsersResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryUsersResponse::MergeFrom(const QueryUsersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryUsersResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryUsersResponse::UnsafeMergeFrom(const QueryUsersResponse& from) {
  GOOGLE_DCHECK(&from != this);
  user_.MergeFrom(from.user_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryUsersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUsersResponse::CopyFrom(const QueryUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryUsersResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryUsersResponse::IsInitialized() const {

  return true;
}

void QueryUsersResponse::Swap(QueryUsersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUsersResponse::InternalSwap(QueryUsersResponse* other) {
  std::swap(headers_, other->headers_);
  user_.UnsafeArenaSwap(&other->user_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUsersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryUsersResponse_descriptor_;
  metadata.reflection = QueryUsersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryUsersResponse_User

// optional .ContactMetadata contact = 3;
bool QueryUsersResponse_User::has_contact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryUsersResponse_User::set_has_contact() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryUsersResponse_User::clear_has_contact() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryUsersResponse_User::clear_contact() {
  if (contact_ != NULL) contact_->::ContactMetadata::Clear();
  clear_has_contact();
}
const ::ContactMetadata& QueryUsersResponse_User::contact() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.contact)
  return contact_ != NULL ? *contact_
                         : *::ContactMetadata::internal_default_instance();
}
::ContactMetadata* QueryUsersResponse_User::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) {
    contact_ = new ::ContactMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.contact)
  return contact_;
}
::ContactMetadata* QueryUsersResponse_User::release_contact() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.User.contact)
  clear_has_contact();
  ::ContactMetadata* temp = contact_;
  contact_ = NULL;
  return temp;
}
void QueryUsersResponse_User::set_allocated_contact(::ContactMetadata* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.User.contact)
}

// repeated .ServerSubscriptionMetadata subscriptions = 4;
int QueryUsersResponse_User::subscriptions_size() const {
  return subscriptions_.size();
}
void QueryUsersResponse_User::clear_subscriptions() {
  subscriptions_.Clear();
}
const ::ServerSubscriptionMetadata& QueryUsersResponse_User::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Get(index);
}
::ServerSubscriptionMetadata* QueryUsersResponse_User::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Mutable(index);
}
::ServerSubscriptionMetadata* QueryUsersResponse_User::add_subscriptions() {
  // @@protoc_insertion_point(field_add:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Add();
}
::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >*
QueryUsersResponse_User::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:QueryUsersResponse.User.subscriptions)
  return &subscriptions_;
}
const ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >&
QueryUsersResponse_User::subscriptions() const {
  // @@protoc_insertion_point(field_list:QueryUsersResponse.User.subscriptions)
  return subscriptions_;
}

// optional .AccountSettingsMetadata account_settings = 5;
bool QueryUsersResponse_User::has_account_settings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryUsersResponse_User::set_has_account_settings() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryUsersResponse_User::clear_has_account_settings() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryUsersResponse_User::clear_account_settings() {
  if (account_settings_ != NULL) account_settings_->::AccountSettingsMetadata::Clear();
  clear_has_account_settings();
}
const ::AccountSettingsMetadata& QueryUsersResponse_User::account_settings() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.account_settings)
  return account_settings_ != NULL ? *account_settings_
                         : *::AccountSettingsMetadata::internal_default_instance();
}
::AccountSettingsMetadata* QueryUsersResponse_User::mutable_account_settings() {
  set_has_account_settings();
  if (account_settings_ == NULL) {
    account_settings_ = new ::AccountSettingsMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.account_settings)
  return account_settings_;
}
::AccountSettingsMetadata* QueryUsersResponse_User::release_account_settings() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.User.account_settings)
  clear_has_account_settings();
  ::AccountSettingsMetadata* temp = account_settings_;
  account_settings_ = NULL;
  return temp;
}
void QueryUsersResponse_User::set_allocated_account_settings(::AccountSettingsMetadata* account_settings) {
  delete account_settings_;
  account_settings_ = account_settings;
  if (account_settings) {
    set_has_account_settings();
  } else {
    clear_has_account_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.User.account_settings)
}

// optional bool no_password = 7;
bool QueryUsersResponse_User::has_no_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryUsersResponse_User::set_has_no_password() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryUsersResponse_User::clear_has_no_password() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryUsersResponse_User::clear_no_password() {
  no_password_ = false;
  clear_has_no_password();
}
bool QueryUsersResponse_User::no_password() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.no_password)
  return no_password_;
}
void QueryUsersResponse_User::set_no_password(bool value) {
  set_has_no_password();
  no_password_ = value;
  // @@protoc_insertion_point(field_set:QueryUsersResponse.User.no_password)
}

inline const QueryUsersResponse_User* QueryUsersResponse_User::internal_default_instance() {
  return &QueryUsersResponse_User_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryUsersResponse

// optional .Headers headers = 1;
bool QueryUsersResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryUsersResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryUsersResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryUsersResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryUsersResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryUsersResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.headers)
  return headers_;
}
::Headers* QueryUsersResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryUsersResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.headers)
}

// repeated group User = 2 { ... };
int QueryUsersResponse::user_size() const {
  return user_.size();
}
void QueryUsersResponse::clear_user() {
  user_.Clear();
}
const ::QueryUsersResponse_User& QueryUsersResponse::user(int index) const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.user)
  return user_.Get(index);
}
::QueryUsersResponse_User* QueryUsersResponse::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.user)
  return user_.Mutable(index);
}
::QueryUsersResponse_User* QueryUsersResponse::add_user() {
  // @@protoc_insertion_point(field_add:QueryUsersResponse.user)
  return user_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >*
QueryUsersResponse::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:QueryUsersResponse.user)
  return &user_;
}
const ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >&
QueryUsersResponse::user() const {
  // @@protoc_insertion_point(field_list:QueryUsersResponse.user)
  return user_;
}

inline const QueryUsersResponse* QueryUsersResponse::internal_default_instance() {
  return &QueryUsersResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryViewpointsResponse_FollowerMetadata::kFollowerIdFieldNumber;
const int QueryViewpointsResponse_FollowerMetadata::kLabelRemovedFieldNumber;
const int QueryViewpointsResponse_FollowerMetadata::kLabelUnrevivableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryViewpointsResponse_FollowerMetadata::QueryViewpointsResponse_FollowerMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryViewpointsResponse.FollowerMetadata)
}

void QueryViewpointsResponse_FollowerMetadata::InitAsDefaultInstance() {
}

QueryViewpointsResponse_FollowerMetadata::QueryViewpointsResponse_FollowerMetadata(const QueryViewpointsResponse_FollowerMetadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryViewpointsResponse.FollowerMetadata)
}

void QueryViewpointsResponse_FollowerMetadata::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&follower_id_, 0, reinterpret_cast<char*>(&label_unrevivable_) -
    reinterpret_cast<char*>(&follower_id_) + sizeof(label_unrevivable_));
}

QueryViewpointsResponse_FollowerMetadata::~QueryViewpointsResponse_FollowerMetadata() {
  // @@protoc_insertion_point(destructor:QueryViewpointsResponse.FollowerMetadata)
  SharedDtor();
}

void QueryViewpointsResponse_FollowerMetadata::SharedDtor() {
}

void QueryViewpointsResponse_FollowerMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryViewpointsResponse_FollowerMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryViewpointsResponse_FollowerMetadata_descriptor_;
}

const QueryViewpointsResponse_FollowerMetadata& QueryViewpointsResponse_FollowerMetadata::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse_FollowerMetadata> QueryViewpointsResponse_FollowerMetadata_default_instance_;

QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_FollowerMetadata::New(::google::protobuf::Arena* arena) const {
  QueryViewpointsResponse_FollowerMetadata* n = new QueryViewpointsResponse_FollowerMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryViewpointsResponse_FollowerMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryViewpointsResponse.FollowerMetadata)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryViewpointsResponse_FollowerMetadata, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryViewpointsResponse_FollowerMetadata*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(follower_id_, label_unrevivable_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryViewpointsResponse_FollowerMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryViewpointsResponse.FollowerMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 follower_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_follower_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &follower_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_label_removed;
        break;
      }

      // optional bool label_removed = 2;
      case 2: {
        if (tag == 16) {
         parse_label_removed:
          set_has_label_removed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &label_removed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_label_unrevivable;
        break;
      }

      // optional bool label_unrevivable = 3;
      case 3: {
        if (tag == 24) {
         parse_label_unrevivable:
          set_has_label_unrevivable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &label_unrevivable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryViewpointsResponse.FollowerMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryViewpointsResponse.FollowerMetadata)
  return false;
#undef DO_
}

void QueryViewpointsResponse_FollowerMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryViewpointsResponse.FollowerMetadata)
  // optional int64 follower_id = 1;
  if (has_follower_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->follower_id(), output);
  }

  // optional bool label_removed = 2;
  if (has_label_removed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->label_removed(), output);
  }

  // optional bool label_unrevivable = 3;
  if (has_label_unrevivable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->label_unrevivable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryViewpointsResponse.FollowerMetadata)
}

::google::protobuf::uint8* QueryViewpointsResponse_FollowerMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryViewpointsResponse.FollowerMetadata)
  // optional int64 follower_id = 1;
  if (has_follower_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->follower_id(), target);
  }

  // optional bool label_removed = 2;
  if (has_label_removed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->label_removed(), target);
  }

  // optional bool label_unrevivable = 3;
  if (has_label_unrevivable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->label_unrevivable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryViewpointsResponse.FollowerMetadata)
  return target;
}

size_t QueryViewpointsResponse_FollowerMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryViewpointsResponse.FollowerMetadata)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 follower_id = 1;
    if (has_follower_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->follower_id());
    }

    // optional bool label_removed = 2;
    if (has_label_removed()) {
      total_size += 1 + 1;
    }

    // optional bool label_unrevivable = 3;
    if (has_label_unrevivable()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryViewpointsResponse_FollowerMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryViewpointsResponse.FollowerMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryViewpointsResponse_FollowerMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryViewpointsResponse_FollowerMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryViewpointsResponse.FollowerMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryViewpointsResponse.FollowerMetadata)
    UnsafeMergeFrom(*source);
  }
}

void QueryViewpointsResponse_FollowerMetadata::MergeFrom(const QueryViewpointsResponse_FollowerMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryViewpointsResponse.FollowerMetadata)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryViewpointsResponse_FollowerMetadata::UnsafeMergeFrom(const QueryViewpointsResponse_FollowerMetadata& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_follower_id()) {
      set_follower_id(from.follower_id());
    }
    if (from.has_label_removed()) {
      set_label_removed(from.label_removed());
    }
    if (from.has_label_unrevivable()) {
      set_label_unrevivable(from.label_unrevivable());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryViewpointsResponse_FollowerMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryViewpointsResponse.FollowerMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryViewpointsResponse_FollowerMetadata::CopyFrom(const QueryViewpointsResponse_FollowerMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryViewpointsResponse.FollowerMetadata)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryViewpointsResponse_FollowerMetadata::IsInitialized() const {

  return true;
}

void QueryViewpointsResponse_FollowerMetadata::Swap(QueryViewpointsResponse_FollowerMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryViewpointsResponse_FollowerMetadata::InternalSwap(QueryViewpointsResponse_FollowerMetadata* other) {
  std::swap(follower_id_, other->follower_id_);
  std::swap(label_removed_, other->label_removed_);
  std::swap(label_unrevivable_, other->label_unrevivable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryViewpointsResponse_FollowerMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryViewpointsResponse_FollowerMetadata_descriptor_;
  metadata.reflection = QueryViewpointsResponse_FollowerMetadata_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryViewpointsResponse_Viewpoint::kFollowerLastKeyFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kActivityLastKeyFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kEpisodeLastKeyFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kCommentLastKeyFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kMetadataFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kFollowersFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kActivitiesFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kEpisodesFieldNumber;
const int QueryViewpointsResponse_Viewpoint::kCommentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryViewpointsResponse_Viewpoint::QueryViewpointsResponse_Viewpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryViewpointsResponse.Viewpoint)
}

void QueryViewpointsResponse_Viewpoint::InitAsDefaultInstance() {
  metadata_ = const_cast< ::ViewpointMetadata*>(
      ::ViewpointMetadata::internal_default_instance());
}

QueryViewpointsResponse_Viewpoint::QueryViewpointsResponse_Viewpoint(const QueryViewpointsResponse_Viewpoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryViewpointsResponse.Viewpoint)
}

void QueryViewpointsResponse_Viewpoint::SharedCtor() {
  _cached_size_ = 0;
  follower_last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  activity_last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  episode_last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_last_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
}

QueryViewpointsResponse_Viewpoint::~QueryViewpointsResponse_Viewpoint() {
  // @@protoc_insertion_point(destructor:QueryViewpointsResponse.Viewpoint)
  SharedDtor();
}

void QueryViewpointsResponse_Viewpoint::SharedDtor() {
  follower_last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  activity_last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  episode_last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_last_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QueryViewpointsResponse_Viewpoint_default_instance_.get()) {
    delete metadata_;
  }
}

void QueryViewpointsResponse_Viewpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryViewpointsResponse_Viewpoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryViewpointsResponse_Viewpoint_descriptor_;
}

const QueryViewpointsResponse_Viewpoint& QueryViewpointsResponse_Viewpoint::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse_Viewpoint> QueryViewpointsResponse_Viewpoint_default_instance_;

QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse_Viewpoint::New(::google::protobuf::Arena* arena) const {
  QueryViewpointsResponse_Viewpoint* n = new QueryViewpointsResponse_Viewpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryViewpointsResponse_Viewpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryViewpointsResponse.Viewpoint)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_follower_last_key()) {
      follower_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_activity_last_key()) {
      activity_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_episode_last_key()) {
      episode_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_comment_last_key()) {
      comment_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::ViewpointMetadata::Clear();
    }
  }
  followers_.Clear();
  activities_.Clear();
  episodes_.Clear();
  comments_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryViewpointsResponse_Viewpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryViewpointsResponse.Viewpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string follower_last_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_follower_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->follower_last_key().data(), this->follower_last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryViewpointsResponse.Viewpoint.follower_last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_activity_last_key;
        break;
      }

      // optional string activity_last_key = 2;
      case 2: {
        if (tag == 18) {
         parse_activity_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activity_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activity_last_key().data(), this->activity_last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryViewpointsResponse.Viewpoint.activity_last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_episode_last_key;
        break;
      }

      // optional string episode_last_key = 3;
      case 3: {
        if (tag == 26) {
         parse_episode_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_episode_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->episode_last_key().data(), this->episode_last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryViewpointsResponse.Viewpoint.episode_last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_comment_last_key;
        break;
      }

      // optional string comment_last_key = 4;
      case 4: {
        if (tag == 34) {
         parse_comment_last_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment_last_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment_last_key().data(), this->comment_last_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryViewpointsResponse.Viewpoint.comment_last_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_metadata;
        break;
      }

      // optional .ViewpointMetadata metadata = 5;
      case 5: {
        if (tag == 42) {
         parse_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_followers;
        break;
      }

      // repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
      case 6: {
        if (tag == 50) {
         parse_followers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_followers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_followers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_followers;
        if (input->ExpectTag(58)) goto parse_loop_activities;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ActivityMetadata activities = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_activities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_activities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_activities;
        if (input->ExpectTag(66)) goto parse_loop_episodes;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .EpisodeMetadata episodes = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_episodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_episodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_episodes;
        if (input->ExpectTag(74)) goto parse_loop_comments;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CommentMetadata comments = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_comments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_comments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_comments;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryViewpointsResponse.Viewpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryViewpointsResponse.Viewpoint)
  return false;
#undef DO_
}

void QueryViewpointsResponse_Viewpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryViewpointsResponse.Viewpoint)
  // optional string follower_last_key = 1;
  if (has_follower_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follower_last_key().data(), this->follower_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.follower_last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->follower_last_key(), output);
  }

  // optional string activity_last_key = 2;
  if (has_activity_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activity_last_key().data(), this->activity_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.activity_last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->activity_last_key(), output);
  }

  // optional string episode_last_key = 3;
  if (has_episode_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->episode_last_key().data(), this->episode_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.episode_last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->episode_last_key(), output);
  }

  // optional string comment_last_key = 4;
  if (has_comment_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment_last_key().data(), this->comment_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.comment_last_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->comment_last_key(), output);
  }

  // optional .ViewpointMetadata metadata = 5;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->metadata_, output);
  }

  // repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
  for (unsigned int i = 0, n = this->followers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->followers(i), output);
  }

  // repeated .ActivityMetadata activities = 7;
  for (unsigned int i = 0, n = this->activities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->activities(i), output);
  }

  // repeated .EpisodeMetadata episodes = 8;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->episodes(i), output);
  }

  // repeated .CommentMetadata comments = 9;
  for (unsigned int i = 0, n = this->comments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->comments(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryViewpointsResponse.Viewpoint)
}

::google::protobuf::uint8* QueryViewpointsResponse_Viewpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryViewpointsResponse.Viewpoint)
  // optional string follower_last_key = 1;
  if (has_follower_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follower_last_key().data(), this->follower_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.follower_last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->follower_last_key(), target);
  }

  // optional string activity_last_key = 2;
  if (has_activity_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activity_last_key().data(), this->activity_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.activity_last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->activity_last_key(), target);
  }

  // optional string episode_last_key = 3;
  if (has_episode_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->episode_last_key().data(), this->episode_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.episode_last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->episode_last_key(), target);
  }

  // optional string comment_last_key = 4;
  if (has_comment_last_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment_last_key().data(), this->comment_last_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryViewpointsResponse.Viewpoint.comment_last_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->comment_last_key(), target);
  }

  // optional .ViewpointMetadata metadata = 5;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->metadata_, false, target);
  }

  // repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
  for (unsigned int i = 0, n = this->followers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->followers(i), false, target);
  }

  // repeated .ActivityMetadata activities = 7;
  for (unsigned int i = 0, n = this->activities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->activities(i), false, target);
  }

  // repeated .EpisodeMetadata episodes = 8;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->episodes(i), false, target);
  }

  // repeated .CommentMetadata comments = 9;
  for (unsigned int i = 0, n = this->comments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->comments(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryViewpointsResponse.Viewpoint)
  return target;
}

size_t QueryViewpointsResponse_Viewpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryViewpointsResponse.Viewpoint)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string follower_last_key = 1;
    if (has_follower_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->follower_last_key());
    }

    // optional string activity_last_key = 2;
    if (has_activity_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activity_last_key());
    }

    // optional string episode_last_key = 3;
    if (has_episode_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->episode_last_key());
    }

    // optional string comment_last_key = 4;
    if (has_comment_last_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment_last_key());
    }

    // optional .ViewpointMetadata metadata = 5;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->metadata_);
    }

  }
  // repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
  {
    unsigned int count = this->followers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->followers(i));
    }
  }

  // repeated .ActivityMetadata activities = 7;
  {
    unsigned int count = this->activities_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activities(i));
    }
  }

  // repeated .EpisodeMetadata episodes = 8;
  {
    unsigned int count = this->episodes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->episodes(i));
    }
  }

  // repeated .CommentMetadata comments = 9;
  {
    unsigned int count = this->comments_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->comments(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryViewpointsResponse_Viewpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryViewpointsResponse.Viewpoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryViewpointsResponse_Viewpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryViewpointsResponse_Viewpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryViewpointsResponse.Viewpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryViewpointsResponse.Viewpoint)
    UnsafeMergeFrom(*source);
  }
}

void QueryViewpointsResponse_Viewpoint::MergeFrom(const QueryViewpointsResponse_Viewpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryViewpointsResponse.Viewpoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryViewpointsResponse_Viewpoint::UnsafeMergeFrom(const QueryViewpointsResponse_Viewpoint& from) {
  GOOGLE_DCHECK(&from != this);
  followers_.MergeFrom(from.followers_);
  activities_.MergeFrom(from.activities_);
  episodes_.MergeFrom(from.episodes_);
  comments_.MergeFrom(from.comments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_follower_last_key()) {
      set_has_follower_last_key();
      follower_last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.follower_last_key_);
    }
    if (from.has_activity_last_key()) {
      set_has_activity_last_key();
      activity_last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activity_last_key_);
    }
    if (from.has_episode_last_key()) {
      set_has_episode_last_key();
      episode_last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.episode_last_key_);
    }
    if (from.has_comment_last_key()) {
      set_has_comment_last_key();
      comment_last_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_last_key_);
    }
    if (from.has_metadata()) {
      mutable_metadata()->::ViewpointMetadata::MergeFrom(from.metadata());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryViewpointsResponse_Viewpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryViewpointsResponse.Viewpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryViewpointsResponse_Viewpoint::CopyFrom(const QueryViewpointsResponse_Viewpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryViewpointsResponse.Viewpoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryViewpointsResponse_Viewpoint::IsInitialized() const {

  return true;
}

void QueryViewpointsResponse_Viewpoint::Swap(QueryViewpointsResponse_Viewpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryViewpointsResponse_Viewpoint::InternalSwap(QueryViewpointsResponse_Viewpoint* other) {
  follower_last_key_.Swap(&other->follower_last_key_);
  activity_last_key_.Swap(&other->activity_last_key_);
  episode_last_key_.Swap(&other->episode_last_key_);
  comment_last_key_.Swap(&other->comment_last_key_);
  std::swap(metadata_, other->metadata_);
  followers_.UnsafeArenaSwap(&other->followers_);
  activities_.UnsafeArenaSwap(&other->activities_);
  episodes_.UnsafeArenaSwap(&other->episodes_);
  comments_.UnsafeArenaSwap(&other->comments_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryViewpointsResponse_Viewpoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryViewpointsResponse_Viewpoint_descriptor_;
  metadata.reflection = QueryViewpointsResponse_Viewpoint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryViewpointsResponse::kHeadersFieldNumber;
const int QueryViewpointsResponse::kViewpointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryViewpointsResponse::QueryViewpointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryViewpointsResponse)
}

void QueryViewpointsResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

QueryViewpointsResponse::QueryViewpointsResponse(const QueryViewpointsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueryViewpointsResponse)
}

void QueryViewpointsResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

QueryViewpointsResponse::~QueryViewpointsResponse() {
  // @@protoc_insertion_point(destructor:QueryViewpointsResponse)
  SharedDtor();
}

void QueryViewpointsResponse::SharedDtor() {
  if (this != &QueryViewpointsResponse_default_instance_.get()) {
    delete headers_;
  }
}

void QueryViewpointsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryViewpointsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryViewpointsResponse_descriptor_;
}

const QueryViewpointsResponse& QueryViewpointsResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse> QueryViewpointsResponse_default_instance_;

QueryViewpointsResponse* QueryViewpointsResponse::New(::google::protobuf::Arena* arena) const {
  QueryViewpointsResponse* n = new QueryViewpointsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryViewpointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryViewpointsResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  viewpoints_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryViewpointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryViewpointsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_viewpoints;
        break;
      }

      // repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
      case 2: {
        if (tag == 18) {
         parse_viewpoints:
          DO_(input->IncrementRecursionDepth());
         parse_loop_viewpoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_viewpoints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_viewpoints;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryViewpointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryViewpointsResponse)
  return false;
#undef DO_
}

void QueryViewpointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryViewpointsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
  for (unsigned int i = 0, n = this->viewpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->viewpoints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryViewpointsResponse)
}

::google::protobuf::uint8* QueryViewpointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryViewpointsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
  for (unsigned int i = 0, n = this->viewpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->viewpoints(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryViewpointsResponse)
  return target;
}

size_t QueryViewpointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryViewpointsResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
  {
    unsigned int count = this->viewpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->viewpoints(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryViewpointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryViewpointsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryViewpointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryViewpointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryViewpointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryViewpointsResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryViewpointsResponse::MergeFrom(const QueryViewpointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryViewpointsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryViewpointsResponse::UnsafeMergeFrom(const QueryViewpointsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  viewpoints_.MergeFrom(from.viewpoints_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void QueryViewpointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryViewpointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryViewpointsResponse::CopyFrom(const QueryViewpointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryViewpointsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryViewpointsResponse::IsInitialized() const {

  return true;
}

void QueryViewpointsResponse::Swap(QueryViewpointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryViewpointsResponse::InternalSwap(QueryViewpointsResponse* other) {
  std::swap(headers_, other->headers_);
  viewpoints_.UnsafeArenaSwap(&other->viewpoints_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryViewpointsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryViewpointsResponse_descriptor_;
  metadata.reflection = QueryViewpointsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryViewpointsResponse_FollowerMetadata

// optional int64 follower_id = 1;
bool QueryViewpointsResponse_FollowerMetadata::has_follower_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryViewpointsResponse_FollowerMetadata::set_has_follower_id() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_has_follower_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_follower_id() {
  follower_id_ = GOOGLE_LONGLONG(0);
  clear_has_follower_id();
}
::google::protobuf::int64 QueryViewpointsResponse_FollowerMetadata::follower_id() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.follower_id)
  return follower_id_;
}
void QueryViewpointsResponse_FollowerMetadata::set_follower_id(::google::protobuf::int64 value) {
  set_has_follower_id();
  follower_id_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.follower_id)
}

// optional bool label_removed = 2;
bool QueryViewpointsResponse_FollowerMetadata::has_label_removed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryViewpointsResponse_FollowerMetadata::set_has_label_removed() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_has_label_removed() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_label_removed() {
  label_removed_ = false;
  clear_has_label_removed();
}
bool QueryViewpointsResponse_FollowerMetadata::label_removed() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.label_removed)
  return label_removed_;
}
void QueryViewpointsResponse_FollowerMetadata::set_label_removed(bool value) {
  set_has_label_removed();
  label_removed_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.label_removed)
}

// optional bool label_unrevivable = 3;
bool QueryViewpointsResponse_FollowerMetadata::has_label_unrevivable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryViewpointsResponse_FollowerMetadata::set_has_label_unrevivable() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_has_label_unrevivable() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryViewpointsResponse_FollowerMetadata::clear_label_unrevivable() {
  label_unrevivable_ = false;
  clear_has_label_unrevivable();
}
bool QueryViewpointsResponse_FollowerMetadata::label_unrevivable() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.label_unrevivable)
  return label_unrevivable_;
}
void QueryViewpointsResponse_FollowerMetadata::set_label_unrevivable(bool value) {
  set_has_label_unrevivable();
  label_unrevivable_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.label_unrevivable)
}

inline const QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_FollowerMetadata::internal_default_instance() {
  return &QueryViewpointsResponse_FollowerMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryViewpointsResponse_Viewpoint

// optional string follower_last_key = 1;
bool QueryViewpointsResponse_Viewpoint::has_follower_last_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryViewpointsResponse_Viewpoint::set_has_follower_last_key() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryViewpointsResponse_Viewpoint::clear_has_follower_last_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryViewpointsResponse_Viewpoint::clear_follower_last_key() {
  follower_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_follower_last_key();
}
const ::std::string& QueryViewpointsResponse_Viewpoint::follower_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.follower_last_key)
  return follower_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const ::std::string& value) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const char* value) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const char* value, size_t size) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
::std::string* QueryViewpointsResponse_Viewpoint::mutable_follower_last_key() {
  set_has_follower_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.follower_last_key)
  return follower_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryViewpointsResponse_Viewpoint::release_follower_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.follower_last_key)
  clear_has_follower_last_key();
  return follower_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_allocated_follower_last_key(::std::string* follower_last_key) {
  if (follower_last_key != NULL) {
    set_has_follower_last_key();
  } else {
    clear_has_follower_last_key();
  }
  follower_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), follower_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.follower_last_key)
}

// optional string activity_last_key = 2;
bool QueryViewpointsResponse_Viewpoint::has_activity_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryViewpointsResponse_Viewpoint::set_has_activity_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryViewpointsResponse_Viewpoint::clear_has_activity_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryViewpointsResponse_Viewpoint::clear_activity_last_key() {
  activity_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activity_last_key();
}
const ::std::string& QueryViewpointsResponse_Viewpoint::activity_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.activity_last_key)
  return activity_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const ::std::string& value) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const char* value) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const char* value, size_t size) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
::std::string* QueryViewpointsResponse_Viewpoint::mutable_activity_last_key() {
  set_has_activity_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.activity_last_key)
  return activity_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryViewpointsResponse_Viewpoint::release_activity_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.activity_last_key)
  clear_has_activity_last_key();
  return activity_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_allocated_activity_last_key(::std::string* activity_last_key) {
  if (activity_last_key != NULL) {
    set_has_activity_last_key();
  } else {
    clear_has_activity_last_key();
  }
  activity_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activity_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.activity_last_key)
}

// optional string episode_last_key = 3;
bool QueryViewpointsResponse_Viewpoint::has_episode_last_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryViewpointsResponse_Viewpoint::set_has_episode_last_key() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryViewpointsResponse_Viewpoint::clear_has_episode_last_key() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryViewpointsResponse_Viewpoint::clear_episode_last_key() {
  episode_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_last_key();
}
const ::std::string& QueryViewpointsResponse_Viewpoint::episode_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.episode_last_key)
  return episode_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const ::std::string& value) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const char* value) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const char* value, size_t size) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
::std::string* QueryViewpointsResponse_Viewpoint::mutable_episode_last_key() {
  set_has_episode_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.episode_last_key)
  return episode_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryViewpointsResponse_Viewpoint::release_episode_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.episode_last_key)
  clear_has_episode_last_key();
  return episode_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_allocated_episode_last_key(::std::string* episode_last_key) {
  if (episode_last_key != NULL) {
    set_has_episode_last_key();
  } else {
    clear_has_episode_last_key();
  }
  episode_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.episode_last_key)
}

// optional string comment_last_key = 4;
bool QueryViewpointsResponse_Viewpoint::has_comment_last_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryViewpointsResponse_Viewpoint::set_has_comment_last_key() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryViewpointsResponse_Viewpoint::clear_has_comment_last_key() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryViewpointsResponse_Viewpoint::clear_comment_last_key() {
  comment_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment_last_key();
}
const ::std::string& QueryViewpointsResponse_Viewpoint::comment_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.comment_last_key)
  return comment_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const ::std::string& value) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const char* value) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const char* value, size_t size) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
::std::string* QueryViewpointsResponse_Viewpoint::mutable_comment_last_key() {
  set_has_comment_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.comment_last_key)
  return comment_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryViewpointsResponse_Viewpoint::release_comment_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.comment_last_key)
  clear_has_comment_last_key();
  return comment_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryViewpointsResponse_Viewpoint::set_allocated_comment_last_key(::std::string* comment_last_key) {
  if (comment_last_key != NULL) {
    set_has_comment_last_key();
  } else {
    clear_has_comment_last_key();
  }
  comment_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.comment_last_key)
}

// optional .ViewpointMetadata metadata = 5;
bool QueryViewpointsResponse_Viewpoint::has_metadata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueryViewpointsResponse_Viewpoint::set_has_metadata() {
  _has_bits_[0] |= 0x00000010u;
}
void QueryViewpointsResponse_Viewpoint::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueryViewpointsResponse_Viewpoint::clear_metadata() {
  if (metadata_ != NULL) metadata_->::ViewpointMetadata::Clear();
  clear_has_metadata();
}
const ::ViewpointMetadata& QueryViewpointsResponse_Viewpoint::metadata() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::ViewpointMetadata::internal_default_instance();
}
::ViewpointMetadata* QueryViewpointsResponse_Viewpoint::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::ViewpointMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.metadata)
  return metadata_;
}
::ViewpointMetadata* QueryViewpointsResponse_Viewpoint::release_metadata() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.metadata)
  clear_has_metadata();
  ::ViewpointMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void QueryViewpointsResponse_Viewpoint::set_allocated_metadata(::ViewpointMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.metadata)
}

// repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
int QueryViewpointsResponse_Viewpoint::followers_size() const {
  return followers_.size();
}
void QueryViewpointsResponse_Viewpoint::clear_followers() {
  followers_.Clear();
}
const ::QueryViewpointsResponse_FollowerMetadata& QueryViewpointsResponse_Viewpoint::followers(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Get(index);
}
::QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_Viewpoint::mutable_followers(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Mutable(index);
}
::QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_Viewpoint::add_followers() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_followers() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.followers)
  return &followers_;
}
const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >&
QueryViewpointsResponse_Viewpoint::followers() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.followers)
  return followers_;
}

// repeated .ActivityMetadata activities = 7;
int QueryViewpointsResponse_Viewpoint::activities_size() const {
  return activities_.size();
}
void QueryViewpointsResponse_Viewpoint::clear_activities() {
  activities_.Clear();
}
const ::ActivityMetadata& QueryViewpointsResponse_Viewpoint::activities(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Get(index);
}
::ActivityMetadata* QueryViewpointsResponse_Viewpoint::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Mutable(index);
}
::ActivityMetadata* QueryViewpointsResponse_Viewpoint::add_activities() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.activities)
  return &activities_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata >&
QueryViewpointsResponse_Viewpoint::activities() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.activities)
  return activities_;
}

// repeated .EpisodeMetadata episodes = 8;
int QueryViewpointsResponse_Viewpoint::episodes_size() const {
  return episodes_.size();
}
void QueryViewpointsResponse_Viewpoint::clear_episodes() {
  episodes_.Clear();
}
const ::EpisodeMetadata& QueryViewpointsResponse_Viewpoint::episodes(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Get(index);
}
::EpisodeMetadata* QueryViewpointsResponse_Viewpoint::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Mutable(index);
}
::EpisodeMetadata* QueryViewpointsResponse_Viewpoint::add_episodes() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.episodes)
  return &episodes_;
}
const ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >&
QueryViewpointsResponse_Viewpoint::episodes() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_;
}

// repeated .CommentMetadata comments = 9;
int QueryViewpointsResponse_Viewpoint::comments_size() const {
  return comments_.size();
}
void QueryViewpointsResponse_Viewpoint::clear_comments() {
  comments_.Clear();
}
const ::CommentMetadata& QueryViewpointsResponse_Viewpoint::comments(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Get(index);
}
::CommentMetadata* QueryViewpointsResponse_Viewpoint::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Mutable(index);
}
::CommentMetadata* QueryViewpointsResponse_Viewpoint::add_comments() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Add();
}
::google::protobuf::RepeatedPtrField< ::CommentMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.comments)
  return &comments_;
}
const ::google::protobuf::RepeatedPtrField< ::CommentMetadata >&
QueryViewpointsResponse_Viewpoint::comments() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.comments)
  return comments_;
}

inline const QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse_Viewpoint::internal_default_instance() {
  return &QueryViewpointsResponse_Viewpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryViewpointsResponse

// optional .Headers headers = 1;
bool QueryViewpointsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryViewpointsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryViewpointsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryViewpointsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& QueryViewpointsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* QueryViewpointsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.headers)
  return headers_;
}
::Headers* QueryViewpointsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void QueryViewpointsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.headers)
}

// repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
int QueryViewpointsResponse::viewpoints_size() const {
  return viewpoints_.size();
}
void QueryViewpointsResponse::clear_viewpoints() {
  viewpoints_.Clear();
}
const ::QueryViewpointsResponse_Viewpoint& QueryViewpointsResponse::viewpoints(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Get(index);
}
::QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse::mutable_viewpoints(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Mutable(index);
}
::QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse::add_viewpoints() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >*
QueryViewpointsResponse::mutable_viewpoints() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.viewpoints)
  return &viewpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >&
QueryViewpointsResponse::viewpoints() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.viewpoints)
  return viewpoints_;
}

inline const QueryViewpointsResponse* QueryViewpointsResponse::internal_default_instance() {
  return &QueryViewpointsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolveContactsResponse::kHeadersFieldNumber;
const int ResolveContactsResponse::kContactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolveContactsResponse::ResolveContactsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResolveContactsResponse)
}

void ResolveContactsResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

ResolveContactsResponse::ResolveContactsResponse(const ResolveContactsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResolveContactsResponse)
}

void ResolveContactsResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

ResolveContactsResponse::~ResolveContactsResponse() {
  // @@protoc_insertion_point(destructor:ResolveContactsResponse)
  SharedDtor();
}

void ResolveContactsResponse::SharedDtor() {
  if (this != &ResolveContactsResponse_default_instance_.get()) {
    delete headers_;
  }
}

void ResolveContactsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResolveContactsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResolveContactsResponse_descriptor_;
}

const ResolveContactsResponse& ResolveContactsResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResolveContactsResponse> ResolveContactsResponse_default_instance_;

ResolveContactsResponse* ResolveContactsResponse::New(::google::protobuf::Arena* arena) const {
  ResolveContactsResponse* n = new ResolveContactsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResolveContactsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ResolveContactsResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  contacts_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResolveContactsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResolveContactsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contacts;
        break;
      }

      // repeated .ContactMetadata contacts = 2;
      case 2: {
        if (tag == 18) {
         parse_contacts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contacts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contacts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_contacts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResolveContactsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResolveContactsResponse)
  return false;
#undef DO_
}

void ResolveContactsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResolveContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated .ContactMetadata contacts = 2;
  for (unsigned int i = 0, n = this->contacts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->contacts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResolveContactsResponse)
}

::google::protobuf::uint8* ResolveContactsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResolveContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated .ContactMetadata contacts = 2;
  for (unsigned int i = 0, n = this->contacts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->contacts(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResolveContactsResponse)
  return target;
}

size_t ResolveContactsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResolveContactsResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated .ContactMetadata contacts = 2;
  {
    unsigned int count = this->contacts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contacts(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResolveContactsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResolveContactsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResolveContactsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolveContactsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResolveContactsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResolveContactsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ResolveContactsResponse::MergeFrom(const ResolveContactsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResolveContactsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResolveContactsResponse::UnsafeMergeFrom(const ResolveContactsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  contacts_.MergeFrom(from.contacts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ResolveContactsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResolveContactsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolveContactsResponse::CopyFrom(const ResolveContactsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResolveContactsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResolveContactsResponse::IsInitialized() const {

  return true;
}

void ResolveContactsResponse::Swap(ResolveContactsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolveContactsResponse::InternalSwap(ResolveContactsResponse* other) {
  std::swap(headers_, other->headers_);
  contacts_.UnsafeArenaSwap(&other->contacts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResolveContactsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResolveContactsResponse_descriptor_;
  metadata.reflection = ResolveContactsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResolveContactsResponse

// optional .Headers headers = 1;
bool ResolveContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResolveContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void ResolveContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResolveContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& ResolveContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:ResolveContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* ResolveContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:ResolveContactsResponse.headers)
  return headers_;
}
::Headers* ResolveContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:ResolveContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void ResolveContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:ResolveContactsResponse.headers)
}

// repeated .ContactMetadata contacts = 2;
int ResolveContactsResponse::contacts_size() const {
  return contacts_.size();
}
void ResolveContactsResponse::clear_contacts() {
  contacts_.Clear();
}
const ::ContactMetadata& ResolveContactsResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:ResolveContactsResponse.contacts)
  return contacts_.Get(index);
}
::ContactMetadata* ResolveContactsResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:ResolveContactsResponse.contacts)
  return contacts_.Mutable(index);
}
::ContactMetadata* ResolveContactsResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:ResolveContactsResponse.contacts)
  return contacts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
ResolveContactsResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:ResolveContactsResponse.contacts)
  return &contacts_;
}
const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
ResolveContactsResponse::contacts() const {
  // @@protoc_insertion_point(field_list:ResolveContactsResponse.contacts)
  return contacts_;
}

inline const ResolveContactsResponse* ResolveContactsResponse::internal_default_instance() {
  return &ResolveContactsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RsvpResponse_Rsvp::kEpisodeIdFieldNumber;
const int RsvpResponse_Rsvp::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RsvpResponse_Rsvp::RsvpResponse_Rsvp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RsvpResponse.Rsvp)
}

void RsvpResponse_Rsvp::InitAsDefaultInstance() {
}

RsvpResponse_Rsvp::RsvpResponse_Rsvp(const RsvpResponse_Rsvp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RsvpResponse.Rsvp)
}

void RsvpResponse_Rsvp::SharedCtor() {
  _cached_size_ = 0;
  episode_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RsvpResponse_Rsvp::~RsvpResponse_Rsvp() {
  // @@protoc_insertion_point(destructor:RsvpResponse.Rsvp)
  SharedDtor();
}

void RsvpResponse_Rsvp::SharedDtor() {
  episode_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RsvpResponse_Rsvp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RsvpResponse_Rsvp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RsvpResponse_Rsvp_descriptor_;
}

const RsvpResponse_Rsvp& RsvpResponse_Rsvp::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RsvpResponse_Rsvp> RsvpResponse_Rsvp_default_instance_;

RsvpResponse_Rsvp* RsvpResponse_Rsvp::New(::google::protobuf::Arena* arena) const {
  RsvpResponse_Rsvp* n = new RsvpResponse_Rsvp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RsvpResponse_Rsvp::Clear() {
// @@protoc_insertion_point(message_clear_start:RsvpResponse.Rsvp)
  if (has_episode_id()) {
    episode_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  labels_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RsvpResponse_Rsvp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RsvpResponse.Rsvp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string episode_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_episode_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->episode_id().data(), this->episode_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RsvpResponse.Rsvp.episode_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_labels;
        break;
      }

      // repeated string labels = 2;
      case 2: {
        if (tag == 18) {
         parse_labels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->labels(this->labels_size() - 1).data(),
            this->labels(this->labels_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RsvpResponse.Rsvp.labels");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_labels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RsvpResponse.Rsvp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RsvpResponse.Rsvp)
  return false;
#undef DO_
}

void RsvpResponse_Rsvp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RsvpResponse.Rsvp)
  // optional string episode_id = 1;
  if (has_episode_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->episode_id().data(), this->episode_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RsvpResponse.Rsvp.episode_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->episode_id(), output);
  }

  // repeated string labels = 2;
  for (int i = 0; i < this->labels_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labels(i).data(), this->labels(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RsvpResponse.Rsvp.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->labels(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RsvpResponse.Rsvp)
}

::google::protobuf::uint8* RsvpResponse_Rsvp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RsvpResponse.Rsvp)
  // optional string episode_id = 1;
  if (has_episode_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->episode_id().data(), this->episode_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RsvpResponse.Rsvp.episode_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->episode_id(), target);
  }

  // repeated string labels = 2;
  for (int i = 0; i < this->labels_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labels(i).data(), this->labels(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RsvpResponse.Rsvp.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->labels(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RsvpResponse.Rsvp)
  return target;
}

size_t RsvpResponse_Rsvp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RsvpResponse.Rsvp)
  size_t total_size = 0;

  // optional string episode_id = 1;
  if (has_episode_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->episode_id());
  }

  // repeated string labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0; i < this->labels_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RsvpResponse_Rsvp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RsvpResponse.Rsvp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RsvpResponse_Rsvp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RsvpResponse_Rsvp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RsvpResponse.Rsvp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RsvpResponse.Rsvp)
    UnsafeMergeFrom(*source);
  }
}

void RsvpResponse_Rsvp::MergeFrom(const RsvpResponse_Rsvp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RsvpResponse.Rsvp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RsvpResponse_Rsvp::UnsafeMergeFrom(const RsvpResponse_Rsvp& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.UnsafeMergeFrom(from.labels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_episode_id()) {
      set_has_episode_id();
      episode_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.episode_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RsvpResponse_Rsvp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RsvpResponse.Rsvp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RsvpResponse_Rsvp::CopyFrom(const RsvpResponse_Rsvp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RsvpResponse.Rsvp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RsvpResponse_Rsvp::IsInitialized() const {

  return true;
}

void RsvpResponse_Rsvp::Swap(RsvpResponse_Rsvp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RsvpResponse_Rsvp::InternalSwap(RsvpResponse_Rsvp* other) {
  episode_id_.Swap(&other->episode_id_);
  labels_.UnsafeArenaSwap(&other->labels_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RsvpResponse_Rsvp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RsvpResponse_Rsvp_descriptor_;
  metadata.reflection = RsvpResponse_Rsvp_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RsvpResponse::kHeadersFieldNumber;
const int RsvpResponse::kRsvpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RsvpResponse::RsvpResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RsvpResponse)
}

void RsvpResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

RsvpResponse::RsvpResponse(const RsvpResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RsvpResponse)
}

void RsvpResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

RsvpResponse::~RsvpResponse() {
  // @@protoc_insertion_point(destructor:RsvpResponse)
  SharedDtor();
}

void RsvpResponse::SharedDtor() {
  if (this != &RsvpResponse_default_instance_.get()) {
    delete headers_;
  }
}

void RsvpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RsvpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RsvpResponse_descriptor_;
}

const RsvpResponse& RsvpResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RsvpResponse> RsvpResponse_default_instance_;

RsvpResponse* RsvpResponse::New(::google::protobuf::Arena* arena) const {
  RsvpResponse* n = new RsvpResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RsvpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RsvpResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  rsvps_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RsvpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RsvpResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rsvps;
        break;
      }

      // repeated .RsvpResponse.Rsvp rsvps = 2;
      case 2: {
        if (tag == 18) {
         parse_rsvps:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rsvps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rsvps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_rsvps;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RsvpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RsvpResponse)
  return false;
#undef DO_
}

void RsvpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RsvpResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated .RsvpResponse.Rsvp rsvps = 2;
  for (unsigned int i = 0, n = this->rsvps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rsvps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RsvpResponse)
}

::google::protobuf::uint8* RsvpResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RsvpResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated .RsvpResponse.Rsvp rsvps = 2;
  for (unsigned int i = 0, n = this->rsvps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rsvps(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RsvpResponse)
  return target;
}

size_t RsvpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RsvpResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated .RsvpResponse.Rsvp rsvps = 2;
  {
    unsigned int count = this->rsvps_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rsvps(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RsvpResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RsvpResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RsvpResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RsvpResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RsvpResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RsvpResponse)
    UnsafeMergeFrom(*source);
  }
}

void RsvpResponse::MergeFrom(const RsvpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RsvpResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RsvpResponse::UnsafeMergeFrom(const RsvpResponse& from) {
  GOOGLE_DCHECK(&from != this);
  rsvps_.MergeFrom(from.rsvps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RsvpResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RsvpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RsvpResponse::CopyFrom(const RsvpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RsvpResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RsvpResponse::IsInitialized() const {

  return true;
}

void RsvpResponse::Swap(RsvpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RsvpResponse::InternalSwap(RsvpResponse* other) {
  std::swap(headers_, other->headers_);
  rsvps_.UnsafeArenaSwap(&other->rsvps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RsvpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RsvpResponse_descriptor_;
  metadata.reflection = RsvpResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RsvpResponse_Rsvp

// optional string episode_id = 1;
bool RsvpResponse_Rsvp::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RsvpResponse_Rsvp::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RsvpResponse_Rsvp::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RsvpResponse_Rsvp::clear_episode_id() {
  episode_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_id();
}
const ::std::string& RsvpResponse_Rsvp::episode_id() const {
  // @@protoc_insertion_point(field_get:RsvpResponse.Rsvp.episode_id)
  return episode_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RsvpResponse_Rsvp::set_episode_id(const ::std::string& value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RsvpResponse.Rsvp.episode_id)
}
void RsvpResponse_Rsvp::set_episode_id(const char* value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RsvpResponse.Rsvp.episode_id)
}
void RsvpResponse_Rsvp::set_episode_id(const char* value, size_t size) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RsvpResponse.Rsvp.episode_id)
}
::std::string* RsvpResponse_Rsvp::mutable_episode_id() {
  set_has_episode_id();
  // @@protoc_insertion_point(field_mutable:RsvpResponse.Rsvp.episode_id)
  return episode_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RsvpResponse_Rsvp::release_episode_id() {
  // @@protoc_insertion_point(field_release:RsvpResponse.Rsvp.episode_id)
  clear_has_episode_id();
  return episode_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RsvpResponse_Rsvp::set_allocated_episode_id(::std::string* episode_id) {
  if (episode_id != NULL) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  episode_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_id);
  // @@protoc_insertion_point(field_set_allocated:RsvpResponse.Rsvp.episode_id)
}

// repeated string labels = 2;
int RsvpResponse_Rsvp::labels_size() const {
  return labels_.size();
}
void RsvpResponse_Rsvp::clear_labels() {
  labels_.Clear();
}
const ::std::string& RsvpResponse_Rsvp::labels(int index) const {
  // @@protoc_insertion_point(field_get:RsvpResponse.Rsvp.labels)
  return labels_.Get(index);
}
::std::string* RsvpResponse_Rsvp::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:RsvpResponse.Rsvp.labels)
  return labels_.Mutable(index);
}
void RsvpResponse_Rsvp::set_labels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RsvpResponse.Rsvp.labels)
  labels_.Mutable(index)->assign(value);
}
void RsvpResponse_Rsvp::set_labels(int index, const char* value) {
  labels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:RsvpResponse.Rsvp.labels)
}
void RsvpResponse_Rsvp::set_labels(int index, const char* value, size_t size) {
  labels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RsvpResponse.Rsvp.labels)
}
::std::string* RsvpResponse_Rsvp::add_labels() {
  // @@protoc_insertion_point(field_add_mutable:RsvpResponse.Rsvp.labels)
  return labels_.Add();
}
void RsvpResponse_Rsvp::add_labels(const ::std::string& value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:RsvpResponse.Rsvp.labels)
}
void RsvpResponse_Rsvp::add_labels(const char* value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:RsvpResponse.Rsvp.labels)
}
void RsvpResponse_Rsvp::add_labels(const char* value, size_t size) {
  labels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:RsvpResponse.Rsvp.labels)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RsvpResponse_Rsvp::labels() const {
  // @@protoc_insertion_point(field_list:RsvpResponse.Rsvp.labels)
  return labels_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RsvpResponse_Rsvp::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:RsvpResponse.Rsvp.labels)
  return &labels_;
}

inline const RsvpResponse_Rsvp* RsvpResponse_Rsvp::internal_default_instance() {
  return &RsvpResponse_Rsvp_default_instance_.get();
}
// -------------------------------------------------------------------

// RsvpResponse

// optional .Headers headers = 1;
bool RsvpResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RsvpResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void RsvpResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void RsvpResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& RsvpResponse::headers() const {
  // @@protoc_insertion_point(field_get:RsvpResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* RsvpResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:RsvpResponse.headers)
  return headers_;
}
::Headers* RsvpResponse::release_headers() {
  // @@protoc_insertion_point(field_release:RsvpResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void RsvpResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:RsvpResponse.headers)
}

// repeated .RsvpResponse.Rsvp rsvps = 2;
int RsvpResponse::rsvps_size() const {
  return rsvps_.size();
}
void RsvpResponse::clear_rsvps() {
  rsvps_.Clear();
}
const ::RsvpResponse_Rsvp& RsvpResponse::rsvps(int index) const {
  // @@protoc_insertion_point(field_get:RsvpResponse.rsvps)
  return rsvps_.Get(index);
}
::RsvpResponse_Rsvp* RsvpResponse::mutable_rsvps(int index) {
  // @@protoc_insertion_point(field_mutable:RsvpResponse.rsvps)
  return rsvps_.Mutable(index);
}
::RsvpResponse_Rsvp* RsvpResponse::add_rsvps() {
  // @@protoc_insertion_point(field_add:RsvpResponse.rsvps)
  return rsvps_.Add();
}
::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >*
RsvpResponse::mutable_rsvps() {
  // @@protoc_insertion_point(field_mutable_list:RsvpResponse.rsvps)
  return &rsvps_;
}
const ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >&
RsvpResponse::rsvps() const {
  // @@protoc_insertion_point(field_list:RsvpResponse.rsvps)
  return rsvps_;
}

inline const RsvpResponse* RsvpResponse::internal_default_instance() {
  return &RsvpResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadContactsResponse::kHeadersFieldNumber;
const int UploadContactsResponse::kContactIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadContactsResponse::UploadContactsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:UploadContactsResponse)
}

void UploadContactsResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

UploadContactsResponse::UploadContactsResponse(const UploadContactsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UploadContactsResponse)
}

void UploadContactsResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

UploadContactsResponse::~UploadContactsResponse() {
  // @@protoc_insertion_point(destructor:UploadContactsResponse)
  SharedDtor();
}

void UploadContactsResponse::SharedDtor() {
  if (this != &UploadContactsResponse_default_instance_.get()) {
    delete headers_;
  }
}

void UploadContactsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadContactsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UploadContactsResponse_descriptor_;
}

const UploadContactsResponse& UploadContactsResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UploadContactsResponse> UploadContactsResponse_default_instance_;

UploadContactsResponse* UploadContactsResponse::New(::google::protobuf::Arena* arena) const {
  UploadContactsResponse* n = new UploadContactsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadContactsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UploadContactsResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  contact_ids_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UploadContactsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UploadContactsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contact_ids;
        break;
      }

      // repeated string contact_ids = 2;
      case 2: {
        if (tag == 18) {
         parse_contact_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contact_ids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contact_ids(this->contact_ids_size() - 1).data(),
            this->contact_ids(this->contact_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UploadContactsResponse.contact_ids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contact_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UploadContactsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UploadContactsResponse)
  return false;
#undef DO_
}

void UploadContactsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UploadContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated string contact_ids = 2;
  for (int i = 0; i < this->contact_ids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contact_ids(i).data(), this->contact_ids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UploadContactsResponse.contact_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->contact_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UploadContactsResponse)
}

::google::protobuf::uint8* UploadContactsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UploadContactsResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated string contact_ids = 2;
  for (int i = 0; i < this->contact_ids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contact_ids(i).data(), this->contact_ids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UploadContactsResponse.contact_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->contact_ids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UploadContactsResponse)
  return target;
}

size_t UploadContactsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UploadContactsResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated string contact_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->contact_ids_size());
  for (int i = 0; i < this->contact_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contact_ids(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadContactsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UploadContactsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UploadContactsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadContactsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UploadContactsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UploadContactsResponse)
    UnsafeMergeFrom(*source);
  }
}

void UploadContactsResponse::MergeFrom(const UploadContactsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UploadContactsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UploadContactsResponse::UnsafeMergeFrom(const UploadContactsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  contact_ids_.UnsafeMergeFrom(from.contact_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void UploadContactsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UploadContactsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadContactsResponse::CopyFrom(const UploadContactsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UploadContactsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UploadContactsResponse::IsInitialized() const {

  return true;
}

void UploadContactsResponse::Swap(UploadContactsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadContactsResponse::InternalSwap(UploadContactsResponse* other) {
  std::swap(headers_, other->headers_);
  contact_ids_.UnsafeArenaSwap(&other->contact_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadContactsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UploadContactsResponse_descriptor_;
  metadata.reflection = UploadContactsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadContactsResponse

// optional .Headers headers = 1;
bool UploadContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UploadContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void UploadContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void UploadContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& UploadContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:UploadContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* UploadContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:UploadContactsResponse.headers)
  return headers_;
}
::Headers* UploadContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:UploadContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void UploadContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:UploadContactsResponse.headers)
}

// repeated string contact_ids = 2;
int UploadContactsResponse::contact_ids_size() const {
  return contact_ids_.size();
}
void UploadContactsResponse::clear_contact_ids() {
  contact_ids_.Clear();
}
const ::std::string& UploadContactsResponse::contact_ids(int index) const {
  // @@protoc_insertion_point(field_get:UploadContactsResponse.contact_ids)
  return contact_ids_.Get(index);
}
::std::string* UploadContactsResponse::mutable_contact_ids(int index) {
  // @@protoc_insertion_point(field_mutable:UploadContactsResponse.contact_ids)
  return contact_ids_.Mutable(index);
}
void UploadContactsResponse::set_contact_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UploadContactsResponse.contact_ids)
  contact_ids_.Mutable(index)->assign(value);
}
void UploadContactsResponse::set_contact_ids(int index, const char* value) {
  contact_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UploadContactsResponse.contact_ids)
}
void UploadContactsResponse::set_contact_ids(int index, const char* value, size_t size) {
  contact_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UploadContactsResponse.contact_ids)
}
::std::string* UploadContactsResponse::add_contact_ids() {
  // @@protoc_insertion_point(field_add_mutable:UploadContactsResponse.contact_ids)
  return contact_ids_.Add();
}
void UploadContactsResponse::add_contact_ids(const ::std::string& value) {
  contact_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UploadContactsResponse.contact_ids)
}
void UploadContactsResponse::add_contact_ids(const char* value) {
  contact_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UploadContactsResponse.contact_ids)
}
void UploadContactsResponse::add_contact_ids(const char* value, size_t size) {
  contact_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UploadContactsResponse.contact_ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UploadContactsResponse::contact_ids() const {
  // @@protoc_insertion_point(field_list:UploadContactsResponse.contact_ids)
  return contact_ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UploadContactsResponse::mutable_contact_ids() {
  // @@protoc_insertion_point(field_mutable_list:UploadContactsResponse.contact_ids)
  return &contact_ids_;
}

inline const UploadContactsResponse* UploadContactsResponse::internal_default_instance() {
  return &UploadContactsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadEpisodeResponse::kHeadersFieldNumber;
const int UploadEpisodeResponse::kPhotosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadEpisodeResponse::UploadEpisodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:UploadEpisodeResponse)
}

void UploadEpisodeResponse::InitAsDefaultInstance() {
  headers_ = const_cast< ::Headers*>(
      ::Headers::internal_default_instance());
}

UploadEpisodeResponse::UploadEpisodeResponse(const UploadEpisodeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UploadEpisodeResponse)
}

void UploadEpisodeResponse::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
}

UploadEpisodeResponse::~UploadEpisodeResponse() {
  // @@protoc_insertion_point(destructor:UploadEpisodeResponse)
  SharedDtor();
}

void UploadEpisodeResponse::SharedDtor() {
  if (this != &UploadEpisodeResponse_default_instance_.get()) {
    delete headers_;
  }
}

void UploadEpisodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadEpisodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UploadEpisodeResponse_descriptor_;
}

const UploadEpisodeResponse& UploadEpisodeResponse::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UploadEpisodeResponse> UploadEpisodeResponse_default_instance_;

UploadEpisodeResponse* UploadEpisodeResponse::New(::google::protobuf::Arena* arena) const {
  UploadEpisodeResponse* n = new UploadEpisodeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadEpisodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UploadEpisodeResponse)
  if (has_headers()) {
    if (headers_ != NULL) headers_->::Headers::Clear();
  }
  photos_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UploadEpisodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UploadEpisodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Headers headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_photos;
        break;
      }

      // repeated .PhotoUpdate photos = 2;
      case 2: {
        if (tag == 18) {
         parse_photos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_photos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UploadEpisodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UploadEpisodeResponse)
  return false;
#undef DO_
}

void UploadEpisodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UploadEpisodeResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // repeated .PhotoUpdate photos = 2;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->photos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UploadEpisodeResponse)
}

::google::protobuf::uint8* UploadEpisodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UploadEpisodeResponse)
  // optional .Headers headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // repeated .PhotoUpdate photos = 2;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->photos(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UploadEpisodeResponse)
  return target;
}

size_t UploadEpisodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UploadEpisodeResponse)
  size_t total_size = 0;

  // optional .Headers headers = 1;
  if (has_headers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headers_);
  }

  // repeated .PhotoUpdate photos = 2;
  {
    unsigned int count = this->photos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->photos(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadEpisodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UploadEpisodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UploadEpisodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadEpisodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UploadEpisodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UploadEpisodeResponse)
    UnsafeMergeFrom(*source);
  }
}

void UploadEpisodeResponse::MergeFrom(const UploadEpisodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UploadEpisodeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UploadEpisodeResponse::UnsafeMergeFrom(const UploadEpisodeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  photos_.MergeFrom(from.photos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::Headers::MergeFrom(from.headers());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void UploadEpisodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UploadEpisodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadEpisodeResponse::CopyFrom(const UploadEpisodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UploadEpisodeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UploadEpisodeResponse::IsInitialized() const {

  return true;
}

void UploadEpisodeResponse::Swap(UploadEpisodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadEpisodeResponse::InternalSwap(UploadEpisodeResponse* other) {
  std::swap(headers_, other->headers_);
  photos_.UnsafeArenaSwap(&other->photos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadEpisodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UploadEpisodeResponse_descriptor_;
  metadata.reflection = UploadEpisodeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadEpisodeResponse

// optional .Headers headers = 1;
bool UploadEpisodeResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UploadEpisodeResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void UploadEpisodeResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void UploadEpisodeResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
const ::Headers& UploadEpisodeResponse::headers() const {
  // @@protoc_insertion_point(field_get:UploadEpisodeResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
::Headers* UploadEpisodeResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:UploadEpisodeResponse.headers)
  return headers_;
}
::Headers* UploadEpisodeResponse::release_headers() {
  // @@protoc_insertion_point(field_release:UploadEpisodeResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
void UploadEpisodeResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:UploadEpisodeResponse.headers)
}

// repeated .PhotoUpdate photos = 2;
int UploadEpisodeResponse::photos_size() const {
  return photos_.size();
}
void UploadEpisodeResponse::clear_photos() {
  photos_.Clear();
}
const ::PhotoUpdate& UploadEpisodeResponse::photos(int index) const {
  // @@protoc_insertion_point(field_get:UploadEpisodeResponse.photos)
  return photos_.Get(index);
}
::PhotoUpdate* UploadEpisodeResponse::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:UploadEpisodeResponse.photos)
  return photos_.Mutable(index);
}
::PhotoUpdate* UploadEpisodeResponse::add_photos() {
  // @@protoc_insertion_point(field_add:UploadEpisodeResponse.photos)
  return photos_.Add();
}
::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
UploadEpisodeResponse::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:UploadEpisodeResponse.photos)
  return &photos_;
}
const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
UploadEpisodeResponse::photos() const {
  // @@protoc_insertion_point(field_list:UploadEpisodeResponse.photos)
  return photos_;
}

inline const UploadEpisodeResponse* UploadEpisodeResponse::internal_default_instance() {
  return &UploadEpisodeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpHeaders::kOpIdFieldNumber;
const int OpHeaders::kOpTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpHeaders::OpHeaders()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:OpHeaders)
}

void OpHeaders::InitAsDefaultInstance() {
}

OpHeaders::OpHeaders(const OpHeaders& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OpHeaders)
}

void OpHeaders::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&op_id_, 0, reinterpret_cast<char*>(&op_timestamp_) -
    reinterpret_cast<char*>(&op_id_) + sizeof(op_timestamp_));
}

OpHeaders::~OpHeaders() {
  // @@protoc_insertion_point(destructor:OpHeaders)
  SharedDtor();
}

void OpHeaders::SharedDtor() {
}

void OpHeaders::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpHeaders::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpHeaders_descriptor_;
}

const OpHeaders& OpHeaders::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpHeaders> OpHeaders_default_instance_;

OpHeaders* OpHeaders::New(::google::protobuf::Arena* arena) const {
  OpHeaders* n = new OpHeaders;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpHeaders::Clear() {
// @@protoc_insertion_point(message_clear_start:OpHeaders)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OpHeaders, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OpHeaders*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(op_id_, op_timestamp_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpHeaders::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OpHeaders)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 op_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_op_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_op_timestamp;
        break;
      }

      // optional double op_timestamp = 2;
      case 2: {
        if (tag == 17) {
         parse_op_timestamp:
          set_has_op_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &op_timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OpHeaders)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OpHeaders)
  return false;
#undef DO_
}

void OpHeaders::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OpHeaders)
  // optional int64 op_id = 1;
  if (has_op_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->op_id(), output);
  }

  // optional double op_timestamp = 2;
  if (has_op_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->op_timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OpHeaders)
}

::google::protobuf::uint8* OpHeaders::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OpHeaders)
  // optional int64 op_id = 1;
  if (has_op_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->op_id(), target);
  }

  // optional double op_timestamp = 2;
  if (has_op_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->op_timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OpHeaders)
  return target;
}

size_t OpHeaders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OpHeaders)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 op_id = 1;
    if (has_op_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->op_id());
    }

    // optional double op_timestamp = 2;
    if (has_op_timestamp()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpHeaders::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OpHeaders)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpHeaders* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpHeaders>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OpHeaders)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OpHeaders)
    UnsafeMergeFrom(*source);
  }
}

void OpHeaders::MergeFrom(const OpHeaders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OpHeaders)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpHeaders::UnsafeMergeFrom(const OpHeaders& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op_id()) {
      set_op_id(from.op_id());
    }
    if (from.has_op_timestamp()) {
      set_op_timestamp(from.op_timestamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpHeaders::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OpHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpHeaders::CopyFrom(const OpHeaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OpHeaders)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpHeaders::IsInitialized() const {

  return true;
}

void OpHeaders::Swap(OpHeaders* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpHeaders::InternalSwap(OpHeaders* other) {
  std::swap(op_id_, other->op_id_);
  std::swap(op_timestamp_, other->op_timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpHeaders::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpHeaders_descriptor_;
  metadata.reflection = OpHeaders_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpHeaders

// optional int64 op_id = 1;
bool OpHeaders::has_op_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpHeaders::set_has_op_id() {
  _has_bits_[0] |= 0x00000001u;
}
void OpHeaders::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpHeaders::clear_op_id() {
  op_id_ = GOOGLE_LONGLONG(0);
  clear_has_op_id();
}
::google::protobuf::int64 OpHeaders::op_id() const {
  // @@protoc_insertion_point(field_get:OpHeaders.op_id)
  return op_id_;
}
void OpHeaders::set_op_id(::google::protobuf::int64 value) {
  set_has_op_id();
  op_id_ = value;
  // @@protoc_insertion_point(field_set:OpHeaders.op_id)
}

// optional double op_timestamp = 2;
bool OpHeaders::has_op_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpHeaders::set_has_op_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void OpHeaders::clear_has_op_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpHeaders::clear_op_timestamp() {
  op_timestamp_ = 0;
  clear_has_op_timestamp();
}
double OpHeaders::op_timestamp() const {
  // @@protoc_insertion_point(field_get:OpHeaders.op_timestamp)
  return op_timestamp_;
}
void OpHeaders::set_op_timestamp(double value) {
  set_has_op_timestamp();
  op_timestamp_ = value;
  // @@protoc_insertion_point(field_set:OpHeaders.op_timestamp)
}

inline const OpHeaders* OpHeaders::internal_default_instance() {
  return &OpHeaders_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerOperation_RemovePhotos::kEpisodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerOperation_RemovePhotos::ServerOperation_RemovePhotos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerOperation.RemovePhotos)
}

void ServerOperation_RemovePhotos::InitAsDefaultInstance() {
}

ServerOperation_RemovePhotos::ServerOperation_RemovePhotos(const ServerOperation_RemovePhotos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerOperation.RemovePhotos)
}

void ServerOperation_RemovePhotos::SharedCtor() {
  _cached_size_ = 0;
}

ServerOperation_RemovePhotos::~ServerOperation_RemovePhotos() {
  // @@protoc_insertion_point(destructor:ServerOperation.RemovePhotos)
  SharedDtor();
}

void ServerOperation_RemovePhotos::SharedDtor() {
}

void ServerOperation_RemovePhotos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerOperation_RemovePhotos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerOperation_RemovePhotos_descriptor_;
}

const ServerOperation_RemovePhotos& ServerOperation_RemovePhotos::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServerOperation_RemovePhotos> ServerOperation_RemovePhotos_default_instance_;

ServerOperation_RemovePhotos* ServerOperation_RemovePhotos::New(::google::protobuf::Arena* arena) const {
  ServerOperation_RemovePhotos* n = new ServerOperation_RemovePhotos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerOperation_RemovePhotos::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerOperation.RemovePhotos)
  episodes_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerOperation_RemovePhotos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerOperation.RemovePhotos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActivityMetadata.Episode episodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_episodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_episodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_episodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerOperation.RemovePhotos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerOperation.RemovePhotos)
  return false;
#undef DO_
}

void ServerOperation_RemovePhotos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerOperation.RemovePhotos)
  // repeated .ActivityMetadata.Episode episodes = 1;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->episodes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerOperation.RemovePhotos)
}

::google::protobuf::uint8* ServerOperation_RemovePhotos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerOperation.RemovePhotos)
  // repeated .ActivityMetadata.Episode episodes = 1;
  for (unsigned int i = 0, n = this->episodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->episodes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerOperation.RemovePhotos)
  return target;
}

size_t ServerOperation_RemovePhotos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerOperation.RemovePhotos)
  size_t total_size = 0;

  // repeated .ActivityMetadata.Episode episodes = 1;
  {
    unsigned int count = this->episodes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->episodes(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerOperation_RemovePhotos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerOperation.RemovePhotos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerOperation_RemovePhotos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerOperation_RemovePhotos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerOperation.RemovePhotos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerOperation.RemovePhotos)
    UnsafeMergeFrom(*source);
  }
}

void ServerOperation_RemovePhotos::MergeFrom(const ServerOperation_RemovePhotos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerOperation.RemovePhotos)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServerOperation_RemovePhotos::UnsafeMergeFrom(const ServerOperation_RemovePhotos& from) {
  GOOGLE_DCHECK(&from != this);
  episodes_.MergeFrom(from.episodes_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ServerOperation_RemovePhotos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerOperation.RemovePhotos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerOperation_RemovePhotos::CopyFrom(const ServerOperation_RemovePhotos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerOperation.RemovePhotos)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServerOperation_RemovePhotos::IsInitialized() const {

  return true;
}

void ServerOperation_RemovePhotos::Swap(ServerOperation_RemovePhotos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerOperation_RemovePhotos::InternalSwap(ServerOperation_RemovePhotos* other) {
  episodes_.UnsafeArenaSwap(&other->episodes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerOperation_RemovePhotos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerOperation_RemovePhotos_descriptor_;
  metadata.reflection = ServerOperation_RemovePhotos_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerOperation::kHeadersFieldNumber;
const int ServerOperation::kUploadActivityFieldNumber;
const int ServerOperation::kUpdatePhotoFieldNumber;
const int ServerOperation::kRemovePhotosFieldNumber;
const int ServerOperation::kUpdateViewpointFieldNumber;
const int ServerOperation::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerOperation::ServerOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Server_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerOperation)
}

void ServerOperation::InitAsDefaultInstance() {
  headers_ = const_cast< ::OpHeaders*>(
      ::OpHeaders::internal_default_instance());
  remove_photos_ = const_cast< ::ServerOperation_RemovePhotos*>(
      ::ServerOperation_RemovePhotos::internal_default_instance());
}

ServerOperation::ServerOperation(const ServerOperation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerOperation)
}

void ServerOperation::SharedCtor() {
  _cached_size_ = 0;
  headers_ = NULL;
  remove_photos_ = NULL;
  ::memset(&upload_activity_, 0, reinterpret_cast<char*>(&update_viewpoint_) -
    reinterpret_cast<char*>(&upload_activity_) + sizeof(update_viewpoint_));
}

ServerOperation::~ServerOperation() {
  // @@protoc_insertion_point(destructor:ServerOperation)
  SharedDtor();
}

void ServerOperation::SharedDtor() {
  if (this != &ServerOperation_default_instance_.get()) {
    delete headers_;
    delete remove_photos_;
  }
}

void ServerOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerOperation_descriptor_;
}

const ServerOperation& ServerOperation::default_instance() {
  protobuf_InitDefaults_Server_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServerOperation> ServerOperation_default_instance_;

ServerOperation* ServerOperation::New(::google::protobuf::Arena* arena) const {
  ServerOperation* n = new ServerOperation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerOperation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerOperation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerOperation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(upload_activity_, update_viewpoint_);
    if (has_headers()) {
      if (headers_ != NULL) headers_->::OpHeaders::Clear();
    }
    if (has_remove_photos()) {
      if (remove_photos_ != NULL) remove_photos_->::ServerOperation_RemovePhotos::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  stats_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OpHeaders headers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_upload_activity;
        break;
      }

      // optional int64 upload_activity = 2;
      case 2: {
        if (tag == 16) {
         parse_upload_activity:
          set_has_upload_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &upload_activity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_update_photo;
        break;
      }

      // optional int64 update_photo = 3;
      case 3: {
        if (tag == 24) {
         parse_update_photo:
          set_has_update_photo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_photo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_remove_photos;
        break;
      }

      // optional .ServerOperation.RemovePhotos remove_photos = 4;
      case 4: {
        if (tag == 34) {
         parse_remove_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_update_viewpoint;
        break;
      }

      // optional int64 update_viewpoint = 5;
      case 5: {
        if (tag == 40) {
         parse_update_viewpoint:
          set_has_update_viewpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_viewpoint_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_stats;
        break;
      }

      // repeated int32 stats = 6;
      case 6: {
        if (tag == 48) {
         parse_stats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_stats())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stats())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_stats;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerOperation)
  return false;
#undef DO_
}

void ServerOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerOperation)
  // optional .OpHeaders headers = 1;
  if (has_headers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headers_, output);
  }

  // optional int64 upload_activity = 2;
  if (has_upload_activity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->upload_activity(), output);
  }

  // optional int64 update_photo = 3;
  if (has_update_photo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->update_photo(), output);
  }

  // optional .ServerOperation.RemovePhotos remove_photos = 4;
  if (has_remove_photos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->remove_photos_, output);
  }

  // optional int64 update_viewpoint = 5;
  if (has_update_viewpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->update_viewpoint(), output);
  }

  // repeated int32 stats = 6;
  for (int i = 0; i < this->stats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerOperation)
}

::google::protobuf::uint8* ServerOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerOperation)
  // optional .OpHeaders headers = 1;
  if (has_headers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headers_, false, target);
  }

  // optional int64 upload_activity = 2;
  if (has_upload_activity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->upload_activity(), target);
  }

  // optional int64 update_photo = 3;
  if (has_update_photo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->update_photo(), target);
  }

  // optional .ServerOperation.RemovePhotos remove_photos = 4;
  if (has_remove_photos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->remove_photos_, false, target);
  }

  // optional int64 update_viewpoint = 5;
  if (has_update_viewpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->update_viewpoint(), target);
  }

  // repeated int32 stats = 6;
  for (int i = 0; i < this->stats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerOperation)
  return target;
}

size_t ServerOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerOperation)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional .OpHeaders headers = 1;
    if (has_headers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->headers_);
    }

    // optional int64 upload_activity = 2;
    if (has_upload_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->upload_activity());
    }

    // optional int64 update_photo = 3;
    if (has_update_photo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->update_photo());
    }

    // optional .ServerOperation.RemovePhotos remove_photos = 4;
    if (has_remove_photos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->remove_photos_);
    }

    // optional int64 update_viewpoint = 5;
    if (has_update_viewpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->update_viewpoint());
    }

  }
  // repeated int32 stats = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->stats_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stats(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->stats_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerOperation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerOperation)
    UnsafeMergeFrom(*source);
  }
}

void ServerOperation::MergeFrom(const ServerOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerOperation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServerOperation::UnsafeMergeFrom(const ServerOperation& from) {
  GOOGLE_DCHECK(&from != this);
  stats_.UnsafeMergeFrom(from.stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headers()) {
      mutable_headers()->::OpHeaders::MergeFrom(from.headers());
    }
    if (from.has_upload_activity()) {
      set_upload_activity(from.upload_activity());
    }
    if (from.has_update_photo()) {
      set_update_photo(from.update_photo());
    }
    if (from.has_remove_photos()) {
      mutable_remove_photos()->::ServerOperation_RemovePhotos::MergeFrom(from.remove_photos());
    }
    if (from.has_update_viewpoint()) {
      set_update_viewpoint(from.update_viewpoint());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ServerOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerOperation::CopyFrom(const ServerOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerOperation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServerOperation::IsInitialized() const {

  return true;
}

void ServerOperation::Swap(ServerOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerOperation::InternalSwap(ServerOperation* other) {
  std::swap(headers_, other->headers_);
  std::swap(upload_activity_, other->upload_activity_);
  std::swap(update_photo_, other->update_photo_);
  std::swap(remove_photos_, other->remove_photos_);
  std::swap(update_viewpoint_, other->update_viewpoint_);
  stats_.UnsafeArenaSwap(&other->stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerOperation_descriptor_;
  metadata.reflection = ServerOperation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerOperation_RemovePhotos

// repeated .ActivityMetadata.Episode episodes = 1;
int ServerOperation_RemovePhotos::episodes_size() const {
  return episodes_.size();
}
void ServerOperation_RemovePhotos::clear_episodes() {
  episodes_.Clear();
}
const ::ActivityMetadata_Episode& ServerOperation_RemovePhotos::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ServerOperation.RemovePhotos.episodes)
  return episodes_.Get(index);
}
::ActivityMetadata_Episode* ServerOperation_RemovePhotos::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ServerOperation.RemovePhotos.episodes)
  return episodes_.Mutable(index);
}
::ActivityMetadata_Episode* ServerOperation_RemovePhotos::add_episodes() {
  // @@protoc_insertion_point(field_add:ServerOperation.RemovePhotos.episodes)
  return episodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ServerOperation_RemovePhotos::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ServerOperation.RemovePhotos.episodes)
  return &episodes_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ServerOperation_RemovePhotos::episodes() const {
  // @@protoc_insertion_point(field_list:ServerOperation.RemovePhotos.episodes)
  return episodes_;
}

inline const ServerOperation_RemovePhotos* ServerOperation_RemovePhotos::internal_default_instance() {
  return &ServerOperation_RemovePhotos_default_instance_.get();
}
// -------------------------------------------------------------------

// ServerOperation

// optional .OpHeaders headers = 1;
bool ServerOperation::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerOperation::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerOperation::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerOperation::clear_headers() {
  if (headers_ != NULL) headers_->::OpHeaders::Clear();
  clear_has_headers();
}
const ::OpHeaders& ServerOperation::headers() const {
  // @@protoc_insertion_point(field_get:ServerOperation.headers)
  return headers_ != NULL ? *headers_
                         : *::OpHeaders::internal_default_instance();
}
::OpHeaders* ServerOperation::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::OpHeaders;
  }
  // @@protoc_insertion_point(field_mutable:ServerOperation.headers)
  return headers_;
}
::OpHeaders* ServerOperation::release_headers() {
  // @@protoc_insertion_point(field_release:ServerOperation.headers)
  clear_has_headers();
  ::OpHeaders* temp = headers_;
  headers_ = NULL;
  return temp;
}
void ServerOperation::set_allocated_headers(::OpHeaders* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerOperation.headers)
}

// optional int64 upload_activity = 2;
bool ServerOperation::has_upload_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerOperation::set_has_upload_activity() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerOperation::clear_has_upload_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerOperation::clear_upload_activity() {
  upload_activity_ = GOOGLE_LONGLONG(0);
  clear_has_upload_activity();
}
::google::protobuf::int64 ServerOperation::upload_activity() const {
  // @@protoc_insertion_point(field_get:ServerOperation.upload_activity)
  return upload_activity_;
}
void ServerOperation::set_upload_activity(::google::protobuf::int64 value) {
  set_has_upload_activity();
  upload_activity_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.upload_activity)
}

// optional int64 update_photo = 3;
bool ServerOperation::has_update_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerOperation::set_has_update_photo() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerOperation::clear_has_update_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerOperation::clear_update_photo() {
  update_photo_ = GOOGLE_LONGLONG(0);
  clear_has_update_photo();
}
::google::protobuf::int64 ServerOperation::update_photo() const {
  // @@protoc_insertion_point(field_get:ServerOperation.update_photo)
  return update_photo_;
}
void ServerOperation::set_update_photo(::google::protobuf::int64 value) {
  set_has_update_photo();
  update_photo_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.update_photo)
}

// optional .ServerOperation.RemovePhotos remove_photos = 4;
bool ServerOperation::has_remove_photos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ServerOperation::set_has_remove_photos() {
  _has_bits_[0] |= 0x00000008u;
}
void ServerOperation::clear_has_remove_photos() {
  _has_bits_[0] &= ~0x00000008u;
}
void ServerOperation::clear_remove_photos() {
  if (remove_photos_ != NULL) remove_photos_->::ServerOperation_RemovePhotos::Clear();
  clear_has_remove_photos();
}
const ::ServerOperation_RemovePhotos& ServerOperation::remove_photos() const {
  // @@protoc_insertion_point(field_get:ServerOperation.remove_photos)
  return remove_photos_ != NULL ? *remove_photos_
                         : *::ServerOperation_RemovePhotos::internal_default_instance();
}
::ServerOperation_RemovePhotos* ServerOperation::mutable_remove_photos() {
  set_has_remove_photos();
  if (remove_photos_ == NULL) {
    remove_photos_ = new ::ServerOperation_RemovePhotos;
  }
  // @@protoc_insertion_point(field_mutable:ServerOperation.remove_photos)
  return remove_photos_;
}
::ServerOperation_RemovePhotos* ServerOperation::release_remove_photos() {
  // @@protoc_insertion_point(field_release:ServerOperation.remove_photos)
  clear_has_remove_photos();
  ::ServerOperation_RemovePhotos* temp = remove_photos_;
  remove_photos_ = NULL;
  return temp;
}
void ServerOperation::set_allocated_remove_photos(::ServerOperation_RemovePhotos* remove_photos) {
  delete remove_photos_;
  remove_photos_ = remove_photos;
  if (remove_photos) {
    set_has_remove_photos();
  } else {
    clear_has_remove_photos();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerOperation.remove_photos)
}

// optional int64 update_viewpoint = 5;
bool ServerOperation::has_update_viewpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ServerOperation::set_has_update_viewpoint() {
  _has_bits_[0] |= 0x00000010u;
}
void ServerOperation::clear_has_update_viewpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
void ServerOperation::clear_update_viewpoint() {
  update_viewpoint_ = GOOGLE_LONGLONG(0);
  clear_has_update_viewpoint();
}
::google::protobuf::int64 ServerOperation::update_viewpoint() const {
  // @@protoc_insertion_point(field_get:ServerOperation.update_viewpoint)
  return update_viewpoint_;
}
void ServerOperation::set_update_viewpoint(::google::protobuf::int64 value) {
  set_has_update_viewpoint();
  update_viewpoint_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.update_viewpoint)
}

// repeated int32 stats = 6;
int ServerOperation::stats_size() const {
  return stats_.size();
}
void ServerOperation::clear_stats() {
  stats_.Clear();
}
::google::protobuf::int32 ServerOperation::stats(int index) const {
  // @@protoc_insertion_point(field_get:ServerOperation.stats)
  return stats_.Get(index);
}
void ServerOperation::set_stats(int index, ::google::protobuf::int32 value) {
  stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerOperation.stats)
}
void ServerOperation::add_stats(::google::protobuf::int32 value) {
  stats_.Add(value);
  // @@protoc_insertion_point(field_add:ServerOperation.stats)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServerOperation::stats() const {
  // @@protoc_insertion_point(field_list:ServerOperation.stats)
  return stats_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServerOperation::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:ServerOperation.stats)
  return &stats_;
}

inline const ServerOperation* ServerOperation::internal_default_instance() {
  return &ServerOperation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
