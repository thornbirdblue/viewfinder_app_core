// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DayMetadata.proto

#ifndef PROTOBUF_DayMetadata_2eproto__INCLUDED
#define PROTOBUF_DayMetadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ContentIds.pb.h"
#include "Location.pb.h"
#include "Placemark.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_DayMetadata_2eproto();
void protobuf_InitDefaults_DayMetadata_2eproto();
void protobuf_AssignDesc_DayMetadata_2eproto();
void protobuf_ShutdownFile_DayMetadata_2eproto();

class CachedEpisode;
class DayContributor;
class DayMetadata;
class DayPhoto;
class EventMetadata;
class FilteredEpisode;
class SummaryMetadata;
class SummaryRow;
class TrapdoorMetadata;
class ViewpointSummaryMetadata;
class ViewpointSummaryMetadata_ActivityRow;
class ViewpointSummaryMetadata_ActivityRow_Photo;
class ViewpointSummaryMetadata_Contributor;

enum DayContributor_ContributorType {
  DayContributor_ContributorType_UNVIEWED_CONTENT = 1,
  DayContributor_ContributorType_VIEWED_CONTENT = 2,
  DayContributor_ContributorType_NO_CONTENT = 4
};
bool DayContributor_ContributorType_IsValid(int value);
const DayContributor_ContributorType DayContributor_ContributorType_ContributorType_MIN = DayContributor_ContributorType_UNVIEWED_CONTENT;
const DayContributor_ContributorType DayContributor_ContributorType_ContributorType_MAX = DayContributor_ContributorType_NO_CONTENT;
const int DayContributor_ContributorType_ContributorType_ARRAYSIZE = DayContributor_ContributorType_ContributorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DayContributor_ContributorType_descriptor();
inline const ::std::string& DayContributor_ContributorType_Name(DayContributor_ContributorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DayContributor_ContributorType_descriptor(), value);
}
inline bool DayContributor_ContributorType_Parse(
    const ::std::string& name, DayContributor_ContributorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DayContributor_ContributorType>(
    DayContributor_ContributorType_descriptor(), name, value);
}
enum TrapdoorMetadata_Type {
  TrapdoorMetadata_Type_INBOX = 1,
  TrapdoorMetadata_Type_EVENT = 2
};
bool TrapdoorMetadata_Type_IsValid(int value);
const TrapdoorMetadata_Type TrapdoorMetadata_Type_Type_MIN = TrapdoorMetadata_Type_INBOX;
const TrapdoorMetadata_Type TrapdoorMetadata_Type_Type_MAX = TrapdoorMetadata_Type_EVENT;
const int TrapdoorMetadata_Type_Type_ARRAYSIZE = TrapdoorMetadata_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrapdoorMetadata_Type_descriptor();
inline const ::std::string& TrapdoorMetadata_Type_Name(TrapdoorMetadata_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrapdoorMetadata_Type_descriptor(), value);
}
inline bool TrapdoorMetadata_Type_Parse(
    const ::std::string& name, TrapdoorMetadata_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrapdoorMetadata_Type>(
    TrapdoorMetadata_Type_descriptor(), name, value);
}
enum SummaryRow_RowType {
  SummaryRow_RowType_EVENT = 1,
  SummaryRow_RowType_FULL_EVENT = 2,
  SummaryRow_RowType_EVENT_TRAPDOOR = 4,
  SummaryRow_RowType_TRAPDOOR = 5
};
bool SummaryRow_RowType_IsValid(int value);
const SummaryRow_RowType SummaryRow_RowType_RowType_MIN = SummaryRow_RowType_EVENT;
const SummaryRow_RowType SummaryRow_RowType_RowType_MAX = SummaryRow_RowType_TRAPDOOR;
const int SummaryRow_RowType_RowType_ARRAYSIZE = SummaryRow_RowType_RowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SummaryRow_RowType_descriptor();
inline const ::std::string& SummaryRow_RowType_Name(SummaryRow_RowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SummaryRow_RowType_descriptor(), value);
}
inline bool SummaryRow_RowType_Parse(
    const ::std::string& name, SummaryRow_RowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SummaryRow_RowType>(
    SummaryRow_RowType_descriptor(), name, value);
}
enum ViewpointSummaryMetadata_ActivityRowType {
  ViewpointSummaryMetadata_ActivityRowType_HEADER = 1,
  ViewpointSummaryMetadata_ActivityRowType_ACTIVITY = 2,
  ViewpointSummaryMetadata_ActivityRowType_REPLY_ACTIVITY = 3,
  ViewpointSummaryMetadata_ActivityRowType_PHOTOS = 4,
  ViewpointSummaryMetadata_ActivityRowType_TITLE = 5,
  ViewpointSummaryMetadata_ActivityRowType_UPDATE = 6,
  ViewpointSummaryMetadata_ActivityRowType_FOOTER = 7
};
bool ViewpointSummaryMetadata_ActivityRowType_IsValid(int value);
const ViewpointSummaryMetadata_ActivityRowType ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_MIN = ViewpointSummaryMetadata_ActivityRowType_HEADER;
const ViewpointSummaryMetadata_ActivityRowType ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_MAX = ViewpointSummaryMetadata_ActivityRowType_FOOTER;
const int ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_ARRAYSIZE = ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ViewpointSummaryMetadata_ActivityRowType_descriptor();
inline const ::std::string& ViewpointSummaryMetadata_ActivityRowType_Name(ViewpointSummaryMetadata_ActivityRowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ViewpointSummaryMetadata_ActivityRowType_descriptor(), value);
}
inline bool ViewpointSummaryMetadata_ActivityRowType_Parse(
    const ::std::string& name, ViewpointSummaryMetadata_ActivityRowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ViewpointSummaryMetadata_ActivityRowType>(
    ViewpointSummaryMetadata_ActivityRowType_descriptor(), name, value);
}
// ===================================================================

class DayContributor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DayContributor) */ {
 public:
  DayContributor();
  virtual ~DayContributor();

  DayContributor(const DayContributor& from);

  inline DayContributor& operator=(const DayContributor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayContributor& default_instance();

  static const DayContributor* internal_default_instance();

  void Swap(DayContributor* other);

  // implements Message ----------------------------------------------

  inline DayContributor* New() const { return New(NULL); }

  DayContributor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayContributor& from);
  void MergeFrom(const DayContributor& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DayContributor* other);
  void UnsafeMergeFrom(const DayContributor& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DayContributor_ContributorType ContributorType;
  static const ContributorType UNVIEWED_CONTENT =
    DayContributor_ContributorType_UNVIEWED_CONTENT;
  static const ContributorType VIEWED_CONTENT =
    DayContributor_ContributorType_VIEWED_CONTENT;
  static const ContributorType NO_CONTENT =
    DayContributor_ContributorType_NO_CONTENT;
  static inline bool ContributorType_IsValid(int value) {
    return DayContributor_ContributorType_IsValid(value);
  }
  static const ContributorType ContributorType_MIN =
    DayContributor_ContributorType_ContributorType_MIN;
  static const ContributorType ContributorType_MAX =
    DayContributor_ContributorType_ContributorType_MAX;
  static const int ContributorType_ARRAYSIZE =
    DayContributor_ContributorType_ContributorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ContributorType_descriptor() {
    return DayContributor_ContributorType_descriptor();
  }
  static inline const ::std::string& ContributorType_Name(ContributorType value) {
    return DayContributor_ContributorType_Name(value);
  }
  static inline bool ContributorType_Parse(const ::std::string& name,
      ContributorType* value) {
    return DayContributor_ContributorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // optional .DayContributor.ContributorType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::DayContributor_ContributorType type() const;
  void set_type(::DayContributor_ContributorType value);

  // optional string identity = 3;
  bool has_identity() const;
  void clear_identity();
  static const int kIdentityFieldNumber = 3;
  const ::std::string& identity() const;
  void set_identity(const ::std::string& value);
  void set_identity(const char* value);
  void set_identity(const char* value, size_t size);
  ::std::string* mutable_identity();
  ::std::string* release_identity();
  void set_allocated_identity(::std::string* identity);

  // @@protoc_insertion_point(class_scope:DayContributor)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_identity();
  inline void clear_has_identity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr identity_;
  ::google::protobuf::int64 user_id_;
  int type_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DayContributor> DayContributor_default_instance_;

// -------------------------------------------------------------------

class DayPhoto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DayPhoto) */ {
 public:
  DayPhoto();
  virtual ~DayPhoto();

  DayPhoto(const DayPhoto& from);

  inline DayPhoto& operator=(const DayPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayPhoto& default_instance();

  static const DayPhoto* internal_default_instance();

  void Swap(DayPhoto* other);

  // implements Message ----------------------------------------------

  inline DayPhoto* New() const { return New(NULL); }

  DayPhoto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayPhoto& from);
  void MergeFrom(const DayPhoto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DayPhoto* other);
  void UnsafeMergeFrom(const DayPhoto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 photo_id = 1;
  bool has_photo_id() const;
  void clear_photo_id();
  static const int kPhotoIdFieldNumber = 1;
  ::google::protobuf::int64 photo_id() const;
  void set_photo_id(::google::protobuf::int64 value);

  // optional int64 episode_id = 2;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 2;
  ::google::protobuf::int64 episode_id() const;
  void set_episode_id(::google::protobuf::int64 value);

  // optional double aspect_ratio = 3;
  bool has_aspect_ratio() const;
  void clear_aspect_ratio();
  static const int kAspectRatioFieldNumber = 3;
  double aspect_ratio() const;
  void set_aspect_ratio(double value);

  // optional double timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:DayPhoto)
 private:
  inline void set_has_photo_id();
  inline void clear_has_photo_id();
  inline void set_has_episode_id();
  inline void clear_has_episode_id();
  inline void set_has_aspect_ratio();
  inline void clear_has_aspect_ratio();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 photo_id_;
  ::google::protobuf::int64 episode_id_;
  double aspect_ratio_;
  double timestamp_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DayPhoto> DayPhoto_default_instance_;

// -------------------------------------------------------------------

class FilteredEpisode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FilteredEpisode) */ {
 public:
  FilteredEpisode();
  virtual ~FilteredEpisode();

  FilteredEpisode(const FilteredEpisode& from);

  inline FilteredEpisode& operator=(const FilteredEpisode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilteredEpisode& default_instance();

  static const FilteredEpisode* internal_default_instance();

  void Swap(FilteredEpisode* other);

  // implements Message ----------------------------------------------

  inline FilteredEpisode* New() const { return New(NULL); }

  FilteredEpisode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilteredEpisode& from);
  void MergeFrom(const FilteredEpisode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilteredEpisode* other);
  void UnsafeMergeFrom(const FilteredEpisode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  ::google::protobuf::int64 episode_id() const;
  void set_episode_id(::google::protobuf::int64 value);

  // repeated int64 photo_ids = 2;
  int photo_ids_size() const;
  void clear_photo_ids();
  static const int kPhotoIdsFieldNumber = 2;
  ::google::protobuf::int64 photo_ids(int index) const;
  void set_photo_ids(int index, ::google::protobuf::int64 value);
  void add_photo_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      photo_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_photo_ids();

  // @@protoc_insertion_point(class_scope:FilteredEpisode)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > photo_ids_;
  ::google::protobuf::int64 episode_id_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FilteredEpisode> FilteredEpisode_default_instance_;

// -------------------------------------------------------------------

class TrapdoorMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TrapdoorMetadata) */ {
 public:
  TrapdoorMetadata();
  virtual ~TrapdoorMetadata();

  TrapdoorMetadata(const TrapdoorMetadata& from);

  inline TrapdoorMetadata& operator=(const TrapdoorMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapdoorMetadata& default_instance();

  static const TrapdoorMetadata* internal_default_instance();

  void Swap(TrapdoorMetadata* other);

  // implements Message ----------------------------------------------

  inline TrapdoorMetadata* New() const { return New(NULL); }

  TrapdoorMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapdoorMetadata& from);
  void MergeFrom(const TrapdoorMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrapdoorMetadata* other);
  void UnsafeMergeFrom(const TrapdoorMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TrapdoorMetadata_Type Type;
  static const Type INBOX =
    TrapdoorMetadata_Type_INBOX;
  static const Type EVENT =
    TrapdoorMetadata_Type_EVENT;
  static inline bool Type_IsValid(int value) {
    return TrapdoorMetadata_Type_IsValid(value);
  }
  static const Type Type_MIN =
    TrapdoorMetadata_Type_Type_MIN;
  static const Type Type_MAX =
    TrapdoorMetadata_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    TrapdoorMetadata_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return TrapdoorMetadata_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return TrapdoorMetadata_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return TrapdoorMetadata_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 viewpoint_id = 1;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 1;
  ::google::protobuf::int64 viewpoint_id() const;
  void set_viewpoint_id(::google::protobuf::int64 value);

  // optional .TrapdoorMetadata.Type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::TrapdoorMetadata_Type type() const;
  void set_type(::TrapdoorMetadata_Type value);

  // optional .DayPhoto cover_photo = 3;
  bool has_cover_photo() const;
  void clear_cover_photo();
  static const int kCoverPhotoFieldNumber = 3;
  const ::DayPhoto& cover_photo() const;
  ::DayPhoto* mutable_cover_photo();
  ::DayPhoto* release_cover_photo();
  void set_allocated_cover_photo(::DayPhoto* cover_photo);

  // optional double earliest_timestamp = 4;
  bool has_earliest_timestamp() const;
  void clear_earliest_timestamp();
  static const int kEarliestTimestampFieldNumber = 4;
  double earliest_timestamp() const;
  void set_earliest_timestamp(double value);

  // optional double latest_timestamp = 5;
  bool has_latest_timestamp() const;
  void clear_latest_timestamp();
  static const int kLatestTimestampFieldNumber = 5;
  double latest_timestamp() const;
  void set_latest_timestamp(double value);

  // optional int32 event_index = 6;
  bool has_event_index() const;
  void clear_event_index();
  static const int kEventIndexFieldNumber = 6;
  ::google::protobuf::int32 event_index() const;
  void set_event_index(::google::protobuf::int32 value);

  // repeated .DayContributor contributors = 7;
  int contributors_size() const;
  void clear_contributors();
  static const int kContributorsFieldNumber = 7;
  const ::DayContributor& contributors(int index) const;
  ::DayContributor* mutable_contributors(int index);
  ::DayContributor* add_contributors();
  ::google::protobuf::RepeatedPtrField< ::DayContributor >*
      mutable_contributors();
  const ::google::protobuf::RepeatedPtrField< ::DayContributor >&
      contributors() const;

  // repeated .DayPhoto photos = 8;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 8;
  const ::DayPhoto& photos(int index) const;
  ::DayPhoto* mutable_photos(int index);
  ::DayPhoto* add_photos();
  ::google::protobuf::RepeatedPtrField< ::DayPhoto >*
      mutable_photos();
  const ::google::protobuf::RepeatedPtrField< ::DayPhoto >&
      photos() const;

  // optional bool sub_sampled = 9;
  bool has_sub_sampled() const;
  void clear_sub_sampled();
  static const int kSubSampledFieldNumber = 9;
  bool sub_sampled() const;
  void set_sub_sampled(bool value);

  // optional int32 photo_count = 10;
  bool has_photo_count() const;
  void clear_photo_count();
  static const int kPhotoCountFieldNumber = 10;
  ::google::protobuf::int32 photo_count() const;
  void set_photo_count(::google::protobuf::int32 value);

  // optional int32 comment_count = 11;
  bool has_comment_count() const;
  void clear_comment_count();
  static const int kCommentCountFieldNumber = 11;
  ::google::protobuf::int32 comment_count() const;
  void set_comment_count(::google::protobuf::int32 value);

  // optional int32 new_photo_count = 12;
  bool has_new_photo_count() const;
  void clear_new_photo_count();
  static const int kNewPhotoCountFieldNumber = 12;
  ::google::protobuf::int32 new_photo_count() const;
  void set_new_photo_count(::google::protobuf::int32 value);

  // optional int32 new_comment_count = 13;
  bool has_new_comment_count() const;
  void clear_new_comment_count();
  static const int kNewCommentCountFieldNumber = 13;
  ::google::protobuf::int32 new_comment_count() const;
  void set_new_comment_count(::google::protobuf::int32 value);

  // optional bool unviewed_content = 14;
  bool has_unviewed_content() const;
  void clear_unviewed_content();
  static const int kUnviewedContentFieldNumber = 14;
  bool unviewed_content() const;
  void set_unviewed_content(bool value);

  // optional bool pending_content = 15;
  bool has_pending_content() const;
  void clear_pending_content();
  static const int kPendingContentFieldNumber = 15;
  bool pending_content() const;
  void set_pending_content(bool value);

  // optional bool muted = 16;
  bool has_muted() const;
  void clear_muted();
  static const int kMutedFieldNumber = 16;
  bool muted() const;
  void set_muted(bool value);

  // optional bool autosave = 17;
  bool has_autosave() const;
  void clear_autosave();
  static const int kAutosaveFieldNumber = 17;
  bool autosave() const;
  void set_autosave(bool value);

  // @@protoc_insertion_point(class_scope:TrapdoorMetadata)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cover_photo();
  inline void clear_has_cover_photo();
  inline void set_has_earliest_timestamp();
  inline void clear_has_earliest_timestamp();
  inline void set_has_latest_timestamp();
  inline void clear_has_latest_timestamp();
  inline void set_has_event_index();
  inline void clear_has_event_index();
  inline void set_has_sub_sampled();
  inline void clear_has_sub_sampled();
  inline void set_has_photo_count();
  inline void clear_has_photo_count();
  inline void set_has_comment_count();
  inline void clear_has_comment_count();
  inline void set_has_new_photo_count();
  inline void clear_has_new_photo_count();
  inline void set_has_new_comment_count();
  inline void clear_has_new_comment_count();
  inline void set_has_unviewed_content();
  inline void clear_has_unviewed_content();
  inline void set_has_pending_content();
  inline void clear_has_pending_content();
  inline void set_has_muted();
  inline void clear_has_muted();
  inline void set_has_autosave();
  inline void clear_has_autosave();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DayContributor > contributors_;
  ::google::protobuf::RepeatedPtrField< ::DayPhoto > photos_;
  ::DayPhoto* cover_photo_;
  ::google::protobuf::int64 viewpoint_id_;
  double earliest_timestamp_;
  double latest_timestamp_;
  ::google::protobuf::int32 event_index_;
  ::google::protobuf::int32 photo_count_;
  ::google::protobuf::int32 comment_count_;
  ::google::protobuf::int32 new_photo_count_;
  ::google::protobuf::int32 new_comment_count_;
  bool sub_sampled_;
  bool unviewed_content_;
  bool pending_content_;
  bool muted_;
  bool autosave_;
  int type_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrapdoorMetadata> TrapdoorMetadata_default_instance_;

// -------------------------------------------------------------------

class EventMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EventMetadata) */ {
 public:
  EventMetadata();
  virtual ~EventMetadata();

  EventMetadata(const EventMetadata& from);

  inline EventMetadata& operator=(const EventMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventMetadata& default_instance();

  static const EventMetadata* internal_default_instance();

  void Swap(EventMetadata* other);

  // implements Message ----------------------------------------------

  inline EventMetadata* New() const { return New(NULL); }

  EventMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventMetadata& from);
  void MergeFrom(const EventMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EventMetadata* other);
  void UnsafeMergeFrom(const EventMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double earliest_timestamp = 1;
  bool has_earliest_timestamp() const;
  void clear_earliest_timestamp();
  static const int kEarliestTimestampFieldNumber = 1;
  double earliest_timestamp() const;
  void set_earliest_timestamp(double value);

  // optional double latest_timestamp = 2;
  bool has_latest_timestamp() const;
  void clear_latest_timestamp();
  static const int kLatestTimestampFieldNumber = 2;
  double latest_timestamp() const;
  void set_latest_timestamp(double value);

  // optional int32 photo_count = 3;
  bool has_photo_count() const;
  void clear_photo_count();
  static const int kPhotoCountFieldNumber = 3;
  ::google::protobuf::int32 photo_count() const;
  void set_photo_count(::google::protobuf::int32 value);

  // repeated .FilteredEpisode episodes = 4;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 4;
  const ::FilteredEpisode& episodes(int index) const;
  ::FilteredEpisode* mutable_episodes(int index);
  ::FilteredEpisode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::FilteredEpisode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::FilteredEpisode >&
      episodes() const;

  // repeated .DayContributor contributors = 5;
  int contributors_size() const;
  void clear_contributors();
  static const int kContributorsFieldNumber = 5;
  const ::DayContributor& contributors(int index) const;
  ::DayContributor* mutable_contributors(int index);
  ::DayContributor* add_contributors();
  ::google::protobuf::RepeatedPtrField< ::DayContributor >*
      mutable_contributors();
  const ::google::protobuf::RepeatedPtrField< ::DayContributor >&
      contributors() const;

  // optional .Location location = 6;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 6;
  const ::Location& location() const;
  ::Location* mutable_location();
  ::Location* release_location();
  void set_allocated_location(::Location* location);

  // optional .Placemark placemark = 7;
  bool has_placemark() const;
  void clear_placemark();
  static const int kPlacemarkFieldNumber = 7;
  const ::Placemark& placemark() const;
  ::Placemark* mutable_placemark();
  ::Placemark* release_placemark();
  void set_allocated_placemark(::Placemark* placemark);

  // optional double distance = 8;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 8;
  double distance() const;
  void set_distance(double value);

  // repeated .TrapdoorMetadata trapdoors = 9;
  int trapdoors_size() const;
  void clear_trapdoors();
  static const int kTrapdoorsFieldNumber = 9;
  const ::TrapdoorMetadata& trapdoors(int index) const;
  ::TrapdoorMetadata* mutable_trapdoors(int index);
  ::TrapdoorMetadata* add_trapdoors();
  ::google::protobuf::RepeatedPtrField< ::TrapdoorMetadata >*
      mutable_trapdoors();
  const ::google::protobuf::RepeatedPtrField< ::TrapdoorMetadata >&
      trapdoors() const;

  // optional string title = 10;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 10;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string short_title = 11;
  bool has_short_title() const;
  void clear_short_title();
  static const int kShortTitleFieldNumber = 11;
  const ::std::string& short_title() const;
  void set_short_title(const ::std::string& value);
  void set_short_title(const char* value);
  void set_short_title(const char* value, size_t size);
  ::std::string* mutable_short_title();
  ::std::string* release_short_title();
  void set_allocated_short_title(::std::string* short_title);

  // @@protoc_insertion_point(class_scope:EventMetadata)
 private:
  inline void set_has_earliest_timestamp();
  inline void clear_has_earliest_timestamp();
  inline void set_has_latest_timestamp();
  inline void clear_has_latest_timestamp();
  inline void set_has_photo_count();
  inline void clear_has_photo_count();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_placemark();
  inline void clear_has_placemark();
  inline void set_has_distance();
  inline void clear_has_distance();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_short_title();
  inline void clear_has_short_title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FilteredEpisode > episodes_;
  ::google::protobuf::RepeatedPtrField< ::DayContributor > contributors_;
  ::google::protobuf::RepeatedPtrField< ::TrapdoorMetadata > trapdoors_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr short_title_;
  ::Location* location_;
  ::Placemark* placemark_;
  double earliest_timestamp_;
  double latest_timestamp_;
  double distance_;
  ::google::protobuf::int32 photo_count_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EventMetadata> EventMetadata_default_instance_;

// -------------------------------------------------------------------

class CachedEpisode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CachedEpisode) */ {
 public:
  CachedEpisode();
  virtual ~CachedEpisode();

  CachedEpisode(const CachedEpisode& from);

  inline CachedEpisode& operator=(const CachedEpisode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CachedEpisode& default_instance();

  static const CachedEpisode* internal_default_instance();

  void Swap(CachedEpisode* other);

  // implements Message ----------------------------------------------

  inline CachedEpisode* New() const { return New(NULL); }

  CachedEpisode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CachedEpisode& from);
  void MergeFrom(const CachedEpisode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CachedEpisode* other);
  void UnsafeMergeFrom(const CachedEpisode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EpisodeId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::EpisodeId& id() const;
  ::EpisodeId* mutable_id();
  ::EpisodeId* release_id();
  void set_allocated_id(::EpisodeId* id);

  // optional .EpisodeId parent_id = 2;
  bool has_parent_id() const;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  const ::EpisodeId& parent_id() const;
  ::EpisodeId* mutable_parent_id();
  ::EpisodeId* release_parent_id();
  void set_allocated_parent_id(::EpisodeId* parent_id);

  // optional .ViewpointId viewpoint_id = 3;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 3;
  const ::ViewpointId& viewpoint_id() const;
  ::ViewpointId* mutable_viewpoint_id();
  ::ViewpointId* release_viewpoint_id();
  void set_allocated_viewpoint_id(::ViewpointId* viewpoint_id);

  // optional int64 user_id = 4;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // optional double timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  double timestamp() const;
  void set_timestamp(double value);

  // optional .Location location = 6;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 6;
  const ::Location& location() const;
  ::Location* mutable_location();
  ::Location* release_location();
  void set_allocated_location(::Location* location);

  // optional .Placemark placemark = 7;
  bool has_placemark() const;
  void clear_placemark();
  static const int kPlacemarkFieldNumber = 7;
  const ::Placemark& placemark() const;
  ::Placemark* mutable_placemark();
  ::Placemark* release_placemark();
  void set_allocated_placemark(::Placemark* placemark);

  // optional double earliest_photo_timestamp = 8;
  bool has_earliest_photo_timestamp() const;
  void clear_earliest_photo_timestamp();
  static const int kEarliestPhotoTimestampFieldNumber = 8;
  double earliest_photo_timestamp() const;
  void set_earliest_photo_timestamp(double value);

  // optional double latest_photo_timestamp = 9;
  bool has_latest_photo_timestamp() const;
  void clear_latest_photo_timestamp();
  static const int kLatestPhotoTimestampFieldNumber = 9;
  double latest_photo_timestamp() const;
  void set_latest_photo_timestamp(double value);

  // repeated .DayPhoto photos = 10;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 10;
  const ::DayPhoto& photos(int index) const;
  ::DayPhoto* mutable_photos(int index);
  ::DayPhoto* add_photos();
  ::google::protobuf::RepeatedPtrField< ::DayPhoto >*
      mutable_photos();
  const ::google::protobuf::RepeatedPtrField< ::DayPhoto >&
      photos() const;

  // optional bool in_library = 11;
  bool has_in_library() const;
  void clear_in_library();
  static const int kInLibraryFieldNumber = 11;
  bool in_library() const;
  void set_in_library(bool value);

  // @@protoc_insertion_point(class_scope:CachedEpisode)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_parent_id();
  inline void clear_has_parent_id();
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_placemark();
  inline void clear_has_placemark();
  inline void set_has_earliest_photo_timestamp();
  inline void clear_has_earliest_photo_timestamp();
  inline void set_has_latest_photo_timestamp();
  inline void clear_has_latest_photo_timestamp();
  inline void set_has_in_library();
  inline void clear_has_in_library();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DayPhoto > photos_;
  ::EpisodeId* id_;
  ::EpisodeId* parent_id_;
  ::ViewpointId* viewpoint_id_;
  ::Location* location_;
  ::Placemark* placemark_;
  ::google::protobuf::int64 user_id_;
  double timestamp_;
  double earliest_photo_timestamp_;
  double latest_photo_timestamp_;
  bool in_library_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CachedEpisode> CachedEpisode_default_instance_;

// -------------------------------------------------------------------

class DayMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DayMetadata) */ {
 public:
  DayMetadata();
  virtual ~DayMetadata();

  DayMetadata(const DayMetadata& from);

  inline DayMetadata& operator=(const DayMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayMetadata& default_instance();

  static const DayMetadata* internal_default_instance();

  void Swap(DayMetadata* other);

  // implements Message ----------------------------------------------

  inline DayMetadata* New() const { return New(NULL); }

  DayMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayMetadata& from);
  void MergeFrom(const DayMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DayMetadata* other);
  void UnsafeMergeFrom(const DayMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // repeated .CachedEpisode episodes = 2;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 2;
  const ::CachedEpisode& episodes(int index) const;
  ::CachedEpisode* mutable_episodes(int index);
  ::CachedEpisode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::CachedEpisode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::CachedEpisode >&
      episodes() const;

  // @@protoc_insertion_point(class_scope:DayMetadata)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CachedEpisode > episodes_;
  double timestamp_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DayMetadata> DayMetadata_default_instance_;

// -------------------------------------------------------------------

class SummaryRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SummaryRow) */ {
 public:
  SummaryRow();
  virtual ~SummaryRow();

  SummaryRow(const SummaryRow& from);

  inline SummaryRow& operator=(const SummaryRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SummaryRow& default_instance();

  static const SummaryRow* internal_default_instance();

  void Swap(SummaryRow* other);

  // implements Message ----------------------------------------------

  inline SummaryRow* New() const { return New(NULL); }

  SummaryRow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SummaryRow& from);
  void MergeFrom(const SummaryRow& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SummaryRow* other);
  void UnsafeMergeFrom(const SummaryRow& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SummaryRow_RowType RowType;
  static const RowType EVENT =
    SummaryRow_RowType_EVENT;
  static const RowType FULL_EVENT =
    SummaryRow_RowType_FULL_EVENT;
  static const RowType EVENT_TRAPDOOR =
    SummaryRow_RowType_EVENT_TRAPDOOR;
  static const RowType TRAPDOOR =
    SummaryRow_RowType_TRAPDOOR;
  static inline bool RowType_IsValid(int value) {
    return SummaryRow_RowType_IsValid(value);
  }
  static const RowType RowType_MIN =
    SummaryRow_RowType_RowType_MIN;
  static const RowType RowType_MAX =
    SummaryRow_RowType_RowType_MAX;
  static const int RowType_ARRAYSIZE =
    SummaryRow_RowType_RowType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RowType_descriptor() {
    return SummaryRow_RowType_descriptor();
  }
  static inline const ::std::string& RowType_Name(RowType value) {
    return SummaryRow_RowType_Name(value);
  }
  static inline bool RowType_Parse(const ::std::string& name,
      RowType* value) {
    return SummaryRow_RowType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SummaryRow.RowType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::SummaryRow_RowType type() const;
  void set_type(::SummaryRow_RowType value);

  // optional double timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // optional double day_timestamp = 3;
  bool has_day_timestamp() const;
  void clear_day_timestamp();
  static const int kDayTimestampFieldNumber = 3;
  double day_timestamp() const;
  void set_day_timestamp(double value);

  // optional int64 identifier = 4;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 4;
  ::google::protobuf::int64 identifier() const;
  void set_identifier(::google::protobuf::int64 value);

  // optional float height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  float height() const;
  void set_height(float value);

  // optional bool unviewed = 6;
  bool has_unviewed() const;
  void clear_unviewed();
  static const int kUnviewedFieldNumber = 6;
  bool unviewed() const;
  void set_unviewed(bool value);

  // optional float position = 7;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 7;
  float position() const;
  void set_position(float value);

  // optional float weight = 8;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 8;
  float weight() const;
  void set_weight(float value);

  // optional int32 photo_count = 9;
  bool has_photo_count() const;
  void clear_photo_count();
  static const int kPhotoCountFieldNumber = 9;
  ::google::protobuf::int32 photo_count() const;
  void set_photo_count(::google::protobuf::int32 value);

  // optional int32 comment_count = 10;
  bool has_comment_count() const;
  void clear_comment_count();
  static const int kCommentCountFieldNumber = 10;
  ::google::protobuf::int32 comment_count() const;
  void set_comment_count(::google::protobuf::int32 value);

  // optional int32 contributor_count = 11;
  bool has_contributor_count() const;
  void clear_contributor_count();
  static const int kContributorCountFieldNumber = 11;
  ::google::protobuf::int32 contributor_count() const;
  void set_contributor_count(::google::protobuf::int32 value);

  // optional int32 share_count = 12;
  bool has_share_count() const;
  void clear_share_count();
  static const int kShareCountFieldNumber = 12;
  ::google::protobuf::int32 share_count() const;
  void set_share_count(::google::protobuf::int32 value);

  // optional double distance = 13;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 13;
  double distance() const;
  void set_distance(double value);

  // optional int64 episode_id = 14;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 14;
  ::google::protobuf::int64 episode_id() const;
  void set_episode_id(::google::protobuf::int64 value);

  // optional int32 original_row_index = 20;
  bool has_original_row_index() const;
  void clear_original_row_index();
  static const int kOriginalRowIndexFieldNumber = 20;
  ::google::protobuf::int32 original_row_index() const;
  void set_original_row_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SummaryRow)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_day_timestamp();
  inline void clear_has_day_timestamp();
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_unviewed();
  inline void clear_has_unviewed();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_photo_count();
  inline void clear_has_photo_count();
  inline void set_has_comment_count();
  inline void clear_has_comment_count();
  inline void set_has_contributor_count();
  inline void clear_has_contributor_count();
  inline void set_has_share_count();
  inline void clear_has_share_count();
  inline void set_has_distance();
  inline void clear_has_distance();
  inline void set_has_episode_id();
  inline void clear_has_episode_id();
  inline void set_has_original_row_index();
  inline void clear_has_original_row_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double timestamp_;
  double day_timestamp_;
  ::google::protobuf::int64 identifier_;
  float height_;
  bool unviewed_;
  float position_;
  float weight_;
  ::google::protobuf::int32 photo_count_;
  ::google::protobuf::int32 comment_count_;
  ::google::protobuf::int32 contributor_count_;
  ::google::protobuf::int32 share_count_;
  double distance_;
  ::google::protobuf::int64 episode_id_;
  ::google::protobuf::int32 original_row_index_;
  int type_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SummaryRow> SummaryRow_default_instance_;

// -------------------------------------------------------------------

class SummaryMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SummaryMetadata) */ {
 public:
  SummaryMetadata();
  virtual ~SummaryMetadata();

  SummaryMetadata(const SummaryMetadata& from);

  inline SummaryMetadata& operator=(const SummaryMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SummaryMetadata& default_instance();

  static const SummaryMetadata* internal_default_instance();

  void Swap(SummaryMetadata* other);

  // implements Message ----------------------------------------------

  inline SummaryMetadata* New() const { return New(NULL); }

  SummaryMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SummaryMetadata& from);
  void MergeFrom(const SummaryMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SummaryMetadata* other);
  void UnsafeMergeFrom(const SummaryMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SummaryRow rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  const ::SummaryRow& rows(int index) const;
  ::SummaryRow* mutable_rows(int index);
  ::SummaryRow* add_rows();
  ::google::protobuf::RepeatedPtrField< ::SummaryRow >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::SummaryRow >&
      rows() const;

  // optional int32 unviewed_count = 6;
  bool has_unviewed_count() const;
  void clear_unviewed_count();
  static const int kUnviewedCountFieldNumber = 6;
  ::google::protobuf::int32 unviewed_count() const;
  void set_unviewed_count(::google::protobuf::int32 value);

  // optional int32 photo_count = 8;
  bool has_photo_count() const;
  void clear_photo_count();
  static const int kPhotoCountFieldNumber = 8;
  ::google::protobuf::int32 photo_count() const;
  void set_photo_count(::google::protobuf::int32 value);

  // optional float total_height = 9;
  bool has_total_height() const;
  void clear_total_height();
  static const int kTotalHeightFieldNumber = 9;
  float total_height() const;
  void set_total_height(float value);

  // @@protoc_insertion_point(class_scope:SummaryMetadata)
 private:
  inline void set_has_unviewed_count();
  inline void clear_has_unviewed_count();
  inline void set_has_photo_count();
  inline void clear_has_photo_count();
  inline void set_has_total_height();
  inline void clear_has_total_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SummaryRow > rows_;
  ::google::protobuf::int32 unviewed_count_;
  ::google::protobuf::int32 photo_count_;
  float total_height_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SummaryMetadata> SummaryMetadata_default_instance_;

// -------------------------------------------------------------------

class ViewpointSummaryMetadata_Contributor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ViewpointSummaryMetadata.Contributor) */ {
 public:
  ViewpointSummaryMetadata_Contributor();
  virtual ~ViewpointSummaryMetadata_Contributor();

  ViewpointSummaryMetadata_Contributor(const ViewpointSummaryMetadata_Contributor& from);

  inline ViewpointSummaryMetadata_Contributor& operator=(const ViewpointSummaryMetadata_Contributor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewpointSummaryMetadata_Contributor& default_instance();

  static const ViewpointSummaryMetadata_Contributor* internal_default_instance();

  void Swap(ViewpointSummaryMetadata_Contributor* other);

  // implements Message ----------------------------------------------

  inline ViewpointSummaryMetadata_Contributor* New() const { return New(NULL); }

  ViewpointSummaryMetadata_Contributor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewpointSummaryMetadata_Contributor& from);
  void MergeFrom(const ViewpointSummaryMetadata_Contributor& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ViewpointSummaryMetadata_Contributor* other);
  void UnsafeMergeFrom(const ViewpointSummaryMetadata_Contributor& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // optional double update_seq = 2;
  bool has_update_seq() const;
  void clear_update_seq();
  static const int kUpdateSeqFieldNumber = 2;
  double update_seq() const;
  void set_update_seq(double value);

  // optional string identity = 3;
  bool has_identity() const;
  void clear_identity();
  static const int kIdentityFieldNumber = 3;
  const ::std::string& identity() const;
  void set_identity(const ::std::string& value);
  void set_identity(const char* value);
  void set_identity(const char* value, size_t size);
  ::std::string* mutable_identity();
  ::std::string* release_identity();
  void set_allocated_identity(::std::string* identity);

  // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.Contributor)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_update_seq();
  inline void clear_has_update_seq();
  inline void set_has_identity();
  inline void clear_has_identity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr identity_;
  ::google::protobuf::int64 user_id_;
  double update_seq_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ViewpointSummaryMetadata_Contributor> ViewpointSummaryMetadata_Contributor_default_instance_;

// -------------------------------------------------------------------

class ViewpointSummaryMetadata_ActivityRow_Photo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ViewpointSummaryMetadata.ActivityRow.Photo) */ {
 public:
  ViewpointSummaryMetadata_ActivityRow_Photo();
  virtual ~ViewpointSummaryMetadata_ActivityRow_Photo();

  ViewpointSummaryMetadata_ActivityRow_Photo(const ViewpointSummaryMetadata_ActivityRow_Photo& from);

  inline ViewpointSummaryMetadata_ActivityRow_Photo& operator=(const ViewpointSummaryMetadata_ActivityRow_Photo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewpointSummaryMetadata_ActivityRow_Photo& default_instance();

  static const ViewpointSummaryMetadata_ActivityRow_Photo* internal_default_instance();

  void Swap(ViewpointSummaryMetadata_ActivityRow_Photo* other);

  // implements Message ----------------------------------------------

  inline ViewpointSummaryMetadata_ActivityRow_Photo* New() const { return New(NULL); }

  ViewpointSummaryMetadata_ActivityRow_Photo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewpointSummaryMetadata_ActivityRow_Photo& from);
  void MergeFrom(const ViewpointSummaryMetadata_ActivityRow_Photo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ViewpointSummaryMetadata_ActivityRow_Photo* other);
  void UnsafeMergeFrom(const ViewpointSummaryMetadata_ActivityRow_Photo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 photo_id = 1;
  bool has_photo_id() const;
  void clear_photo_id();
  static const int kPhotoIdFieldNumber = 1;
  ::google::protobuf::int64 photo_id() const;
  void set_photo_id(::google::protobuf::int64 value);

  // optional int64 episode_id = 2;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 2;
  ::google::protobuf::int64 episode_id() const;
  void set_episode_id(::google::protobuf::int64 value);

  // optional int64 parent_episode_id = 3;
  bool has_parent_episode_id() const;
  void clear_parent_episode_id();
  static const int kParentEpisodeIdFieldNumber = 3;
  ::google::protobuf::int64 parent_episode_id() const;
  void set_parent_episode_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.ActivityRow.Photo)
 private:
  inline void set_has_photo_id();
  inline void clear_has_photo_id();
  inline void set_has_episode_id();
  inline void clear_has_episode_id();
  inline void set_has_parent_episode_id();
  inline void clear_has_parent_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 photo_id_;
  ::google::protobuf::int64 episode_id_;
  ::google::protobuf::int64 parent_episode_id_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ViewpointSummaryMetadata_ActivityRow_Photo> ViewpointSummaryMetadata_ActivityRow_Photo_default_instance_;

// -------------------------------------------------------------------

class ViewpointSummaryMetadata_ActivityRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ViewpointSummaryMetadata.ActivityRow) */ {
 public:
  ViewpointSummaryMetadata_ActivityRow();
  virtual ~ViewpointSummaryMetadata_ActivityRow();

  ViewpointSummaryMetadata_ActivityRow(const ViewpointSummaryMetadata_ActivityRow& from);

  inline ViewpointSummaryMetadata_ActivityRow& operator=(const ViewpointSummaryMetadata_ActivityRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewpointSummaryMetadata_ActivityRow& default_instance();

  static const ViewpointSummaryMetadata_ActivityRow* internal_default_instance();

  void Swap(ViewpointSummaryMetadata_ActivityRow* other);

  // implements Message ----------------------------------------------

  inline ViewpointSummaryMetadata_ActivityRow* New() const { return New(NULL); }

  ViewpointSummaryMetadata_ActivityRow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewpointSummaryMetadata_ActivityRow& from);
  void MergeFrom(const ViewpointSummaryMetadata_ActivityRow& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ViewpointSummaryMetadata_ActivityRow* other);
  void UnsafeMergeFrom(const ViewpointSummaryMetadata_ActivityRow& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ViewpointSummaryMetadata_ActivityRow_Photo Photo;

  // accessors -------------------------------------------------------

  // optional int64 activity_id = 1;
  bool has_activity_id() const;
  void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  ::google::protobuf::int64 activity_id() const;
  void set_activity_id(::google::protobuf::int64 value);

  // repeated int64 user_ids = 2;
  int user_ids_size() const;
  void clear_user_ids();
  static const int kUserIdsFieldNumber = 2;
  ::google::protobuf::int64 user_ids(int index) const;
  void set_user_ids(int index, ::google::protobuf::int64 value);
  void add_user_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      user_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_user_ids();

  // repeated string user_identities = 14;
  int user_identities_size() const;
  void clear_user_identities();
  static const int kUserIdentitiesFieldNumber = 14;
  const ::std::string& user_identities(int index) const;
  ::std::string* mutable_user_identities(int index);
  void set_user_identities(int index, const ::std::string& value);
  void set_user_identities(int index, const char* value);
  void set_user_identities(int index, const char* value, size_t size);
  ::std::string* add_user_identities();
  void add_user_identities(const ::std::string& value);
  void add_user_identities(const char* value);
  void add_user_identities(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& user_identities() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_user_identities();

  // optional double timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  double timestamp() const;
  void set_timestamp(double value);

  // optional .ViewpointSummaryMetadata.ActivityRowType type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::ViewpointSummaryMetadata_ActivityRowType type() const;
  void set_type(::ViewpointSummaryMetadata_ActivityRowType value);

  // optional float height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  float height() const;
  void set_height(float value);

  // optional float position = 6;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 6;
  float position() const;
  void set_position(float value);

  // optional int32 row_count = 7;
  bool has_row_count() const;
  void clear_row_count();
  static const int kRowCountFieldNumber = 7;
  ::google::protobuf::int32 row_count() const;
  void set_row_count(::google::protobuf::int32 value);

  // optional int64 update_seq = 8;
  bool has_update_seq() const;
  void clear_update_seq();
  static const int kUpdateSeqFieldNumber = 8;
  ::google::protobuf::int64 update_seq() const;
  void set_update_seq(::google::protobuf::int64 value);

  // optional bool pending = 9;
  bool has_pending() const;
  void clear_pending();
  static const int kPendingFieldNumber = 9;
  bool pending() const;
  void set_pending(bool value);

  // optional int32 thread_type = 10;
  bool has_thread_type() const;
  void clear_thread_type();
  static const int kThreadTypeFieldNumber = 10;
  ::google::protobuf::int32 thread_type() const;
  void set_thread_type(::google::protobuf::int32 value);

  // repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 11;
  const ::ViewpointSummaryMetadata_ActivityRow_Photo& photos(int index) const;
  ::ViewpointSummaryMetadata_ActivityRow_Photo* mutable_photos(int index);
  ::ViewpointSummaryMetadata_ActivityRow_Photo* add_photos();
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow_Photo >*
      mutable_photos();
  const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow_Photo >&
      photos() const;

  // optional bool is_comment = 12;
  bool has_is_comment() const;
  void clear_is_comment();
  static const int kIsCommentFieldNumber = 12;
  bool is_comment() const;
  void set_is_comment(bool value);

  // optional bool is_provisional_hint = 13;
  bool has_is_provisional_hint() const;
  void clear_is_provisional_hint();
  static const int kIsProvisionalHintFieldNumber = 13;
  bool is_provisional_hint() const;
  void set_is_provisional_hint(bool value);

  // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.ActivityRow)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_row_count();
  inline void clear_has_row_count();
  inline void set_has_update_seq();
  inline void clear_has_update_seq();
  inline void set_has_pending();
  inline void clear_has_pending();
  inline void set_has_thread_type();
  inline void clear_has_thread_type();
  inline void set_has_is_comment();
  inline void clear_has_is_comment();
  inline void set_has_is_provisional_hint();
  inline void clear_has_is_provisional_hint();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> user_identities_;
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow_Photo > photos_;
  ::google::protobuf::int64 activity_id_;
  double timestamp_;
  float height_;
  float position_;
  ::google::protobuf::int64 update_seq_;
  ::google::protobuf::int32 row_count_;
  ::google::protobuf::int32 thread_type_;
  bool pending_;
  bool is_comment_;
  bool is_provisional_hint_;
  int type_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ViewpointSummaryMetadata_ActivityRow> ViewpointSummaryMetadata_ActivityRow_default_instance_;

// -------------------------------------------------------------------

class ViewpointSummaryMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ViewpointSummaryMetadata) */ {
 public:
  ViewpointSummaryMetadata();
  virtual ~ViewpointSummaryMetadata();

  ViewpointSummaryMetadata(const ViewpointSummaryMetadata& from);

  inline ViewpointSummaryMetadata& operator=(const ViewpointSummaryMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewpointSummaryMetadata& default_instance();

  static const ViewpointSummaryMetadata* internal_default_instance();

  void Swap(ViewpointSummaryMetadata* other);

  // implements Message ----------------------------------------------

  inline ViewpointSummaryMetadata* New() const { return New(NULL); }

  ViewpointSummaryMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewpointSummaryMetadata& from);
  void MergeFrom(const ViewpointSummaryMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ViewpointSummaryMetadata* other);
  void UnsafeMergeFrom(const ViewpointSummaryMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ViewpointSummaryMetadata_Contributor Contributor;
  typedef ViewpointSummaryMetadata_ActivityRow ActivityRow;

  typedef ViewpointSummaryMetadata_ActivityRowType ActivityRowType;
  static const ActivityRowType HEADER =
    ViewpointSummaryMetadata_ActivityRowType_HEADER;
  static const ActivityRowType ACTIVITY =
    ViewpointSummaryMetadata_ActivityRowType_ACTIVITY;
  static const ActivityRowType REPLY_ACTIVITY =
    ViewpointSummaryMetadata_ActivityRowType_REPLY_ACTIVITY;
  static const ActivityRowType PHOTOS =
    ViewpointSummaryMetadata_ActivityRowType_PHOTOS;
  static const ActivityRowType TITLE =
    ViewpointSummaryMetadata_ActivityRowType_TITLE;
  static const ActivityRowType UPDATE =
    ViewpointSummaryMetadata_ActivityRowType_UPDATE;
  static const ActivityRowType FOOTER =
    ViewpointSummaryMetadata_ActivityRowType_FOOTER;
  static inline bool ActivityRowType_IsValid(int value) {
    return ViewpointSummaryMetadata_ActivityRowType_IsValid(value);
  }
  static const ActivityRowType ActivityRowType_MIN =
    ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_MIN;
  static const ActivityRowType ActivityRowType_MAX =
    ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_MAX;
  static const int ActivityRowType_ARRAYSIZE =
    ViewpointSummaryMetadata_ActivityRowType_ActivityRowType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActivityRowType_descriptor() {
    return ViewpointSummaryMetadata_ActivityRowType_descriptor();
  }
  static inline const ::std::string& ActivityRowType_Name(ActivityRowType value) {
    return ViewpointSummaryMetadata_ActivityRowType_Name(value);
  }
  static inline bool ActivityRowType_Parse(const ::std::string& name,
      ActivityRowType* value) {
    return ViewpointSummaryMetadata_ActivityRowType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 viewpoint_id = 1;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 1;
  ::google::protobuf::int64 viewpoint_id() const;
  void set_viewpoint_id(::google::protobuf::int64 value);

  // repeated .ViewpointSummaryMetadata.Contributor contributors = 2;
  int contributors_size() const;
  void clear_contributors();
  static const int kContributorsFieldNumber = 2;
  const ::ViewpointSummaryMetadata_Contributor& contributors(int index) const;
  ::ViewpointSummaryMetadata_Contributor* mutable_contributors(int index);
  ::ViewpointSummaryMetadata_Contributor* add_contributors();
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_Contributor >*
      mutable_contributors();
  const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_Contributor >&
      contributors() const;

  // optional .DayPhoto cover_photo = 3;
  bool has_cover_photo() const;
  void clear_cover_photo();
  static const int kCoverPhotoFieldNumber = 3;
  const ::DayPhoto& cover_photo() const;
  ::DayPhoto* mutable_cover_photo();
  ::DayPhoto* release_cover_photo();
  void set_allocated_cover_photo(::DayPhoto* cover_photo);

  // repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;
  int activities_size() const;
  void clear_activities();
  static const int kActivitiesFieldNumber = 4;
  const ::ViewpointSummaryMetadata_ActivityRow& activities(int index) const;
  ::ViewpointSummaryMetadata_ActivityRow* mutable_activities(int index);
  ::ViewpointSummaryMetadata_ActivityRow* add_activities();
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow >*
      mutable_activities();
  const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow >&
      activities() const;

  // optional double earliest_timestamp = 5;
  bool has_earliest_timestamp() const;
  void clear_earliest_timestamp();
  static const int kEarliestTimestampFieldNumber = 5;
  double earliest_timestamp() const;
  void set_earliest_timestamp(double value);

  // optional double latest_timestamp = 6;
  bool has_latest_timestamp() const;
  void clear_latest_timestamp();
  static const int kLatestTimestampFieldNumber = 6;
  double latest_timestamp() const;
  void set_latest_timestamp(double value);

  // optional int32 photo_count = 7;
  bool has_photo_count() const;
  void clear_photo_count();
  static const int kPhotoCountFieldNumber = 7;
  ::google::protobuf::int32 photo_count() const;
  void set_photo_count(::google::protobuf::int32 value);

  // optional int32 comment_count = 8;
  bool has_comment_count() const;
  void clear_comment_count();
  static const int kCommentCountFieldNumber = 8;
  ::google::protobuf::int32 comment_count() const;
  void set_comment_count(::google::protobuf::int32 value);

  // optional int32 new_photo_count = 9;
  bool has_new_photo_count() const;
  void clear_new_photo_count();
  static const int kNewPhotoCountFieldNumber = 9;
  ::google::protobuf::int32 new_photo_count() const;
  void set_new_photo_count(::google::protobuf::int32 value);

  // optional int32 new_comment_count = 10;
  bool has_new_comment_count() const;
  void clear_new_comment_count();
  static const int kNewCommentCountFieldNumber = 10;
  ::google::protobuf::int32 new_comment_count() const;
  void set_new_comment_count(::google::protobuf::int32 value);

  // optional bool provisional = 11;
  bool has_provisional() const;
  void clear_provisional();
  static const int kProvisionalFieldNumber = 11;
  bool provisional() const;
  void set_provisional(bool value);

  // optional float scroll_to_row = 12;
  bool has_scroll_to_row() const;
  void clear_scroll_to_row();
  static const int kScrollToRowFieldNumber = 12;
  float scroll_to_row() const;
  void set_scroll_to_row(float value);

  // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_cover_photo();
  inline void clear_has_cover_photo();
  inline void set_has_earliest_timestamp();
  inline void clear_has_earliest_timestamp();
  inline void set_has_latest_timestamp();
  inline void clear_has_latest_timestamp();
  inline void set_has_photo_count();
  inline void clear_has_photo_count();
  inline void set_has_comment_count();
  inline void clear_has_comment_count();
  inline void set_has_new_photo_count();
  inline void clear_has_new_photo_count();
  inline void set_has_new_comment_count();
  inline void clear_has_new_comment_count();
  inline void set_has_provisional();
  inline void clear_has_provisional();
  inline void set_has_scroll_to_row();
  inline void clear_has_scroll_to_row();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_Contributor > contributors_;
  ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow > activities_;
  ::DayPhoto* cover_photo_;
  ::google::protobuf::int64 viewpoint_id_;
  double earliest_timestamp_;
  double latest_timestamp_;
  ::google::protobuf::int32 photo_count_;
  ::google::protobuf::int32 comment_count_;
  ::google::protobuf::int32 new_photo_count_;
  ::google::protobuf::int32 new_comment_count_;
  bool provisional_;
  float scroll_to_row_;
  friend void  protobuf_InitDefaults_DayMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_DayMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_DayMetadata_2eproto();
  friend void protobuf_ShutdownFile_DayMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ViewpointSummaryMetadata> ViewpointSummaryMetadata_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DayContributor

// optional int64 user_id = 1;
inline bool DayContributor::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayContributor::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayContributor::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayContributor::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 DayContributor::user_id() const {
  // @@protoc_insertion_point(field_get:DayContributor.user_id)
  return user_id_;
}
inline void DayContributor::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:DayContributor.user_id)
}

// optional .DayContributor.ContributorType type = 2;
inline bool DayContributor::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DayContributor::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DayContributor::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DayContributor::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DayContributor_ContributorType DayContributor::type() const {
  // @@protoc_insertion_point(field_get:DayContributor.type)
  return static_cast< ::DayContributor_ContributorType >(type_);
}
inline void DayContributor::set_type(::DayContributor_ContributorType value) {
  assert(::DayContributor_ContributorType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DayContributor.type)
}

// optional string identity = 3;
inline bool DayContributor::has_identity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DayContributor::set_has_identity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DayContributor::clear_has_identity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DayContributor::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identity();
}
inline const ::std::string& DayContributor::identity() const {
  // @@protoc_insertion_point(field_get:DayContributor.identity)
  return identity_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DayContributor::set_identity(const ::std::string& value) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DayContributor.identity)
}
inline void DayContributor::set_identity(const char* value) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DayContributor.identity)
}
inline void DayContributor::set_identity(const char* value, size_t size) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DayContributor.identity)
}
inline ::std::string* DayContributor::mutable_identity() {
  set_has_identity();
  // @@protoc_insertion_point(field_mutable:DayContributor.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DayContributor::release_identity() {
  // @@protoc_insertion_point(field_release:DayContributor.identity)
  clear_has_identity();
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DayContributor::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    set_has_identity();
  } else {
    clear_has_identity();
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:DayContributor.identity)
}

inline const DayContributor* DayContributor::internal_default_instance() {
  return &DayContributor_default_instance_.get();
}
// -------------------------------------------------------------------

// DayPhoto

// optional int64 photo_id = 1;
inline bool DayPhoto::has_photo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayPhoto::set_has_photo_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayPhoto::clear_has_photo_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayPhoto::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
  clear_has_photo_id();
}
inline ::google::protobuf::int64 DayPhoto::photo_id() const {
  // @@protoc_insertion_point(field_get:DayPhoto.photo_id)
  return photo_id_;
}
inline void DayPhoto::set_photo_id(::google::protobuf::int64 value) {
  set_has_photo_id();
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:DayPhoto.photo_id)
}

// optional int64 episode_id = 2;
inline bool DayPhoto::has_episode_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DayPhoto::set_has_episode_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DayPhoto::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DayPhoto::clear_episode_id() {
  episode_id_ = GOOGLE_LONGLONG(0);
  clear_has_episode_id();
}
inline ::google::protobuf::int64 DayPhoto::episode_id() const {
  // @@protoc_insertion_point(field_get:DayPhoto.episode_id)
  return episode_id_;
}
inline void DayPhoto::set_episode_id(::google::protobuf::int64 value) {
  set_has_episode_id();
  episode_id_ = value;
  // @@protoc_insertion_point(field_set:DayPhoto.episode_id)
}

// optional double aspect_ratio = 3;
inline bool DayPhoto::has_aspect_ratio() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DayPhoto::set_has_aspect_ratio() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DayPhoto::clear_has_aspect_ratio() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DayPhoto::clear_aspect_ratio() {
  aspect_ratio_ = 0;
  clear_has_aspect_ratio();
}
inline double DayPhoto::aspect_ratio() const {
  // @@protoc_insertion_point(field_get:DayPhoto.aspect_ratio)
  return aspect_ratio_;
}
inline void DayPhoto::set_aspect_ratio(double value) {
  set_has_aspect_ratio();
  aspect_ratio_ = value;
  // @@protoc_insertion_point(field_set:DayPhoto.aspect_ratio)
}

// optional double timestamp = 4;
inline bool DayPhoto::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DayPhoto::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DayPhoto::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DayPhoto::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double DayPhoto::timestamp() const {
  // @@protoc_insertion_point(field_get:DayPhoto.timestamp)
  return timestamp_;
}
inline void DayPhoto::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:DayPhoto.timestamp)
}

inline const DayPhoto* DayPhoto::internal_default_instance() {
  return &DayPhoto_default_instance_.get();
}
// -------------------------------------------------------------------

// FilteredEpisode

// optional int64 episode_id = 1;
inline bool FilteredEpisode::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FilteredEpisode::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FilteredEpisode::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FilteredEpisode::clear_episode_id() {
  episode_id_ = GOOGLE_LONGLONG(0);
  clear_has_episode_id();
}
inline ::google::protobuf::int64 FilteredEpisode::episode_id() const {
  // @@protoc_insertion_point(field_get:FilteredEpisode.episode_id)
  return episode_id_;
}
inline void FilteredEpisode::set_episode_id(::google::protobuf::int64 value) {
  set_has_episode_id();
  episode_id_ = value;
  // @@protoc_insertion_point(field_set:FilteredEpisode.episode_id)
}

// repeated int64 photo_ids = 2;
inline int FilteredEpisode::photo_ids_size() const {
  return photo_ids_.size();
}
inline void FilteredEpisode::clear_photo_ids() {
  photo_ids_.Clear();
}
inline ::google::protobuf::int64 FilteredEpisode::photo_ids(int index) const {
  // @@protoc_insertion_point(field_get:FilteredEpisode.photo_ids)
  return photo_ids_.Get(index);
}
inline void FilteredEpisode::set_photo_ids(int index, ::google::protobuf::int64 value) {
  photo_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:FilteredEpisode.photo_ids)
}
inline void FilteredEpisode::add_photo_ids(::google::protobuf::int64 value) {
  photo_ids_.Add(value);
  // @@protoc_insertion_point(field_add:FilteredEpisode.photo_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FilteredEpisode::photo_ids() const {
  // @@protoc_insertion_point(field_list:FilteredEpisode.photo_ids)
  return photo_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FilteredEpisode::mutable_photo_ids() {
  // @@protoc_insertion_point(field_mutable_list:FilteredEpisode.photo_ids)
  return &photo_ids_;
}

inline const FilteredEpisode* FilteredEpisode::internal_default_instance() {
  return &FilteredEpisode_default_instance_.get();
}
// -------------------------------------------------------------------

// TrapdoorMetadata

// optional int64 viewpoint_id = 1;
inline bool TrapdoorMetadata::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapdoorMetadata::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapdoorMetadata::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapdoorMetadata::clear_viewpoint_id() {
  viewpoint_id_ = GOOGLE_LONGLONG(0);
  clear_has_viewpoint_id();
}
inline ::google::protobuf::int64 TrapdoorMetadata::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.viewpoint_id)
  return viewpoint_id_;
}
inline void TrapdoorMetadata::set_viewpoint_id(::google::protobuf::int64 value) {
  set_has_viewpoint_id();
  viewpoint_id_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.viewpoint_id)
}

// optional .TrapdoorMetadata.Type type = 2;
inline bool TrapdoorMetadata::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapdoorMetadata::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapdoorMetadata::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapdoorMetadata::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::TrapdoorMetadata_Type TrapdoorMetadata::type() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.type)
  return static_cast< ::TrapdoorMetadata_Type >(type_);
}
inline void TrapdoorMetadata::set_type(::TrapdoorMetadata_Type value) {
  assert(::TrapdoorMetadata_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.type)
}

// optional .DayPhoto cover_photo = 3;
inline bool TrapdoorMetadata::has_cover_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrapdoorMetadata::set_has_cover_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrapdoorMetadata::clear_has_cover_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrapdoorMetadata::clear_cover_photo() {
  if (cover_photo_ != NULL) cover_photo_->::DayPhoto::Clear();
  clear_has_cover_photo();
}
inline const ::DayPhoto& TrapdoorMetadata::cover_photo() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.cover_photo)
  return cover_photo_ != NULL ? *cover_photo_
                         : *::DayPhoto::internal_default_instance();
}
inline ::DayPhoto* TrapdoorMetadata::mutable_cover_photo() {
  set_has_cover_photo();
  if (cover_photo_ == NULL) {
    cover_photo_ = new ::DayPhoto;
  }
  // @@protoc_insertion_point(field_mutable:TrapdoorMetadata.cover_photo)
  return cover_photo_;
}
inline ::DayPhoto* TrapdoorMetadata::release_cover_photo() {
  // @@protoc_insertion_point(field_release:TrapdoorMetadata.cover_photo)
  clear_has_cover_photo();
  ::DayPhoto* temp = cover_photo_;
  cover_photo_ = NULL;
  return temp;
}
inline void TrapdoorMetadata::set_allocated_cover_photo(::DayPhoto* cover_photo) {
  delete cover_photo_;
  cover_photo_ = cover_photo;
  if (cover_photo) {
    set_has_cover_photo();
  } else {
    clear_has_cover_photo();
  }
  // @@protoc_insertion_point(field_set_allocated:TrapdoorMetadata.cover_photo)
}

// optional double earliest_timestamp = 4;
inline bool TrapdoorMetadata::has_earliest_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrapdoorMetadata::set_has_earliest_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrapdoorMetadata::clear_has_earliest_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrapdoorMetadata::clear_earliest_timestamp() {
  earliest_timestamp_ = 0;
  clear_has_earliest_timestamp();
}
inline double TrapdoorMetadata::earliest_timestamp() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.earliest_timestamp)
  return earliest_timestamp_;
}
inline void TrapdoorMetadata::set_earliest_timestamp(double value) {
  set_has_earliest_timestamp();
  earliest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.earliest_timestamp)
}

// optional double latest_timestamp = 5;
inline bool TrapdoorMetadata::has_latest_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrapdoorMetadata::set_has_latest_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrapdoorMetadata::clear_has_latest_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrapdoorMetadata::clear_latest_timestamp() {
  latest_timestamp_ = 0;
  clear_has_latest_timestamp();
}
inline double TrapdoorMetadata::latest_timestamp() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.latest_timestamp)
  return latest_timestamp_;
}
inline void TrapdoorMetadata::set_latest_timestamp(double value) {
  set_has_latest_timestamp();
  latest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.latest_timestamp)
}

// optional int32 event_index = 6;
inline bool TrapdoorMetadata::has_event_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrapdoorMetadata::set_has_event_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrapdoorMetadata::clear_has_event_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrapdoorMetadata::clear_event_index() {
  event_index_ = 0;
  clear_has_event_index();
}
inline ::google::protobuf::int32 TrapdoorMetadata::event_index() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.event_index)
  return event_index_;
}
inline void TrapdoorMetadata::set_event_index(::google::protobuf::int32 value) {
  set_has_event_index();
  event_index_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.event_index)
}

// repeated .DayContributor contributors = 7;
inline int TrapdoorMetadata::contributors_size() const {
  return contributors_.size();
}
inline void TrapdoorMetadata::clear_contributors() {
  contributors_.Clear();
}
inline const ::DayContributor& TrapdoorMetadata::contributors(int index) const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.contributors)
  return contributors_.Get(index);
}
inline ::DayContributor* TrapdoorMetadata::mutable_contributors(int index) {
  // @@protoc_insertion_point(field_mutable:TrapdoorMetadata.contributors)
  return contributors_.Mutable(index);
}
inline ::DayContributor* TrapdoorMetadata::add_contributors() {
  // @@protoc_insertion_point(field_add:TrapdoorMetadata.contributors)
  return contributors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DayContributor >*
TrapdoorMetadata::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:TrapdoorMetadata.contributors)
  return &contributors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DayContributor >&
TrapdoorMetadata::contributors() const {
  // @@protoc_insertion_point(field_list:TrapdoorMetadata.contributors)
  return contributors_;
}

// repeated .DayPhoto photos = 8;
inline int TrapdoorMetadata::photos_size() const {
  return photos_.size();
}
inline void TrapdoorMetadata::clear_photos() {
  photos_.Clear();
}
inline const ::DayPhoto& TrapdoorMetadata::photos(int index) const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.photos)
  return photos_.Get(index);
}
inline ::DayPhoto* TrapdoorMetadata::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:TrapdoorMetadata.photos)
  return photos_.Mutable(index);
}
inline ::DayPhoto* TrapdoorMetadata::add_photos() {
  // @@protoc_insertion_point(field_add:TrapdoorMetadata.photos)
  return photos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DayPhoto >*
TrapdoorMetadata::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:TrapdoorMetadata.photos)
  return &photos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DayPhoto >&
TrapdoorMetadata::photos() const {
  // @@protoc_insertion_point(field_list:TrapdoorMetadata.photos)
  return photos_;
}

// optional bool sub_sampled = 9;
inline bool TrapdoorMetadata::has_sub_sampled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TrapdoorMetadata::set_has_sub_sampled() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TrapdoorMetadata::clear_has_sub_sampled() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TrapdoorMetadata::clear_sub_sampled() {
  sub_sampled_ = false;
  clear_has_sub_sampled();
}
inline bool TrapdoorMetadata::sub_sampled() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.sub_sampled)
  return sub_sampled_;
}
inline void TrapdoorMetadata::set_sub_sampled(bool value) {
  set_has_sub_sampled();
  sub_sampled_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.sub_sampled)
}

// optional int32 photo_count = 10;
inline bool TrapdoorMetadata::has_photo_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TrapdoorMetadata::set_has_photo_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TrapdoorMetadata::clear_has_photo_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TrapdoorMetadata::clear_photo_count() {
  photo_count_ = 0;
  clear_has_photo_count();
}
inline ::google::protobuf::int32 TrapdoorMetadata::photo_count() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.photo_count)
  return photo_count_;
}
inline void TrapdoorMetadata::set_photo_count(::google::protobuf::int32 value) {
  set_has_photo_count();
  photo_count_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.photo_count)
}

// optional int32 comment_count = 11;
inline bool TrapdoorMetadata::has_comment_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TrapdoorMetadata::set_has_comment_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TrapdoorMetadata::clear_has_comment_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TrapdoorMetadata::clear_comment_count() {
  comment_count_ = 0;
  clear_has_comment_count();
}
inline ::google::protobuf::int32 TrapdoorMetadata::comment_count() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.comment_count)
  return comment_count_;
}
inline void TrapdoorMetadata::set_comment_count(::google::protobuf::int32 value) {
  set_has_comment_count();
  comment_count_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.comment_count)
}

// optional int32 new_photo_count = 12;
inline bool TrapdoorMetadata::has_new_photo_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TrapdoorMetadata::set_has_new_photo_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TrapdoorMetadata::clear_has_new_photo_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TrapdoorMetadata::clear_new_photo_count() {
  new_photo_count_ = 0;
  clear_has_new_photo_count();
}
inline ::google::protobuf::int32 TrapdoorMetadata::new_photo_count() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.new_photo_count)
  return new_photo_count_;
}
inline void TrapdoorMetadata::set_new_photo_count(::google::protobuf::int32 value) {
  set_has_new_photo_count();
  new_photo_count_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.new_photo_count)
}

// optional int32 new_comment_count = 13;
inline bool TrapdoorMetadata::has_new_comment_count() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TrapdoorMetadata::set_has_new_comment_count() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TrapdoorMetadata::clear_has_new_comment_count() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TrapdoorMetadata::clear_new_comment_count() {
  new_comment_count_ = 0;
  clear_has_new_comment_count();
}
inline ::google::protobuf::int32 TrapdoorMetadata::new_comment_count() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.new_comment_count)
  return new_comment_count_;
}
inline void TrapdoorMetadata::set_new_comment_count(::google::protobuf::int32 value) {
  set_has_new_comment_count();
  new_comment_count_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.new_comment_count)
}

// optional bool unviewed_content = 14;
inline bool TrapdoorMetadata::has_unviewed_content() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TrapdoorMetadata::set_has_unviewed_content() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TrapdoorMetadata::clear_has_unviewed_content() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TrapdoorMetadata::clear_unviewed_content() {
  unviewed_content_ = false;
  clear_has_unviewed_content();
}
inline bool TrapdoorMetadata::unviewed_content() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.unviewed_content)
  return unviewed_content_;
}
inline void TrapdoorMetadata::set_unviewed_content(bool value) {
  set_has_unviewed_content();
  unviewed_content_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.unviewed_content)
}

// optional bool pending_content = 15;
inline bool TrapdoorMetadata::has_pending_content() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TrapdoorMetadata::set_has_pending_content() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TrapdoorMetadata::clear_has_pending_content() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TrapdoorMetadata::clear_pending_content() {
  pending_content_ = false;
  clear_has_pending_content();
}
inline bool TrapdoorMetadata::pending_content() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.pending_content)
  return pending_content_;
}
inline void TrapdoorMetadata::set_pending_content(bool value) {
  set_has_pending_content();
  pending_content_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.pending_content)
}

// optional bool muted = 16;
inline bool TrapdoorMetadata::has_muted() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TrapdoorMetadata::set_has_muted() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TrapdoorMetadata::clear_has_muted() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TrapdoorMetadata::clear_muted() {
  muted_ = false;
  clear_has_muted();
}
inline bool TrapdoorMetadata::muted() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.muted)
  return muted_;
}
inline void TrapdoorMetadata::set_muted(bool value) {
  set_has_muted();
  muted_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.muted)
}

// optional bool autosave = 17;
inline bool TrapdoorMetadata::has_autosave() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TrapdoorMetadata::set_has_autosave() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TrapdoorMetadata::clear_has_autosave() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TrapdoorMetadata::clear_autosave() {
  autosave_ = false;
  clear_has_autosave();
}
inline bool TrapdoorMetadata::autosave() const {
  // @@protoc_insertion_point(field_get:TrapdoorMetadata.autosave)
  return autosave_;
}
inline void TrapdoorMetadata::set_autosave(bool value) {
  set_has_autosave();
  autosave_ = value;
  // @@protoc_insertion_point(field_set:TrapdoorMetadata.autosave)
}

inline const TrapdoorMetadata* TrapdoorMetadata::internal_default_instance() {
  return &TrapdoorMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// EventMetadata

// optional double earliest_timestamp = 1;
inline bool EventMetadata::has_earliest_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventMetadata::set_has_earliest_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventMetadata::clear_has_earliest_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventMetadata::clear_earliest_timestamp() {
  earliest_timestamp_ = 0;
  clear_has_earliest_timestamp();
}
inline double EventMetadata::earliest_timestamp() const {
  // @@protoc_insertion_point(field_get:EventMetadata.earliest_timestamp)
  return earliest_timestamp_;
}
inline void EventMetadata::set_earliest_timestamp(double value) {
  set_has_earliest_timestamp();
  earliest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:EventMetadata.earliest_timestamp)
}

// optional double latest_timestamp = 2;
inline bool EventMetadata::has_latest_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventMetadata::set_has_latest_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventMetadata::clear_has_latest_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventMetadata::clear_latest_timestamp() {
  latest_timestamp_ = 0;
  clear_has_latest_timestamp();
}
inline double EventMetadata::latest_timestamp() const {
  // @@protoc_insertion_point(field_get:EventMetadata.latest_timestamp)
  return latest_timestamp_;
}
inline void EventMetadata::set_latest_timestamp(double value) {
  set_has_latest_timestamp();
  latest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:EventMetadata.latest_timestamp)
}

// optional int32 photo_count = 3;
inline bool EventMetadata::has_photo_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventMetadata::set_has_photo_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventMetadata::clear_has_photo_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventMetadata::clear_photo_count() {
  photo_count_ = 0;
  clear_has_photo_count();
}
inline ::google::protobuf::int32 EventMetadata::photo_count() const {
  // @@protoc_insertion_point(field_get:EventMetadata.photo_count)
  return photo_count_;
}
inline void EventMetadata::set_photo_count(::google::protobuf::int32 value) {
  set_has_photo_count();
  photo_count_ = value;
  // @@protoc_insertion_point(field_set:EventMetadata.photo_count)
}

// repeated .FilteredEpisode episodes = 4;
inline int EventMetadata::episodes_size() const {
  return episodes_.size();
}
inline void EventMetadata::clear_episodes() {
  episodes_.Clear();
}
inline const ::FilteredEpisode& EventMetadata::episodes(int index) const {
  // @@protoc_insertion_point(field_get:EventMetadata.episodes)
  return episodes_.Get(index);
}
inline ::FilteredEpisode* EventMetadata::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:EventMetadata.episodes)
  return episodes_.Mutable(index);
}
inline ::FilteredEpisode* EventMetadata::add_episodes() {
  // @@protoc_insertion_point(field_add:EventMetadata.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FilteredEpisode >*
EventMetadata::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:EventMetadata.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FilteredEpisode >&
EventMetadata::episodes() const {
  // @@protoc_insertion_point(field_list:EventMetadata.episodes)
  return episodes_;
}

// repeated .DayContributor contributors = 5;
inline int EventMetadata::contributors_size() const {
  return contributors_.size();
}
inline void EventMetadata::clear_contributors() {
  contributors_.Clear();
}
inline const ::DayContributor& EventMetadata::contributors(int index) const {
  // @@protoc_insertion_point(field_get:EventMetadata.contributors)
  return contributors_.Get(index);
}
inline ::DayContributor* EventMetadata::mutable_contributors(int index) {
  // @@protoc_insertion_point(field_mutable:EventMetadata.contributors)
  return contributors_.Mutable(index);
}
inline ::DayContributor* EventMetadata::add_contributors() {
  // @@protoc_insertion_point(field_add:EventMetadata.contributors)
  return contributors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DayContributor >*
EventMetadata::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:EventMetadata.contributors)
  return &contributors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DayContributor >&
EventMetadata::contributors() const {
  // @@protoc_insertion_point(field_list:EventMetadata.contributors)
  return contributors_;
}

// optional .Location location = 6;
inline bool EventMetadata::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EventMetadata::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EventMetadata::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EventMetadata::clear_location() {
  if (location_ != NULL) location_->::Location::Clear();
  clear_has_location();
}
inline const ::Location& EventMetadata::location() const {
  // @@protoc_insertion_point(field_get:EventMetadata.location)
  return location_ != NULL ? *location_
                         : *::Location::internal_default_instance();
}
inline ::Location* EventMetadata::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::Location;
  }
  // @@protoc_insertion_point(field_mutable:EventMetadata.location)
  return location_;
}
inline ::Location* EventMetadata::release_location() {
  // @@protoc_insertion_point(field_release:EventMetadata.location)
  clear_has_location();
  ::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline void EventMetadata::set_allocated_location(::Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:EventMetadata.location)
}

// optional .Placemark placemark = 7;
inline bool EventMetadata::has_placemark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EventMetadata::set_has_placemark() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EventMetadata::clear_has_placemark() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EventMetadata::clear_placemark() {
  if (placemark_ != NULL) placemark_->::Placemark::Clear();
  clear_has_placemark();
}
inline const ::Placemark& EventMetadata::placemark() const {
  // @@protoc_insertion_point(field_get:EventMetadata.placemark)
  return placemark_ != NULL ? *placemark_
                         : *::Placemark::internal_default_instance();
}
inline ::Placemark* EventMetadata::mutable_placemark() {
  set_has_placemark();
  if (placemark_ == NULL) {
    placemark_ = new ::Placemark;
  }
  // @@protoc_insertion_point(field_mutable:EventMetadata.placemark)
  return placemark_;
}
inline ::Placemark* EventMetadata::release_placemark() {
  // @@protoc_insertion_point(field_release:EventMetadata.placemark)
  clear_has_placemark();
  ::Placemark* temp = placemark_;
  placemark_ = NULL;
  return temp;
}
inline void EventMetadata::set_allocated_placemark(::Placemark* placemark) {
  delete placemark_;
  placemark_ = placemark;
  if (placemark) {
    set_has_placemark();
  } else {
    clear_has_placemark();
  }
  // @@protoc_insertion_point(field_set_allocated:EventMetadata.placemark)
}

// optional double distance = 8;
inline bool EventMetadata::has_distance() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EventMetadata::set_has_distance() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EventMetadata::clear_has_distance() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EventMetadata::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline double EventMetadata::distance() const {
  // @@protoc_insertion_point(field_get:EventMetadata.distance)
  return distance_;
}
inline void EventMetadata::set_distance(double value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:EventMetadata.distance)
}

// repeated .TrapdoorMetadata trapdoors = 9;
inline int EventMetadata::trapdoors_size() const {
  return trapdoors_.size();
}
inline void EventMetadata::clear_trapdoors() {
  trapdoors_.Clear();
}
inline const ::TrapdoorMetadata& EventMetadata::trapdoors(int index) const {
  // @@protoc_insertion_point(field_get:EventMetadata.trapdoors)
  return trapdoors_.Get(index);
}
inline ::TrapdoorMetadata* EventMetadata::mutable_trapdoors(int index) {
  // @@protoc_insertion_point(field_mutable:EventMetadata.trapdoors)
  return trapdoors_.Mutable(index);
}
inline ::TrapdoorMetadata* EventMetadata::add_trapdoors() {
  // @@protoc_insertion_point(field_add:EventMetadata.trapdoors)
  return trapdoors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TrapdoorMetadata >*
EventMetadata::mutable_trapdoors() {
  // @@protoc_insertion_point(field_mutable_list:EventMetadata.trapdoors)
  return &trapdoors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TrapdoorMetadata >&
EventMetadata::trapdoors() const {
  // @@protoc_insertion_point(field_list:EventMetadata.trapdoors)
  return trapdoors_;
}

// optional string title = 10;
inline bool EventMetadata::has_title() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EventMetadata::set_has_title() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EventMetadata::clear_has_title() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EventMetadata::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& EventMetadata::title() const {
  // @@protoc_insertion_point(field_get:EventMetadata.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventMetadata::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EventMetadata.title)
}
inline void EventMetadata::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EventMetadata.title)
}
inline void EventMetadata::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EventMetadata.title)
}
inline ::std::string* EventMetadata::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:EventMetadata.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventMetadata::release_title() {
  // @@protoc_insertion_point(field_release:EventMetadata.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventMetadata::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:EventMetadata.title)
}

// optional string short_title = 11;
inline bool EventMetadata::has_short_title() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EventMetadata::set_has_short_title() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EventMetadata::clear_has_short_title() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EventMetadata::clear_short_title() {
  short_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_short_title();
}
inline const ::std::string& EventMetadata::short_title() const {
  // @@protoc_insertion_point(field_get:EventMetadata.short_title)
  return short_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventMetadata::set_short_title(const ::std::string& value) {
  set_has_short_title();
  short_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EventMetadata.short_title)
}
inline void EventMetadata::set_short_title(const char* value) {
  set_has_short_title();
  short_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EventMetadata.short_title)
}
inline void EventMetadata::set_short_title(const char* value, size_t size) {
  set_has_short_title();
  short_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EventMetadata.short_title)
}
inline ::std::string* EventMetadata::mutable_short_title() {
  set_has_short_title();
  // @@protoc_insertion_point(field_mutable:EventMetadata.short_title)
  return short_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventMetadata::release_short_title() {
  // @@protoc_insertion_point(field_release:EventMetadata.short_title)
  clear_has_short_title();
  return short_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventMetadata::set_allocated_short_title(::std::string* short_title) {
  if (short_title != NULL) {
    set_has_short_title();
  } else {
    clear_has_short_title();
  }
  short_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_title);
  // @@protoc_insertion_point(field_set_allocated:EventMetadata.short_title)
}

inline const EventMetadata* EventMetadata::internal_default_instance() {
  return &EventMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// CachedEpisode

// optional .EpisodeId id = 1;
inline bool CachedEpisode::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CachedEpisode::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CachedEpisode::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CachedEpisode::clear_id() {
  if (id_ != NULL) id_->::EpisodeId::Clear();
  clear_has_id();
}
inline const ::EpisodeId& CachedEpisode::id() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.id)
  return id_ != NULL ? *id_
                         : *::EpisodeId::internal_default_instance();
}
inline ::EpisodeId* CachedEpisode::mutable_id() {
  set_has_id();
  if (id_ == NULL) {
    id_ = new ::EpisodeId;
  }
  // @@protoc_insertion_point(field_mutable:CachedEpisode.id)
  return id_;
}
inline ::EpisodeId* CachedEpisode::release_id() {
  // @@protoc_insertion_point(field_release:CachedEpisode.id)
  clear_has_id();
  ::EpisodeId* temp = id_;
  id_ = NULL;
  return temp;
}
inline void CachedEpisode::set_allocated_id(::EpisodeId* id) {
  delete id_;
  id_ = id;
  if (id) {
    set_has_id();
  } else {
    clear_has_id();
  }
  // @@protoc_insertion_point(field_set_allocated:CachedEpisode.id)
}

// optional .EpisodeId parent_id = 2;
inline bool CachedEpisode::has_parent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CachedEpisode::set_has_parent_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CachedEpisode::clear_has_parent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CachedEpisode::clear_parent_id() {
  if (parent_id_ != NULL) parent_id_->::EpisodeId::Clear();
  clear_has_parent_id();
}
inline const ::EpisodeId& CachedEpisode::parent_id() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.parent_id)
  return parent_id_ != NULL ? *parent_id_
                         : *::EpisodeId::internal_default_instance();
}
inline ::EpisodeId* CachedEpisode::mutable_parent_id() {
  set_has_parent_id();
  if (parent_id_ == NULL) {
    parent_id_ = new ::EpisodeId;
  }
  // @@protoc_insertion_point(field_mutable:CachedEpisode.parent_id)
  return parent_id_;
}
inline ::EpisodeId* CachedEpisode::release_parent_id() {
  // @@protoc_insertion_point(field_release:CachedEpisode.parent_id)
  clear_has_parent_id();
  ::EpisodeId* temp = parent_id_;
  parent_id_ = NULL;
  return temp;
}
inline void CachedEpisode::set_allocated_parent_id(::EpisodeId* parent_id) {
  delete parent_id_;
  parent_id_ = parent_id;
  if (parent_id) {
    set_has_parent_id();
  } else {
    clear_has_parent_id();
  }
  // @@protoc_insertion_point(field_set_allocated:CachedEpisode.parent_id)
}

// optional .ViewpointId viewpoint_id = 3;
inline bool CachedEpisode::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CachedEpisode::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CachedEpisode::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CachedEpisode::clear_viewpoint_id() {
  if (viewpoint_id_ != NULL) viewpoint_id_->::ViewpointId::Clear();
  clear_has_viewpoint_id();
}
inline const ::ViewpointId& CachedEpisode::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.viewpoint_id)
  return viewpoint_id_ != NULL ? *viewpoint_id_
                         : *::ViewpointId::internal_default_instance();
}
inline ::ViewpointId* CachedEpisode::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  if (viewpoint_id_ == NULL) {
    viewpoint_id_ = new ::ViewpointId;
  }
  // @@protoc_insertion_point(field_mutable:CachedEpisode.viewpoint_id)
  return viewpoint_id_;
}
inline ::ViewpointId* CachedEpisode::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:CachedEpisode.viewpoint_id)
  clear_has_viewpoint_id();
  ::ViewpointId* temp = viewpoint_id_;
  viewpoint_id_ = NULL;
  return temp;
}
inline void CachedEpisode::set_allocated_viewpoint_id(::ViewpointId* viewpoint_id) {
  delete viewpoint_id_;
  viewpoint_id_ = viewpoint_id;
  if (viewpoint_id) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  // @@protoc_insertion_point(field_set_allocated:CachedEpisode.viewpoint_id)
}

// optional int64 user_id = 4;
inline bool CachedEpisode::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CachedEpisode::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CachedEpisode::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CachedEpisode::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 CachedEpisode::user_id() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.user_id)
  return user_id_;
}
inline void CachedEpisode::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CachedEpisode.user_id)
}

// optional double timestamp = 5;
inline bool CachedEpisode::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CachedEpisode::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CachedEpisode::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CachedEpisode::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double CachedEpisode::timestamp() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.timestamp)
  return timestamp_;
}
inline void CachedEpisode::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CachedEpisode.timestamp)
}

// optional .Location location = 6;
inline bool CachedEpisode::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CachedEpisode::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CachedEpisode::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CachedEpisode::clear_location() {
  if (location_ != NULL) location_->::Location::Clear();
  clear_has_location();
}
inline const ::Location& CachedEpisode::location() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.location)
  return location_ != NULL ? *location_
                         : *::Location::internal_default_instance();
}
inline ::Location* CachedEpisode::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::Location;
  }
  // @@protoc_insertion_point(field_mutable:CachedEpisode.location)
  return location_;
}
inline ::Location* CachedEpisode::release_location() {
  // @@protoc_insertion_point(field_release:CachedEpisode.location)
  clear_has_location();
  ::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline void CachedEpisode::set_allocated_location(::Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:CachedEpisode.location)
}

// optional .Placemark placemark = 7;
inline bool CachedEpisode::has_placemark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CachedEpisode::set_has_placemark() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CachedEpisode::clear_has_placemark() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CachedEpisode::clear_placemark() {
  if (placemark_ != NULL) placemark_->::Placemark::Clear();
  clear_has_placemark();
}
inline const ::Placemark& CachedEpisode::placemark() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.placemark)
  return placemark_ != NULL ? *placemark_
                         : *::Placemark::internal_default_instance();
}
inline ::Placemark* CachedEpisode::mutable_placemark() {
  set_has_placemark();
  if (placemark_ == NULL) {
    placemark_ = new ::Placemark;
  }
  // @@protoc_insertion_point(field_mutable:CachedEpisode.placemark)
  return placemark_;
}
inline ::Placemark* CachedEpisode::release_placemark() {
  // @@protoc_insertion_point(field_release:CachedEpisode.placemark)
  clear_has_placemark();
  ::Placemark* temp = placemark_;
  placemark_ = NULL;
  return temp;
}
inline void CachedEpisode::set_allocated_placemark(::Placemark* placemark) {
  delete placemark_;
  placemark_ = placemark;
  if (placemark) {
    set_has_placemark();
  } else {
    clear_has_placemark();
  }
  // @@protoc_insertion_point(field_set_allocated:CachedEpisode.placemark)
}

// optional double earliest_photo_timestamp = 8;
inline bool CachedEpisode::has_earliest_photo_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CachedEpisode::set_has_earliest_photo_timestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CachedEpisode::clear_has_earliest_photo_timestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CachedEpisode::clear_earliest_photo_timestamp() {
  earliest_photo_timestamp_ = 0;
  clear_has_earliest_photo_timestamp();
}
inline double CachedEpisode::earliest_photo_timestamp() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.earliest_photo_timestamp)
  return earliest_photo_timestamp_;
}
inline void CachedEpisode::set_earliest_photo_timestamp(double value) {
  set_has_earliest_photo_timestamp();
  earliest_photo_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CachedEpisode.earliest_photo_timestamp)
}

// optional double latest_photo_timestamp = 9;
inline bool CachedEpisode::has_latest_photo_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CachedEpisode::set_has_latest_photo_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CachedEpisode::clear_has_latest_photo_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CachedEpisode::clear_latest_photo_timestamp() {
  latest_photo_timestamp_ = 0;
  clear_has_latest_photo_timestamp();
}
inline double CachedEpisode::latest_photo_timestamp() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.latest_photo_timestamp)
  return latest_photo_timestamp_;
}
inline void CachedEpisode::set_latest_photo_timestamp(double value) {
  set_has_latest_photo_timestamp();
  latest_photo_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CachedEpisode.latest_photo_timestamp)
}

// repeated .DayPhoto photos = 10;
inline int CachedEpisode::photos_size() const {
  return photos_.size();
}
inline void CachedEpisode::clear_photos() {
  photos_.Clear();
}
inline const ::DayPhoto& CachedEpisode::photos(int index) const {
  // @@protoc_insertion_point(field_get:CachedEpisode.photos)
  return photos_.Get(index);
}
inline ::DayPhoto* CachedEpisode::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:CachedEpisode.photos)
  return photos_.Mutable(index);
}
inline ::DayPhoto* CachedEpisode::add_photos() {
  // @@protoc_insertion_point(field_add:CachedEpisode.photos)
  return photos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DayPhoto >*
CachedEpisode::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:CachedEpisode.photos)
  return &photos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DayPhoto >&
CachedEpisode::photos() const {
  // @@protoc_insertion_point(field_list:CachedEpisode.photos)
  return photos_;
}

// optional bool in_library = 11;
inline bool CachedEpisode::has_in_library() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CachedEpisode::set_has_in_library() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CachedEpisode::clear_has_in_library() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CachedEpisode::clear_in_library() {
  in_library_ = false;
  clear_has_in_library();
}
inline bool CachedEpisode::in_library() const {
  // @@protoc_insertion_point(field_get:CachedEpisode.in_library)
  return in_library_;
}
inline void CachedEpisode::set_in_library(bool value) {
  set_has_in_library();
  in_library_ = value;
  // @@protoc_insertion_point(field_set:CachedEpisode.in_library)
}

inline const CachedEpisode* CachedEpisode::internal_default_instance() {
  return &CachedEpisode_default_instance_.get();
}
// -------------------------------------------------------------------

// DayMetadata

// optional double timestamp = 1;
inline bool DayMetadata::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayMetadata::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayMetadata::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayMetadata::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double DayMetadata::timestamp() const {
  // @@protoc_insertion_point(field_get:DayMetadata.timestamp)
  return timestamp_;
}
inline void DayMetadata::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:DayMetadata.timestamp)
}

// repeated .CachedEpisode episodes = 2;
inline int DayMetadata::episodes_size() const {
  return episodes_.size();
}
inline void DayMetadata::clear_episodes() {
  episodes_.Clear();
}
inline const ::CachedEpisode& DayMetadata::episodes(int index) const {
  // @@protoc_insertion_point(field_get:DayMetadata.episodes)
  return episodes_.Get(index);
}
inline ::CachedEpisode* DayMetadata::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:DayMetadata.episodes)
  return episodes_.Mutable(index);
}
inline ::CachedEpisode* DayMetadata::add_episodes() {
  // @@protoc_insertion_point(field_add:DayMetadata.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CachedEpisode >*
DayMetadata::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:DayMetadata.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CachedEpisode >&
DayMetadata::episodes() const {
  // @@protoc_insertion_point(field_list:DayMetadata.episodes)
  return episodes_;
}

inline const DayMetadata* DayMetadata::internal_default_instance() {
  return &DayMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// SummaryRow

// optional .SummaryRow.RowType type = 1;
inline bool SummaryRow::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SummaryRow::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SummaryRow::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SummaryRow::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::SummaryRow_RowType SummaryRow::type() const {
  // @@protoc_insertion_point(field_get:SummaryRow.type)
  return static_cast< ::SummaryRow_RowType >(type_);
}
inline void SummaryRow::set_type(::SummaryRow_RowType value) {
  assert(::SummaryRow_RowType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.type)
}

// optional double timestamp = 2;
inline bool SummaryRow::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SummaryRow::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SummaryRow::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SummaryRow::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double SummaryRow::timestamp() const {
  // @@protoc_insertion_point(field_get:SummaryRow.timestamp)
  return timestamp_;
}
inline void SummaryRow::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.timestamp)
}

// optional double day_timestamp = 3;
inline bool SummaryRow::has_day_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SummaryRow::set_has_day_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SummaryRow::clear_has_day_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SummaryRow::clear_day_timestamp() {
  day_timestamp_ = 0;
  clear_has_day_timestamp();
}
inline double SummaryRow::day_timestamp() const {
  // @@protoc_insertion_point(field_get:SummaryRow.day_timestamp)
  return day_timestamp_;
}
inline void SummaryRow::set_day_timestamp(double value) {
  set_has_day_timestamp();
  day_timestamp_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.day_timestamp)
}

// optional int64 identifier = 4;
inline bool SummaryRow::has_identifier() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SummaryRow::set_has_identifier() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SummaryRow::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SummaryRow::clear_identifier() {
  identifier_ = GOOGLE_LONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::int64 SummaryRow::identifier() const {
  // @@protoc_insertion_point(field_get:SummaryRow.identifier)
  return identifier_;
}
inline void SummaryRow::set_identifier(::google::protobuf::int64 value) {
  set_has_identifier();
  identifier_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.identifier)
}

// optional float height = 5;
inline bool SummaryRow::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SummaryRow::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SummaryRow::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SummaryRow::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float SummaryRow::height() const {
  // @@protoc_insertion_point(field_get:SummaryRow.height)
  return height_;
}
inline void SummaryRow::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.height)
}

// optional bool unviewed = 6;
inline bool SummaryRow::has_unviewed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SummaryRow::set_has_unviewed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SummaryRow::clear_has_unviewed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SummaryRow::clear_unviewed() {
  unviewed_ = false;
  clear_has_unviewed();
}
inline bool SummaryRow::unviewed() const {
  // @@protoc_insertion_point(field_get:SummaryRow.unviewed)
  return unviewed_;
}
inline void SummaryRow::set_unviewed(bool value) {
  set_has_unviewed();
  unviewed_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.unviewed)
}

// optional float position = 7;
inline bool SummaryRow::has_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SummaryRow::set_has_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SummaryRow::clear_has_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SummaryRow::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline float SummaryRow::position() const {
  // @@protoc_insertion_point(field_get:SummaryRow.position)
  return position_;
}
inline void SummaryRow::set_position(float value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.position)
}

// optional float weight = 8;
inline bool SummaryRow::has_weight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SummaryRow::set_has_weight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SummaryRow::clear_has_weight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SummaryRow::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float SummaryRow::weight() const {
  // @@protoc_insertion_point(field_get:SummaryRow.weight)
  return weight_;
}
inline void SummaryRow::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.weight)
}

// optional int32 photo_count = 9;
inline bool SummaryRow::has_photo_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SummaryRow::set_has_photo_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SummaryRow::clear_has_photo_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SummaryRow::clear_photo_count() {
  photo_count_ = 0;
  clear_has_photo_count();
}
inline ::google::protobuf::int32 SummaryRow::photo_count() const {
  // @@protoc_insertion_point(field_get:SummaryRow.photo_count)
  return photo_count_;
}
inline void SummaryRow::set_photo_count(::google::protobuf::int32 value) {
  set_has_photo_count();
  photo_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.photo_count)
}

// optional int32 comment_count = 10;
inline bool SummaryRow::has_comment_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SummaryRow::set_has_comment_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SummaryRow::clear_has_comment_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SummaryRow::clear_comment_count() {
  comment_count_ = 0;
  clear_has_comment_count();
}
inline ::google::protobuf::int32 SummaryRow::comment_count() const {
  // @@protoc_insertion_point(field_get:SummaryRow.comment_count)
  return comment_count_;
}
inline void SummaryRow::set_comment_count(::google::protobuf::int32 value) {
  set_has_comment_count();
  comment_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.comment_count)
}

// optional int32 contributor_count = 11;
inline bool SummaryRow::has_contributor_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SummaryRow::set_has_contributor_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SummaryRow::clear_has_contributor_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SummaryRow::clear_contributor_count() {
  contributor_count_ = 0;
  clear_has_contributor_count();
}
inline ::google::protobuf::int32 SummaryRow::contributor_count() const {
  // @@protoc_insertion_point(field_get:SummaryRow.contributor_count)
  return contributor_count_;
}
inline void SummaryRow::set_contributor_count(::google::protobuf::int32 value) {
  set_has_contributor_count();
  contributor_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.contributor_count)
}

// optional int32 share_count = 12;
inline bool SummaryRow::has_share_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SummaryRow::set_has_share_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SummaryRow::clear_has_share_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SummaryRow::clear_share_count() {
  share_count_ = 0;
  clear_has_share_count();
}
inline ::google::protobuf::int32 SummaryRow::share_count() const {
  // @@protoc_insertion_point(field_get:SummaryRow.share_count)
  return share_count_;
}
inline void SummaryRow::set_share_count(::google::protobuf::int32 value) {
  set_has_share_count();
  share_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.share_count)
}

// optional double distance = 13;
inline bool SummaryRow::has_distance() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SummaryRow::set_has_distance() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SummaryRow::clear_has_distance() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SummaryRow::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline double SummaryRow::distance() const {
  // @@protoc_insertion_point(field_get:SummaryRow.distance)
  return distance_;
}
inline void SummaryRow::set_distance(double value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.distance)
}

// optional int64 episode_id = 14;
inline bool SummaryRow::has_episode_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SummaryRow::set_has_episode_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SummaryRow::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SummaryRow::clear_episode_id() {
  episode_id_ = GOOGLE_LONGLONG(0);
  clear_has_episode_id();
}
inline ::google::protobuf::int64 SummaryRow::episode_id() const {
  // @@protoc_insertion_point(field_get:SummaryRow.episode_id)
  return episode_id_;
}
inline void SummaryRow::set_episode_id(::google::protobuf::int64 value) {
  set_has_episode_id();
  episode_id_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.episode_id)
}

// optional int32 original_row_index = 20;
inline bool SummaryRow::has_original_row_index() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SummaryRow::set_has_original_row_index() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SummaryRow::clear_has_original_row_index() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SummaryRow::clear_original_row_index() {
  original_row_index_ = 0;
  clear_has_original_row_index();
}
inline ::google::protobuf::int32 SummaryRow::original_row_index() const {
  // @@protoc_insertion_point(field_get:SummaryRow.original_row_index)
  return original_row_index_;
}
inline void SummaryRow::set_original_row_index(::google::protobuf::int32 value) {
  set_has_original_row_index();
  original_row_index_ = value;
  // @@protoc_insertion_point(field_set:SummaryRow.original_row_index)
}

inline const SummaryRow* SummaryRow::internal_default_instance() {
  return &SummaryRow_default_instance_.get();
}
// -------------------------------------------------------------------

// SummaryMetadata

// repeated .SummaryRow rows = 1;
inline int SummaryMetadata::rows_size() const {
  return rows_.size();
}
inline void SummaryMetadata::clear_rows() {
  rows_.Clear();
}
inline const ::SummaryRow& SummaryMetadata::rows(int index) const {
  // @@protoc_insertion_point(field_get:SummaryMetadata.rows)
  return rows_.Get(index);
}
inline ::SummaryRow* SummaryMetadata::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:SummaryMetadata.rows)
  return rows_.Mutable(index);
}
inline ::SummaryRow* SummaryMetadata::add_rows() {
  // @@protoc_insertion_point(field_add:SummaryMetadata.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SummaryRow >*
SummaryMetadata::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:SummaryMetadata.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SummaryRow >&
SummaryMetadata::rows() const {
  // @@protoc_insertion_point(field_list:SummaryMetadata.rows)
  return rows_;
}

// optional int32 unviewed_count = 6;
inline bool SummaryMetadata::has_unviewed_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SummaryMetadata::set_has_unviewed_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SummaryMetadata::clear_has_unviewed_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SummaryMetadata::clear_unviewed_count() {
  unviewed_count_ = 0;
  clear_has_unviewed_count();
}
inline ::google::protobuf::int32 SummaryMetadata::unviewed_count() const {
  // @@protoc_insertion_point(field_get:SummaryMetadata.unviewed_count)
  return unviewed_count_;
}
inline void SummaryMetadata::set_unviewed_count(::google::protobuf::int32 value) {
  set_has_unviewed_count();
  unviewed_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryMetadata.unviewed_count)
}

// optional int32 photo_count = 8;
inline bool SummaryMetadata::has_photo_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SummaryMetadata::set_has_photo_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SummaryMetadata::clear_has_photo_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SummaryMetadata::clear_photo_count() {
  photo_count_ = 0;
  clear_has_photo_count();
}
inline ::google::protobuf::int32 SummaryMetadata::photo_count() const {
  // @@protoc_insertion_point(field_get:SummaryMetadata.photo_count)
  return photo_count_;
}
inline void SummaryMetadata::set_photo_count(::google::protobuf::int32 value) {
  set_has_photo_count();
  photo_count_ = value;
  // @@protoc_insertion_point(field_set:SummaryMetadata.photo_count)
}

// optional float total_height = 9;
inline bool SummaryMetadata::has_total_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SummaryMetadata::set_has_total_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SummaryMetadata::clear_has_total_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SummaryMetadata::clear_total_height() {
  total_height_ = 0;
  clear_has_total_height();
}
inline float SummaryMetadata::total_height() const {
  // @@protoc_insertion_point(field_get:SummaryMetadata.total_height)
  return total_height_;
}
inline void SummaryMetadata::set_total_height(float value) {
  set_has_total_height();
  total_height_ = value;
  // @@protoc_insertion_point(field_set:SummaryMetadata.total_height)
}

inline const SummaryMetadata* SummaryMetadata::internal_default_instance() {
  return &SummaryMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// ViewpointSummaryMetadata_Contributor

// optional int64 user_id = 1;
inline bool ViewpointSummaryMetadata_Contributor::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewpointSummaryMetadata_Contributor::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_Contributor::user_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.Contributor.user_id)
  return user_id_;
}
inline void ViewpointSummaryMetadata_Contributor::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.Contributor.user_id)
}

// optional double update_seq = 2;
inline bool ViewpointSummaryMetadata_Contributor::has_update_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewpointSummaryMetadata_Contributor::set_has_update_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_has_update_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_update_seq() {
  update_seq_ = 0;
  clear_has_update_seq();
}
inline double ViewpointSummaryMetadata_Contributor::update_seq() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.Contributor.update_seq)
  return update_seq_;
}
inline void ViewpointSummaryMetadata_Contributor::set_update_seq(double value) {
  set_has_update_seq();
  update_seq_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.Contributor.update_seq)
}

// optional string identity = 3;
inline bool ViewpointSummaryMetadata_Contributor::has_identity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewpointSummaryMetadata_Contributor::set_has_identity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_has_identity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewpointSummaryMetadata_Contributor::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identity();
}
inline const ::std::string& ViewpointSummaryMetadata_Contributor::identity() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.Contributor.identity)
  return identity_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSummaryMetadata_Contributor::set_identity(const ::std::string& value) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.Contributor.identity)
}
inline void ViewpointSummaryMetadata_Contributor::set_identity(const char* value) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSummaryMetadata.Contributor.identity)
}
inline void ViewpointSummaryMetadata_Contributor::set_identity(const char* value, size_t size) {
  set_has_identity();
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSummaryMetadata.Contributor.identity)
}
inline ::std::string* ViewpointSummaryMetadata_Contributor::mutable_identity() {
  set_has_identity();
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.Contributor.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSummaryMetadata_Contributor::release_identity() {
  // @@protoc_insertion_point(field_release:ViewpointSummaryMetadata.Contributor.identity)
  clear_has_identity();
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSummaryMetadata_Contributor::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    set_has_identity();
  } else {
    clear_has_identity();
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSummaryMetadata.Contributor.identity)
}

inline const ViewpointSummaryMetadata_Contributor* ViewpointSummaryMetadata_Contributor::internal_default_instance() {
  return &ViewpointSummaryMetadata_Contributor_default_instance_.get();
}
// -------------------------------------------------------------------

// ViewpointSummaryMetadata_ActivityRow_Photo

// optional int64 photo_id = 1;
inline bool ViewpointSummaryMetadata_ActivityRow_Photo::has_photo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_has_photo_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_has_photo_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
  clear_has_photo_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow_Photo::photo_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.Photo.photo_id)
  return photo_id_;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_photo_id(::google::protobuf::int64 value) {
  set_has_photo_id();
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.Photo.photo_id)
}

// optional int64 episode_id = 2;
inline bool ViewpointSummaryMetadata_ActivityRow_Photo::has_episode_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_has_episode_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_episode_id() {
  episode_id_ = GOOGLE_LONGLONG(0);
  clear_has_episode_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow_Photo::episode_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.Photo.episode_id)
  return episode_id_;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_episode_id(::google::protobuf::int64 value) {
  set_has_episode_id();
  episode_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.Photo.episode_id)
}

// optional int64 parent_episode_id = 3;
inline bool ViewpointSummaryMetadata_ActivityRow_Photo::has_parent_episode_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_has_parent_episode_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_has_parent_episode_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::clear_parent_episode_id() {
  parent_episode_id_ = GOOGLE_LONGLONG(0);
  clear_has_parent_episode_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow_Photo::parent_episode_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.Photo.parent_episode_id)
  return parent_episode_id_;
}
inline void ViewpointSummaryMetadata_ActivityRow_Photo::set_parent_episode_id(::google::protobuf::int64 value) {
  set_has_parent_episode_id();
  parent_episode_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.Photo.parent_episode_id)
}

inline const ViewpointSummaryMetadata_ActivityRow_Photo* ViewpointSummaryMetadata_ActivityRow_Photo::internal_default_instance() {
  return &ViewpointSummaryMetadata_ActivityRow_Photo_default_instance_.get();
}
// -------------------------------------------------------------------

// ViewpointSummaryMetadata_ActivityRow

// optional int64 activity_id = 1;
inline bool ViewpointSummaryMetadata_ActivityRow::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_activity_id() {
  activity_id_ = GOOGLE_LONGLONG(0);
  clear_has_activity_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow::activity_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.activity_id)
  return activity_id_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_activity_id(::google::protobuf::int64 value) {
  set_has_activity_id();
  activity_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.activity_id)
}

// repeated int64 user_ids = 2;
inline int ViewpointSummaryMetadata_ActivityRow::user_ids_size() const {
  return user_ids_.size();
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_user_ids() {
  user_ids_.Clear();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.user_ids)
  return user_ids_.Get(index);
}
inline void ViewpointSummaryMetadata_ActivityRow::set_user_ids(int index, ::google::protobuf::int64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.user_ids)
}
inline void ViewpointSummaryMetadata_ActivityRow::add_user_ids(::google::protobuf::int64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ViewpointSummaryMetadata.ActivityRow.user_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ViewpointSummaryMetadata_ActivityRow::user_ids() const {
  // @@protoc_insertion_point(field_list:ViewpointSummaryMetadata.ActivityRow.user_ids)
  return user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ViewpointSummaryMetadata_ActivityRow::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:ViewpointSummaryMetadata.ActivityRow.user_ids)
  return &user_ids_;
}

// repeated string user_identities = 14;
inline int ViewpointSummaryMetadata_ActivityRow::user_identities_size() const {
  return user_identities_.size();
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_user_identities() {
  user_identities_.Clear();
}
inline const ::std::string& ViewpointSummaryMetadata_ActivityRow::user_identities(int index) const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.user_identities)
  return user_identities_.Get(index);
}
inline ::std::string* ViewpointSummaryMetadata_ActivityRow::mutable_user_identities(int index) {
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.ActivityRow.user_identities)
  return user_identities_.Mutable(index);
}
inline void ViewpointSummaryMetadata_ActivityRow::set_user_identities(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.user_identities)
  user_identities_.Mutable(index)->assign(value);
}
inline void ViewpointSummaryMetadata_ActivityRow::set_user_identities(int index, const char* value) {
  user_identities_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ViewpointSummaryMetadata.ActivityRow.user_identities)
}
inline void ViewpointSummaryMetadata_ActivityRow::set_user_identities(int index, const char* value, size_t size) {
  user_identities_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ViewpointSummaryMetadata.ActivityRow.user_identities)
}
inline ::std::string* ViewpointSummaryMetadata_ActivityRow::add_user_identities() {
  // @@protoc_insertion_point(field_add_mutable:ViewpointSummaryMetadata.ActivityRow.user_identities)
  return user_identities_.Add();
}
inline void ViewpointSummaryMetadata_ActivityRow::add_user_identities(const ::std::string& value) {
  user_identities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ViewpointSummaryMetadata.ActivityRow.user_identities)
}
inline void ViewpointSummaryMetadata_ActivityRow::add_user_identities(const char* value) {
  user_identities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ViewpointSummaryMetadata.ActivityRow.user_identities)
}
inline void ViewpointSummaryMetadata_ActivityRow::add_user_identities(const char* value, size_t size) {
  user_identities_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ViewpointSummaryMetadata.ActivityRow.user_identities)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ViewpointSummaryMetadata_ActivityRow::user_identities() const {
  // @@protoc_insertion_point(field_list:ViewpointSummaryMetadata.ActivityRow.user_identities)
  return user_identities_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ViewpointSummaryMetadata_ActivityRow::mutable_user_identities() {
  // @@protoc_insertion_point(field_mutable_list:ViewpointSummaryMetadata.ActivityRow.user_identities)
  return &user_identities_;
}

// optional double timestamp = 3;
inline bool ViewpointSummaryMetadata_ActivityRow::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double ViewpointSummaryMetadata_ActivityRow::timestamp() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.timestamp)
  return timestamp_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.timestamp)
}

// optional .ViewpointSummaryMetadata.ActivityRowType type = 4;
inline bool ViewpointSummaryMetadata_ActivityRow::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ViewpointSummaryMetadata_ActivityRowType ViewpointSummaryMetadata_ActivityRow::type() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.type)
  return static_cast< ::ViewpointSummaryMetadata_ActivityRowType >(type_);
}
inline void ViewpointSummaryMetadata_ActivityRow::set_type(::ViewpointSummaryMetadata_ActivityRowType value) {
  assert(::ViewpointSummaryMetadata_ActivityRowType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.type)
}

// optional float height = 5;
inline bool ViewpointSummaryMetadata_ActivityRow::has_height() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_height() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_height() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float ViewpointSummaryMetadata_ActivityRow::height() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.height)
  return height_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.height)
}

// optional float position = 6;
inline bool ViewpointSummaryMetadata_ActivityRow::has_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline float ViewpointSummaryMetadata_ActivityRow::position() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.position)
  return position_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_position(float value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.position)
}

// optional int32 row_count = 7;
inline bool ViewpointSummaryMetadata_ActivityRow::has_row_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_row_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_row_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_row_count() {
  row_count_ = 0;
  clear_has_row_count();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata_ActivityRow::row_count() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.row_count)
  return row_count_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_row_count(::google::protobuf::int32 value) {
  set_has_row_count();
  row_count_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.row_count)
}

// optional int64 update_seq = 8;
inline bool ViewpointSummaryMetadata_ActivityRow::has_update_seq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_update_seq() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_update_seq() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_update_seq() {
  update_seq_ = GOOGLE_LONGLONG(0);
  clear_has_update_seq();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata_ActivityRow::update_seq() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.update_seq)
  return update_seq_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_update_seq(::google::protobuf::int64 value) {
  set_has_update_seq();
  update_seq_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.update_seq)
}

// optional bool pending = 9;
inline bool ViewpointSummaryMetadata_ActivityRow::has_pending() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_pending() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_pending() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_pending() {
  pending_ = false;
  clear_has_pending();
}
inline bool ViewpointSummaryMetadata_ActivityRow::pending() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.pending)
  return pending_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_pending(bool value) {
  set_has_pending();
  pending_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.pending)
}

// optional int32 thread_type = 10;
inline bool ViewpointSummaryMetadata_ActivityRow::has_thread_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_thread_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_thread_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_thread_type() {
  thread_type_ = 0;
  clear_has_thread_type();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata_ActivityRow::thread_type() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.thread_type)
  return thread_type_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_thread_type(::google::protobuf::int32 value) {
  set_has_thread_type();
  thread_type_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.thread_type)
}

// repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;
inline int ViewpointSummaryMetadata_ActivityRow::photos_size() const {
  return photos_.size();
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_photos() {
  photos_.Clear();
}
inline const ::ViewpointSummaryMetadata_ActivityRow_Photo& ViewpointSummaryMetadata_ActivityRow::photos(int index) const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.photos)
  return photos_.Get(index);
}
inline ::ViewpointSummaryMetadata_ActivityRow_Photo* ViewpointSummaryMetadata_ActivityRow::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.ActivityRow.photos)
  return photos_.Mutable(index);
}
inline ::ViewpointSummaryMetadata_ActivityRow_Photo* ViewpointSummaryMetadata_ActivityRow::add_photos() {
  // @@protoc_insertion_point(field_add:ViewpointSummaryMetadata.ActivityRow.photos)
  return photos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow_Photo >*
ViewpointSummaryMetadata_ActivityRow::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:ViewpointSummaryMetadata.ActivityRow.photos)
  return &photos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow_Photo >&
ViewpointSummaryMetadata_ActivityRow::photos() const {
  // @@protoc_insertion_point(field_list:ViewpointSummaryMetadata.ActivityRow.photos)
  return photos_;
}

// optional bool is_comment = 12;
inline bool ViewpointSummaryMetadata_ActivityRow::has_is_comment() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_is_comment() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_is_comment() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_is_comment() {
  is_comment_ = false;
  clear_has_is_comment();
}
inline bool ViewpointSummaryMetadata_ActivityRow::is_comment() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.is_comment)
  return is_comment_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_is_comment(bool value) {
  set_has_is_comment();
  is_comment_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.is_comment)
}

// optional bool is_provisional_hint = 13;
inline bool ViewpointSummaryMetadata_ActivityRow::has_is_provisional_hint() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_has_is_provisional_hint() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_has_is_provisional_hint() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ViewpointSummaryMetadata_ActivityRow::clear_is_provisional_hint() {
  is_provisional_hint_ = false;
  clear_has_is_provisional_hint();
}
inline bool ViewpointSummaryMetadata_ActivityRow::is_provisional_hint() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.ActivityRow.is_provisional_hint)
  return is_provisional_hint_;
}
inline void ViewpointSummaryMetadata_ActivityRow::set_is_provisional_hint(bool value) {
  set_has_is_provisional_hint();
  is_provisional_hint_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.ActivityRow.is_provisional_hint)
}

inline const ViewpointSummaryMetadata_ActivityRow* ViewpointSummaryMetadata_ActivityRow::internal_default_instance() {
  return &ViewpointSummaryMetadata_ActivityRow_default_instance_.get();
}
// -------------------------------------------------------------------

// ViewpointSummaryMetadata

// optional int64 viewpoint_id = 1;
inline bool ViewpointSummaryMetadata::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewpointSummaryMetadata::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewpointSummaryMetadata::clear_viewpoint_id() {
  viewpoint_id_ = GOOGLE_LONGLONG(0);
  clear_has_viewpoint_id();
}
inline ::google::protobuf::int64 ViewpointSummaryMetadata::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.viewpoint_id)
  return viewpoint_id_;
}
inline void ViewpointSummaryMetadata::set_viewpoint_id(::google::protobuf::int64 value) {
  set_has_viewpoint_id();
  viewpoint_id_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.viewpoint_id)
}

// repeated .ViewpointSummaryMetadata.Contributor contributors = 2;
inline int ViewpointSummaryMetadata::contributors_size() const {
  return contributors_.size();
}
inline void ViewpointSummaryMetadata::clear_contributors() {
  contributors_.Clear();
}
inline const ::ViewpointSummaryMetadata_Contributor& ViewpointSummaryMetadata::contributors(int index) const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.contributors)
  return contributors_.Get(index);
}
inline ::ViewpointSummaryMetadata_Contributor* ViewpointSummaryMetadata::mutable_contributors(int index) {
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.contributors)
  return contributors_.Mutable(index);
}
inline ::ViewpointSummaryMetadata_Contributor* ViewpointSummaryMetadata::add_contributors() {
  // @@protoc_insertion_point(field_add:ViewpointSummaryMetadata.contributors)
  return contributors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_Contributor >*
ViewpointSummaryMetadata::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:ViewpointSummaryMetadata.contributors)
  return &contributors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_Contributor >&
ViewpointSummaryMetadata::contributors() const {
  // @@protoc_insertion_point(field_list:ViewpointSummaryMetadata.contributors)
  return contributors_;
}

// optional .DayPhoto cover_photo = 3;
inline bool ViewpointSummaryMetadata::has_cover_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_cover_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewpointSummaryMetadata::clear_has_cover_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewpointSummaryMetadata::clear_cover_photo() {
  if (cover_photo_ != NULL) cover_photo_->::DayPhoto::Clear();
  clear_has_cover_photo();
}
inline const ::DayPhoto& ViewpointSummaryMetadata::cover_photo() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.cover_photo)
  return cover_photo_ != NULL ? *cover_photo_
                         : *::DayPhoto::internal_default_instance();
}
inline ::DayPhoto* ViewpointSummaryMetadata::mutable_cover_photo() {
  set_has_cover_photo();
  if (cover_photo_ == NULL) {
    cover_photo_ = new ::DayPhoto;
  }
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.cover_photo)
  return cover_photo_;
}
inline ::DayPhoto* ViewpointSummaryMetadata::release_cover_photo() {
  // @@protoc_insertion_point(field_release:ViewpointSummaryMetadata.cover_photo)
  clear_has_cover_photo();
  ::DayPhoto* temp = cover_photo_;
  cover_photo_ = NULL;
  return temp;
}
inline void ViewpointSummaryMetadata::set_allocated_cover_photo(::DayPhoto* cover_photo) {
  delete cover_photo_;
  cover_photo_ = cover_photo;
  if (cover_photo) {
    set_has_cover_photo();
  } else {
    clear_has_cover_photo();
  }
  // @@protoc_insertion_point(field_set_allocated:ViewpointSummaryMetadata.cover_photo)
}

// repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;
inline int ViewpointSummaryMetadata::activities_size() const {
  return activities_.size();
}
inline void ViewpointSummaryMetadata::clear_activities() {
  activities_.Clear();
}
inline const ::ViewpointSummaryMetadata_ActivityRow& ViewpointSummaryMetadata::activities(int index) const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.activities)
  return activities_.Get(index);
}
inline ::ViewpointSummaryMetadata_ActivityRow* ViewpointSummaryMetadata::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:ViewpointSummaryMetadata.activities)
  return activities_.Mutable(index);
}
inline ::ViewpointSummaryMetadata_ActivityRow* ViewpointSummaryMetadata::add_activities() {
  // @@protoc_insertion_point(field_add:ViewpointSummaryMetadata.activities)
  return activities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow >*
ViewpointSummaryMetadata::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:ViewpointSummaryMetadata.activities)
  return &activities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ViewpointSummaryMetadata_ActivityRow >&
ViewpointSummaryMetadata::activities() const {
  // @@protoc_insertion_point(field_list:ViewpointSummaryMetadata.activities)
  return activities_;
}

// optional double earliest_timestamp = 5;
inline bool ViewpointSummaryMetadata::has_earliest_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_earliest_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ViewpointSummaryMetadata::clear_has_earliest_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ViewpointSummaryMetadata::clear_earliest_timestamp() {
  earliest_timestamp_ = 0;
  clear_has_earliest_timestamp();
}
inline double ViewpointSummaryMetadata::earliest_timestamp() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.earliest_timestamp)
  return earliest_timestamp_;
}
inline void ViewpointSummaryMetadata::set_earliest_timestamp(double value) {
  set_has_earliest_timestamp();
  earliest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.earliest_timestamp)
}

// optional double latest_timestamp = 6;
inline bool ViewpointSummaryMetadata::has_latest_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_latest_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ViewpointSummaryMetadata::clear_has_latest_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ViewpointSummaryMetadata::clear_latest_timestamp() {
  latest_timestamp_ = 0;
  clear_has_latest_timestamp();
}
inline double ViewpointSummaryMetadata::latest_timestamp() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.latest_timestamp)
  return latest_timestamp_;
}
inline void ViewpointSummaryMetadata::set_latest_timestamp(double value) {
  set_has_latest_timestamp();
  latest_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.latest_timestamp)
}

// optional int32 photo_count = 7;
inline bool ViewpointSummaryMetadata::has_photo_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_photo_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ViewpointSummaryMetadata::clear_has_photo_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ViewpointSummaryMetadata::clear_photo_count() {
  photo_count_ = 0;
  clear_has_photo_count();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata::photo_count() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.photo_count)
  return photo_count_;
}
inline void ViewpointSummaryMetadata::set_photo_count(::google::protobuf::int32 value) {
  set_has_photo_count();
  photo_count_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.photo_count)
}

// optional int32 comment_count = 8;
inline bool ViewpointSummaryMetadata::has_comment_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_comment_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ViewpointSummaryMetadata::clear_has_comment_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ViewpointSummaryMetadata::clear_comment_count() {
  comment_count_ = 0;
  clear_has_comment_count();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata::comment_count() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.comment_count)
  return comment_count_;
}
inline void ViewpointSummaryMetadata::set_comment_count(::google::protobuf::int32 value) {
  set_has_comment_count();
  comment_count_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.comment_count)
}

// optional int32 new_photo_count = 9;
inline bool ViewpointSummaryMetadata::has_new_photo_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_new_photo_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ViewpointSummaryMetadata::clear_has_new_photo_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ViewpointSummaryMetadata::clear_new_photo_count() {
  new_photo_count_ = 0;
  clear_has_new_photo_count();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata::new_photo_count() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.new_photo_count)
  return new_photo_count_;
}
inline void ViewpointSummaryMetadata::set_new_photo_count(::google::protobuf::int32 value) {
  set_has_new_photo_count();
  new_photo_count_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.new_photo_count)
}

// optional int32 new_comment_count = 10;
inline bool ViewpointSummaryMetadata::has_new_comment_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_new_comment_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ViewpointSummaryMetadata::clear_has_new_comment_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ViewpointSummaryMetadata::clear_new_comment_count() {
  new_comment_count_ = 0;
  clear_has_new_comment_count();
}
inline ::google::protobuf::int32 ViewpointSummaryMetadata::new_comment_count() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.new_comment_count)
  return new_comment_count_;
}
inline void ViewpointSummaryMetadata::set_new_comment_count(::google::protobuf::int32 value) {
  set_has_new_comment_count();
  new_comment_count_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.new_comment_count)
}

// optional bool provisional = 11;
inline bool ViewpointSummaryMetadata::has_provisional() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_provisional() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ViewpointSummaryMetadata::clear_has_provisional() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ViewpointSummaryMetadata::clear_provisional() {
  provisional_ = false;
  clear_has_provisional();
}
inline bool ViewpointSummaryMetadata::provisional() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.provisional)
  return provisional_;
}
inline void ViewpointSummaryMetadata::set_provisional(bool value) {
  set_has_provisional();
  provisional_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.provisional)
}

// optional float scroll_to_row = 12;
inline bool ViewpointSummaryMetadata::has_scroll_to_row() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ViewpointSummaryMetadata::set_has_scroll_to_row() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ViewpointSummaryMetadata::clear_has_scroll_to_row() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ViewpointSummaryMetadata::clear_scroll_to_row() {
  scroll_to_row_ = 0;
  clear_has_scroll_to_row();
}
inline float ViewpointSummaryMetadata::scroll_to_row() const {
  // @@protoc_insertion_point(field_get:ViewpointSummaryMetadata.scroll_to_row)
  return scroll_to_row_;
}
inline void ViewpointSummaryMetadata::set_scroll_to_row(float value) {
  set_has_scroll_to_row();
  scroll_to_row_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSummaryMetadata.scroll_to_row)
}

inline const ViewpointSummaryMetadata* ViewpointSummaryMetadata::internal_default_instance() {
  return &ViewpointSummaryMetadata_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DayContributor_ContributorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DayContributor_ContributorType>() {
  return ::DayContributor_ContributorType_descriptor();
}
template <> struct is_proto_enum< ::TrapdoorMetadata_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TrapdoorMetadata_Type>() {
  return ::TrapdoorMetadata_Type_descriptor();
}
template <> struct is_proto_enum< ::SummaryRow_RowType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SummaryRow_RowType>() {
  return ::SummaryRow_RowType_descriptor();
}
template <> struct is_proto_enum< ::ViewpointSummaryMetadata_ActivityRowType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ViewpointSummaryMetadata_ActivityRowType>() {
  return ::ViewpointSummaryMetadata_ActivityRowType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DayMetadata_2eproto__INCLUDED
