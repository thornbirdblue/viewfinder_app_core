// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Server.proto

#ifndef PROTOBUF_Server_2eproto__INCLUDED
#define PROTOBUF_Server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ActivityMetadata.pb.h"
#include "CommentMetadata.pb.h"
#include "ContactMetadata.pb.h"
#include "EpisodeMetadata.pb.h"
#include "InvalidateMetadata.pb.h"
#include "PhotoMetadata.pb.h"
#include "SubscriptionMetadata.pb.h"
#include "SystemMessage.pb.h"
#include "UserMetadata.pb.h"
#include "ViewpointMetadata.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Server_2eproto();
void protobuf_InitDefaults_Server_2eproto();
void protobuf_AssignDesc_Server_2eproto();
void protobuf_ShutdownFile_Server_2eproto();

class AccountSettingsMetadata;
class AuthResponse;
class ErrorResponse;
class ErrorResponse_Error;
class Headers;
class OpHeaders;
class PhotoUpdate;
class PingResponse;
class QueryContactsResponse;
class QueryEpisodesResponse;
class QueryEpisodesResponse_Episode;
class QueryFollowedResponse;
class QueryNotificationsResponse;
class QueryNotificationsResponse_InlineInvalidation;
class QueryNotificationsResponse_InlineViewpoint;
class QueryNotificationsResponse_Notification;
class QueryUsersResponse;
class QueryUsersResponse_User;
class QueryViewpointsResponse;
class QueryViewpointsResponse_FollowerMetadata;
class QueryViewpointsResponse_Viewpoint;
class ResolveContactsResponse;
class RsvpResponse;
class RsvpResponse_Rsvp;
class ServerOperation;
class ServerOperation_RemovePhotos;
class UploadContactsResponse;
class UploadEpisodeResponse;

enum ErrorResponse_ErrorId {
  ErrorResponse_ErrorId_OK = 0,
  ErrorResponse_ErrorId_UNKNOWN = 1,
  ErrorResponse_ErrorId_INVALID_JSON_REQUEST = 2,
  ErrorResponse_ErrorId_NO_USER_ACCOUNT = 3,
  ErrorResponse_ErrorId_UPDATE_PWD_NOT_CONFIRMED = 4,
  ErrorResponse_ErrorId_ALREADY_REGISTERED = 5,
  ErrorResponse_ErrorId_NETWORK_UNAVAILABLE = 6
};
bool ErrorResponse_ErrorId_IsValid(int value);
const ErrorResponse_ErrorId ErrorResponse_ErrorId_ErrorId_MIN = ErrorResponse_ErrorId_OK;
const ErrorResponse_ErrorId ErrorResponse_ErrorId_ErrorId_MAX = ErrorResponse_ErrorId_NETWORK_UNAVAILABLE;
const int ErrorResponse_ErrorId_ErrorId_ARRAYSIZE = ErrorResponse_ErrorId_ErrorId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorResponse_ErrorId_descriptor();
inline const ::std::string& ErrorResponse_ErrorId_Name(ErrorResponse_ErrorId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorResponse_ErrorId_descriptor(), value);
}
inline bool ErrorResponse_ErrorId_Parse(
    const ::std::string& name, ErrorResponse_ErrorId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorResponse_ErrorId>(
    ErrorResponse_ErrorId_descriptor(), name, value);
}
// ===================================================================

class Headers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Headers) */ {
 public:
  Headers();
  virtual ~Headers();

  Headers(const Headers& from);

  inline Headers& operator=(const Headers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Headers& default_instance();

  static const Headers* internal_default_instance();

  void Swap(Headers* other);

  // implements Message ----------------------------------------------

  inline Headers* New() const { return New(NULL); }

  Headers* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Headers& from);
  void MergeFrom(const Headers& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Headers* other);
  void UnsafeMergeFrom(const Headers& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // optional int32 min_required_version = 2;
  bool has_min_required_version() const;
  void clear_min_required_version();
  static const int kMinRequiredVersionFieldNumber = 2;
  ::google::protobuf::int32 min_required_version() const;
  void set_min_required_version(::google::protobuf::int32 value);

  // optional string op_id = 3;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 3;
  const ::std::string& op_id() const;
  void set_op_id(const ::std::string& value);
  void set_op_id(const char* value);
  void set_op_id(const char* value, size_t size);
  ::std::string* mutable_op_id();
  ::std::string* release_op_id();
  void set_allocated_op_id(::std::string* op_id);

  // @@protoc_insertion_point(class_scope:Headers)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_min_required_version();
  inline void clear_has_min_required_version();
  inline void set_has_op_id();
  inline void clear_has_op_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr op_id_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 min_required_version_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Headers> Headers_default_instance_;

// -------------------------------------------------------------------

class PhotoUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhotoUpdate) */ {
 public:
  PhotoUpdate();
  virtual ~PhotoUpdate();

  PhotoUpdate(const PhotoUpdate& from);

  inline PhotoUpdate& operator=(const PhotoUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoUpdate& default_instance();

  static const PhotoUpdate* internal_default_instance();

  void Swap(PhotoUpdate* other);

  // implements Message ----------------------------------------------

  inline PhotoUpdate* New() const { return New(NULL); }

  PhotoUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhotoUpdate& from);
  void MergeFrom(const PhotoUpdate& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhotoUpdate* other);
  void UnsafeMergeFrom(const PhotoUpdate& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PhotoMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  const ::PhotoMetadata& metadata() const;
  ::PhotoMetadata* mutable_metadata();
  ::PhotoMetadata* release_metadata();
  void set_allocated_metadata(::PhotoMetadata* metadata);

  // optional string tn_get_url = 2;
  bool has_tn_get_url() const;
  void clear_tn_get_url();
  static const int kTnGetUrlFieldNumber = 2;
  const ::std::string& tn_get_url() const;
  void set_tn_get_url(const ::std::string& value);
  void set_tn_get_url(const char* value);
  void set_tn_get_url(const char* value, size_t size);
  ::std::string* mutable_tn_get_url();
  ::std::string* release_tn_get_url();
  void set_allocated_tn_get_url(::std::string* tn_get_url);

  // optional string tn_put_url = 3;
  bool has_tn_put_url() const;
  void clear_tn_put_url();
  static const int kTnPutUrlFieldNumber = 3;
  const ::std::string& tn_put_url() const;
  void set_tn_put_url(const ::std::string& value);
  void set_tn_put_url(const char* value);
  void set_tn_put_url(const char* value, size_t size);
  ::std::string* mutable_tn_put_url();
  ::std::string* release_tn_put_url();
  void set_allocated_tn_put_url(::std::string* tn_put_url);

  // optional string med_get_url = 4;
  bool has_med_get_url() const;
  void clear_med_get_url();
  static const int kMedGetUrlFieldNumber = 4;
  const ::std::string& med_get_url() const;
  void set_med_get_url(const ::std::string& value);
  void set_med_get_url(const char* value);
  void set_med_get_url(const char* value, size_t size);
  ::std::string* mutable_med_get_url();
  ::std::string* release_med_get_url();
  void set_allocated_med_get_url(::std::string* med_get_url);

  // optional string med_put_url = 5;
  bool has_med_put_url() const;
  void clear_med_put_url();
  static const int kMedPutUrlFieldNumber = 5;
  const ::std::string& med_put_url() const;
  void set_med_put_url(const ::std::string& value);
  void set_med_put_url(const char* value);
  void set_med_put_url(const char* value, size_t size);
  ::std::string* mutable_med_put_url();
  ::std::string* release_med_put_url();
  void set_allocated_med_put_url(::std::string* med_put_url);

  // optional string full_get_url = 6;
  bool has_full_get_url() const;
  void clear_full_get_url();
  static const int kFullGetUrlFieldNumber = 6;
  const ::std::string& full_get_url() const;
  void set_full_get_url(const ::std::string& value);
  void set_full_get_url(const char* value);
  void set_full_get_url(const char* value, size_t size);
  ::std::string* mutable_full_get_url();
  ::std::string* release_full_get_url();
  void set_allocated_full_get_url(::std::string* full_get_url);

  // optional string full_put_url = 7;
  bool has_full_put_url() const;
  void clear_full_put_url();
  static const int kFullPutUrlFieldNumber = 7;
  const ::std::string& full_put_url() const;
  void set_full_put_url(const ::std::string& value);
  void set_full_put_url(const char* value);
  void set_full_put_url(const char* value, size_t size);
  ::std::string* mutable_full_put_url();
  ::std::string* release_full_put_url();
  void set_allocated_full_put_url(::std::string* full_put_url);

  // optional string orig_get_url = 8;
  bool has_orig_get_url() const;
  void clear_orig_get_url();
  static const int kOrigGetUrlFieldNumber = 8;
  const ::std::string& orig_get_url() const;
  void set_orig_get_url(const ::std::string& value);
  void set_orig_get_url(const char* value);
  void set_orig_get_url(const char* value, size_t size);
  ::std::string* mutable_orig_get_url();
  ::std::string* release_orig_get_url();
  void set_allocated_orig_get_url(::std::string* orig_get_url);

  // optional string orig_put_url = 9;
  bool has_orig_put_url() const;
  void clear_orig_put_url();
  static const int kOrigPutUrlFieldNumber = 9;
  const ::std::string& orig_put_url() const;
  void set_orig_put_url(const ::std::string& value);
  void set_orig_put_url(const char* value);
  void set_orig_put_url(const char* value, size_t size);
  ::std::string* mutable_orig_put_url();
  ::std::string* release_orig_put_url();
  void set_allocated_orig_put_url(::std::string* orig_put_url);

  // @@protoc_insertion_point(class_scope:PhotoUpdate)
 private:
  inline void set_has_metadata();
  inline void clear_has_metadata();
  inline void set_has_tn_get_url();
  inline void clear_has_tn_get_url();
  inline void set_has_tn_put_url();
  inline void clear_has_tn_put_url();
  inline void set_has_med_get_url();
  inline void clear_has_med_get_url();
  inline void set_has_med_put_url();
  inline void clear_has_med_put_url();
  inline void set_has_full_get_url();
  inline void clear_has_full_get_url();
  inline void set_has_full_put_url();
  inline void clear_has_full_put_url();
  inline void set_has_orig_get_url();
  inline void clear_has_orig_get_url();
  inline void set_has_orig_put_url();
  inline void clear_has_orig_put_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tn_get_url_;
  ::google::protobuf::internal::ArenaStringPtr tn_put_url_;
  ::google::protobuf::internal::ArenaStringPtr med_get_url_;
  ::google::protobuf::internal::ArenaStringPtr med_put_url_;
  ::google::protobuf::internal::ArenaStringPtr full_get_url_;
  ::google::protobuf::internal::ArenaStringPtr full_put_url_;
  ::google::protobuf::internal::ArenaStringPtr orig_get_url_;
  ::google::protobuf::internal::ArenaStringPtr orig_put_url_;
  ::PhotoMetadata* metadata_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhotoUpdate> PhotoUpdate_default_instance_;

// -------------------------------------------------------------------

class AccountSettingsMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountSettingsMetadata) */ {
 public:
  AccountSettingsMetadata();
  virtual ~AccountSettingsMetadata();

  AccountSettingsMetadata(const AccountSettingsMetadata& from);

  inline AccountSettingsMetadata& operator=(const AccountSettingsMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountSettingsMetadata& default_instance();

  static const AccountSettingsMetadata* internal_default_instance();

  void Swap(AccountSettingsMetadata* other);

  // implements Message ----------------------------------------------

  inline AccountSettingsMetadata* New() const { return New(NULL); }

  AccountSettingsMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountSettingsMetadata& from);
  void MergeFrom(const AccountSettingsMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountSettingsMetadata* other);
  void UnsafeMergeFrom(const AccountSettingsMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email_alerts = 1;
  bool has_email_alerts() const;
  void clear_email_alerts();
  static const int kEmailAlertsFieldNumber = 1;
  const ::std::string& email_alerts() const;
  void set_email_alerts(const ::std::string& value);
  void set_email_alerts(const char* value);
  void set_email_alerts(const char* value, size_t size);
  ::std::string* mutable_email_alerts();
  ::std::string* release_email_alerts();
  void set_allocated_email_alerts(::std::string* email_alerts);

  // repeated string storage_options = 2;
  int storage_options_size() const;
  void clear_storage_options();
  static const int kStorageOptionsFieldNumber = 2;
  const ::std::string& storage_options(int index) const;
  ::std::string* mutable_storage_options(int index);
  void set_storage_options(int index, const ::std::string& value);
  void set_storage_options(int index, const char* value);
  void set_storage_options(int index, const char* value, size_t size);
  ::std::string* add_storage_options();
  void add_storage_options(const ::std::string& value);
  void add_storage_options(const char* value);
  void add_storage_options(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& storage_options() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_storage_options();

  // @@protoc_insertion_point(class_scope:AccountSettingsMetadata)
 private:
  inline void set_has_email_alerts();
  inline void clear_has_email_alerts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> storage_options_;
  ::google::protobuf::internal::ArenaStringPtr email_alerts_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AccountSettingsMetadata> AccountSettingsMetadata_default_instance_;

// -------------------------------------------------------------------

class AuthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AuthResponse) */ {
 public:
  AuthResponse();
  virtual ~AuthResponse();

  AuthResponse(const AuthResponse& from);

  inline AuthResponse& operator=(const AuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthResponse& default_instance();

  static const AuthResponse* internal_default_instance();

  void Swap(AuthResponse* other);

  // implements Message ----------------------------------------------

  inline AuthResponse* New() const { return New(NULL); }

  AuthResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthResponse& from);
  void MergeFrom(const AuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthResponse* other);
  void UnsafeMergeFrom(const AuthResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // optional int64 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // optional int64 device_id = 3;
  bool has_device_id() const;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 3;
  ::google::protobuf::int64 device_id() const;
  void set_device_id(::google::protobuf::int64 value);

  // optional int32 token_digits = 4;
  bool has_token_digits() const;
  void clear_token_digits();
  static const int kTokenDigitsFieldNumber = 4;
  ::google::protobuf::int32 token_digits() const;
  void set_token_digits(::google::protobuf::int32 value);

  // optional string cookie = 5;
  bool has_cookie() const;
  void clear_cookie();
  static const int kCookieFieldNumber = 5;
  const ::std::string& cookie() const;
  void set_cookie(const ::std::string& value);
  void set_cookie(const char* value);
  void set_cookie(const char* value, size_t size);
  ::std::string* mutable_cookie();
  ::std::string* release_cookie();
  void set_allocated_cookie(::std::string* cookie);

  // @@protoc_insertion_point(class_scope:AuthResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_device_id();
  inline void clear_has_device_id();
  inline void set_has_token_digits();
  inline void clear_has_token_digits();
  inline void set_has_cookie();
  inline void clear_has_cookie();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cookie_;
  ::Headers* headers_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int64 device_id_;
  ::google::protobuf::int32 token_digits_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthResponse> AuthResponse_default_instance_;

// -------------------------------------------------------------------

class ErrorResponse_Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ErrorResponse.Error) */ {
 public:
  ErrorResponse_Error();
  virtual ~ErrorResponse_Error();

  ErrorResponse_Error(const ErrorResponse_Error& from);

  inline ErrorResponse_Error& operator=(const ErrorResponse_Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorResponse_Error& default_instance();

  static const ErrorResponse_Error* internal_default_instance();

  void Swap(ErrorResponse_Error* other);

  // implements Message ----------------------------------------------

  inline ErrorResponse_Error* New() const { return New(NULL); }

  ErrorResponse_Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorResponse_Error& from);
  void MergeFrom(const ErrorResponse_Error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorResponse_Error* other);
  void UnsafeMergeFrom(const ErrorResponse_Error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method = 1;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
  bool has_error_id() const;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 3;
  ::ErrorResponse_ErrorId error_id() const;
  void set_error_id(::ErrorResponse_ErrorId value);

  // @@protoc_insertion_point(class_scope:ErrorResponse.Error)
 private:
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_error_id();
  inline void clear_has_error_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int error_id_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse_Error> ErrorResponse_Error_default_instance_;

// -------------------------------------------------------------------

class ErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ErrorResponse) */ {
 public:
  ErrorResponse();
  virtual ~ErrorResponse();

  ErrorResponse(const ErrorResponse& from);

  inline ErrorResponse& operator=(const ErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorResponse& default_instance();

  static const ErrorResponse* internal_default_instance();

  void Swap(ErrorResponse* other);

  // implements Message ----------------------------------------------

  inline ErrorResponse* New() const { return New(NULL); }

  ErrorResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorResponse& from);
  void MergeFrom(const ErrorResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorResponse* other);
  void UnsafeMergeFrom(const ErrorResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ErrorResponse_Error Error;

  typedef ErrorResponse_ErrorId ErrorId;
  static const ErrorId OK =
    ErrorResponse_ErrorId_OK;
  static const ErrorId UNKNOWN =
    ErrorResponse_ErrorId_UNKNOWN;
  static const ErrorId INVALID_JSON_REQUEST =
    ErrorResponse_ErrorId_INVALID_JSON_REQUEST;
  static const ErrorId NO_USER_ACCOUNT =
    ErrorResponse_ErrorId_NO_USER_ACCOUNT;
  static const ErrorId UPDATE_PWD_NOT_CONFIRMED =
    ErrorResponse_ErrorId_UPDATE_PWD_NOT_CONFIRMED;
  static const ErrorId ALREADY_REGISTERED =
    ErrorResponse_ErrorId_ALREADY_REGISTERED;
  static const ErrorId NETWORK_UNAVAILABLE =
    ErrorResponse_ErrorId_NETWORK_UNAVAILABLE;
  static inline bool ErrorId_IsValid(int value) {
    return ErrorResponse_ErrorId_IsValid(value);
  }
  static const ErrorId ErrorId_MIN =
    ErrorResponse_ErrorId_ErrorId_MIN;
  static const ErrorId ErrorId_MAX =
    ErrorResponse_ErrorId_ErrorId_MAX;
  static const int ErrorId_ARRAYSIZE =
    ErrorResponse_ErrorId_ErrorId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorId_descriptor() {
    return ErrorResponse_ErrorId_descriptor();
  }
  static inline const ::std::string& ErrorId_Name(ErrorId value) {
    return ErrorResponse_ErrorId_Name(value);
  }
  static inline bool ErrorId_Parse(const ::std::string& name,
      ErrorId* value) {
    return ErrorResponse_ErrorId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ErrorResponse.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::ErrorResponse_Error& error() const;
  ::ErrorResponse_Error* mutable_error();
  ::ErrorResponse_Error* release_error();
  void set_allocated_error(::ErrorResponse_Error* error);

  // @@protoc_insertion_point(class_scope:ErrorResponse)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ErrorResponse_Error* error_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse> ErrorResponse_default_instance_;

// -------------------------------------------------------------------

class PingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PingResponse) */ {
 public:
  PingResponse();
  virtual ~PingResponse();

  PingResponse(const PingResponse& from);

  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingResponse& default_instance();

  static const PingResponse* internal_default_instance();

  void Swap(PingResponse* other);

  // implements Message ----------------------------------------------

  inline PingResponse* New() const { return New(NULL); }

  PingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingResponse& from);
  void MergeFrom(const PingResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingResponse* other);
  void UnsafeMergeFrom(const PingResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SystemMessage message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::SystemMessage& message() const;
  ::SystemMessage* mutable_message();
  ::SystemMessage* release_message();
  void set_allocated_message(::SystemMessage* message);

  // @@protoc_insertion_point(class_scope:PingResponse)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SystemMessage* message_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PingResponse> PingResponse_default_instance_;

// -------------------------------------------------------------------

class QueryContactsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryContactsResponse) */ {
 public:
  QueryContactsResponse();
  virtual ~QueryContactsResponse();

  QueryContactsResponse(const QueryContactsResponse& from);

  inline QueryContactsResponse& operator=(const QueryContactsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryContactsResponse& default_instance();

  static const QueryContactsResponse* internal_default_instance();

  void Swap(QueryContactsResponse* other);

  // implements Message ----------------------------------------------

  inline QueryContactsResponse* New() const { return New(NULL); }

  QueryContactsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryContactsResponse& from);
  void MergeFrom(const QueryContactsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryContactsResponse* other);
  void UnsafeMergeFrom(const QueryContactsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // optional string last_key = 2;
  bool has_last_key() const;
  void clear_last_key();
  static const int kLastKeyFieldNumber = 2;
  const ::std::string& last_key() const;
  void set_last_key(const ::std::string& value);
  void set_last_key(const char* value);
  void set_last_key(const char* value, size_t size);
  ::std::string* mutable_last_key();
  ::std::string* release_last_key();
  void set_allocated_last_key(::std::string* last_key);

  // repeated .ContactMetadata contacts = 3;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 3;
  const ::ContactMetadata& contacts(int index) const;
  ::ContactMetadata* mutable_contacts(int index);
  ::ContactMetadata* add_contacts();
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
      mutable_contacts();
  const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:QueryContactsResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();
  inline void set_has_last_key();
  inline void clear_has_last_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata > contacts_;
  ::google::protobuf::internal::ArenaStringPtr last_key_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryContactsResponse> QueryContactsResponse_default_instance_;

// -------------------------------------------------------------------

class QueryEpisodesResponse_Episode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryEpisodesResponse.Episode) */ {
 public:
  QueryEpisodesResponse_Episode();
  virtual ~QueryEpisodesResponse_Episode();

  QueryEpisodesResponse_Episode(const QueryEpisodesResponse_Episode& from);

  inline QueryEpisodesResponse_Episode& operator=(const QueryEpisodesResponse_Episode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEpisodesResponse_Episode& default_instance();

  static const QueryEpisodesResponse_Episode* internal_default_instance();

  void Swap(QueryEpisodesResponse_Episode* other);

  // implements Message ----------------------------------------------

  inline QueryEpisodesResponse_Episode* New() const { return New(NULL); }

  QueryEpisodesResponse_Episode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryEpisodesResponse_Episode& from);
  void MergeFrom(const QueryEpisodesResponse_Episode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryEpisodesResponse_Episode* other);
  void UnsafeMergeFrom(const QueryEpisodesResponse_Episode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string last_key = 1;
  bool has_last_key() const;
  void clear_last_key();
  static const int kLastKeyFieldNumber = 1;
  const ::std::string& last_key() const;
  void set_last_key(const ::std::string& value);
  void set_last_key(const char* value);
  void set_last_key(const char* value, size_t size);
  ::std::string* mutable_last_key();
  ::std::string* release_last_key();
  void set_allocated_last_key(::std::string* last_key);

  // optional .EpisodeMetadata metadata = 2;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::EpisodeMetadata& metadata() const;
  ::EpisodeMetadata* mutable_metadata();
  ::EpisodeMetadata* release_metadata();
  void set_allocated_metadata(::EpisodeMetadata* metadata);

  // repeated .PhotoUpdate photos = 3;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 3;
  const ::PhotoUpdate& photos(int index) const;
  ::PhotoUpdate* mutable_photos(int index);
  ::PhotoUpdate* add_photos();
  ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
      mutable_photos();
  const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
      photos() const;

  // @@protoc_insertion_point(class_scope:QueryEpisodesResponse.Episode)
 private:
  inline void set_has_last_key();
  inline void clear_has_last_key();
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PhotoUpdate > photos_;
  ::google::protobuf::internal::ArenaStringPtr last_key_;
  ::EpisodeMetadata* metadata_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryEpisodesResponse_Episode> QueryEpisodesResponse_Episode_default_instance_;

// -------------------------------------------------------------------

class QueryEpisodesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryEpisodesResponse) */ {
 public:
  QueryEpisodesResponse();
  virtual ~QueryEpisodesResponse();

  QueryEpisodesResponse(const QueryEpisodesResponse& from);

  inline QueryEpisodesResponse& operator=(const QueryEpisodesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEpisodesResponse& default_instance();

  static const QueryEpisodesResponse* internal_default_instance();

  void Swap(QueryEpisodesResponse* other);

  // implements Message ----------------------------------------------

  inline QueryEpisodesResponse* New() const { return New(NULL); }

  QueryEpisodesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryEpisodesResponse& from);
  void MergeFrom(const QueryEpisodesResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryEpisodesResponse* other);
  void UnsafeMergeFrom(const QueryEpisodesResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryEpisodesResponse_Episode Episode;

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated .QueryEpisodesResponse.Episode episodes = 2;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 2;
  const ::QueryEpisodesResponse_Episode& episodes(int index) const;
  ::QueryEpisodesResponse_Episode* mutable_episodes(int index);
  ::QueryEpisodesResponse_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >&
      episodes() const;

  // @@protoc_insertion_point(class_scope:QueryEpisodesResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode > episodes_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryEpisodesResponse> QueryEpisodesResponse_default_instance_;

// -------------------------------------------------------------------

class QueryFollowedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryFollowedResponse) */ {
 public:
  QueryFollowedResponse();
  virtual ~QueryFollowedResponse();

  QueryFollowedResponse(const QueryFollowedResponse& from);

  inline QueryFollowedResponse& operator=(const QueryFollowedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFollowedResponse& default_instance();

  static const QueryFollowedResponse* internal_default_instance();

  void Swap(QueryFollowedResponse* other);

  // implements Message ----------------------------------------------

  inline QueryFollowedResponse* New() const { return New(NULL); }

  QueryFollowedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryFollowedResponse& from);
  void MergeFrom(const QueryFollowedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryFollowedResponse* other);
  void UnsafeMergeFrom(const QueryFollowedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // optional string last_key = 2;
  bool has_last_key() const;
  void clear_last_key();
  static const int kLastKeyFieldNumber = 2;
  const ::std::string& last_key() const;
  void set_last_key(const ::std::string& value);
  void set_last_key(const char* value);
  void set_last_key(const char* value, size_t size);
  ::std::string* mutable_last_key();
  ::std::string* release_last_key();
  void set_allocated_last_key(::std::string* last_key);

  // repeated .ViewpointMetadata viewpoints = 3;
  int viewpoints_size() const;
  void clear_viewpoints();
  static const int kViewpointsFieldNumber = 3;
  const ::ViewpointMetadata& viewpoints(int index) const;
  ::ViewpointMetadata* mutable_viewpoints(int index);
  ::ViewpointMetadata* add_viewpoints();
  ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >*
      mutable_viewpoints();
  const ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >&
      viewpoints() const;

  // @@protoc_insertion_point(class_scope:QueryFollowedResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();
  inline void set_has_last_key();
  inline void clear_has_last_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata > viewpoints_;
  ::google::protobuf::internal::ArenaStringPtr last_key_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryFollowedResponse> QueryFollowedResponse_default_instance_;

// -------------------------------------------------------------------

class QueryNotificationsResponse_InlineViewpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryNotificationsResponse.InlineViewpoint) */ {
 public:
  QueryNotificationsResponse_InlineViewpoint();
  virtual ~QueryNotificationsResponse_InlineViewpoint();

  QueryNotificationsResponse_InlineViewpoint(const QueryNotificationsResponse_InlineViewpoint& from);

  inline QueryNotificationsResponse_InlineViewpoint& operator=(const QueryNotificationsResponse_InlineViewpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryNotificationsResponse_InlineViewpoint& default_instance();

  static const QueryNotificationsResponse_InlineViewpoint* internal_default_instance();

  void Swap(QueryNotificationsResponse_InlineViewpoint* other);

  // implements Message ----------------------------------------------

  inline QueryNotificationsResponse_InlineViewpoint* New() const { return New(NULL); }

  QueryNotificationsResponse_InlineViewpoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryNotificationsResponse_InlineViewpoint& from);
  void MergeFrom(const QueryNotificationsResponse_InlineViewpoint& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryNotificationsResponse_InlineViewpoint* other);
  void UnsafeMergeFrom(const QueryNotificationsResponse_InlineViewpoint& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string viewpoint_id = 1;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 1;
  const ::std::string& viewpoint_id() const;
  void set_viewpoint_id(const ::std::string& value);
  void set_viewpoint_id(const char* value);
  void set_viewpoint_id(const char* value, size_t size);
  ::std::string* mutable_viewpoint_id();
  ::std::string* release_viewpoint_id();
  void set_allocated_viewpoint_id(::std::string* viewpoint_id);

  // optional int64 update_seq = 2;
  bool has_update_seq() const;
  void clear_update_seq();
  static const int kUpdateSeqFieldNumber = 2;
  ::google::protobuf::int64 update_seq() const;
  void set_update_seq(::google::protobuf::int64 value);

  // optional int64 viewed_seq = 3;
  bool has_viewed_seq() const;
  void clear_viewed_seq();
  static const int kViewedSeqFieldNumber = 3;
  ::google::protobuf::int64 viewed_seq() const;
  void set_viewed_seq(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:QueryNotificationsResponse.InlineViewpoint)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_update_seq();
  inline void clear_has_update_seq();
  inline void set_has_viewed_seq();
  inline void clear_has_viewed_seq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr viewpoint_id_;
  ::google::protobuf::int64 update_seq_;
  ::google::protobuf::int64 viewed_seq_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_InlineViewpoint> QueryNotificationsResponse_InlineViewpoint_default_instance_;

// -------------------------------------------------------------------

class QueryNotificationsResponse_InlineInvalidation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryNotificationsResponse.InlineInvalidation) */ {
 public:
  QueryNotificationsResponse_InlineInvalidation();
  virtual ~QueryNotificationsResponse_InlineInvalidation();

  QueryNotificationsResponse_InlineInvalidation(const QueryNotificationsResponse_InlineInvalidation& from);

  inline QueryNotificationsResponse_InlineInvalidation& operator=(const QueryNotificationsResponse_InlineInvalidation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryNotificationsResponse_InlineInvalidation& default_instance();

  static const QueryNotificationsResponse_InlineInvalidation* internal_default_instance();

  void Swap(QueryNotificationsResponse_InlineInvalidation* other);

  // implements Message ----------------------------------------------

  inline QueryNotificationsResponse_InlineInvalidation* New() const { return New(NULL); }

  QueryNotificationsResponse_InlineInvalidation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryNotificationsResponse_InlineInvalidation& from);
  void MergeFrom(const QueryNotificationsResponse_InlineInvalidation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryNotificationsResponse_InlineInvalidation* other);
  void UnsafeMergeFrom(const QueryNotificationsResponse_InlineInvalidation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActivityMetadata activity = 1;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 1;
  const ::ActivityMetadata& activity() const;
  ::ActivityMetadata* mutable_activity();
  ::ActivityMetadata* release_activity();
  void set_allocated_activity(::ActivityMetadata* activity);

  // optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
  bool has_viewpoint() const;
  void clear_viewpoint();
  static const int kViewpointFieldNumber = 2;
  const ::QueryNotificationsResponse_InlineViewpoint& viewpoint() const;
  ::QueryNotificationsResponse_InlineViewpoint* mutable_viewpoint();
  ::QueryNotificationsResponse_InlineViewpoint* release_viewpoint();
  void set_allocated_viewpoint(::QueryNotificationsResponse_InlineViewpoint* viewpoint);

  // optional .CommentMetadata comment = 3;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 3;
  const ::CommentMetadata& comment() const;
  ::CommentMetadata* mutable_comment();
  ::CommentMetadata* release_comment();
  void set_allocated_comment(::CommentMetadata* comment);

  // optional .UsageMetadata usage = 4;
  bool has_usage() const;
  void clear_usage();
  static const int kUsageFieldNumber = 4;
  const ::UsageMetadata& usage() const;
  ::UsageMetadata* mutable_usage();
  ::UsageMetadata* release_usage();
  void set_allocated_usage(::UsageMetadata* usage);

  // @@protoc_insertion_point(class_scope:QueryNotificationsResponse.InlineInvalidation)
 private:
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_viewpoint();
  inline void clear_has_viewpoint();
  inline void set_has_comment();
  inline void clear_has_comment();
  inline void set_has_usage();
  inline void clear_has_usage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityMetadata* activity_;
  ::QueryNotificationsResponse_InlineViewpoint* viewpoint_;
  ::CommentMetadata* comment_;
  ::UsageMetadata* usage_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_InlineInvalidation> QueryNotificationsResponse_InlineInvalidation_default_instance_;

// -------------------------------------------------------------------

class QueryNotificationsResponse_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryNotificationsResponse.Notification) */ {
 public:
  QueryNotificationsResponse_Notification();
  virtual ~QueryNotificationsResponse_Notification();

  QueryNotificationsResponse_Notification(const QueryNotificationsResponse_Notification& from);

  inline QueryNotificationsResponse_Notification& operator=(const QueryNotificationsResponse_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryNotificationsResponse_Notification& default_instance();

  static const QueryNotificationsResponse_Notification* internal_default_instance();

  void Swap(QueryNotificationsResponse_Notification* other);

  // implements Message ----------------------------------------------

  inline QueryNotificationsResponse_Notification* New() const { return New(NULL); }

  QueryNotificationsResponse_Notification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryNotificationsResponse_Notification& from);
  void MergeFrom(const QueryNotificationsResponse_Notification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryNotificationsResponse_Notification* other);
  void UnsafeMergeFrom(const QueryNotificationsResponse_Notification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 notification_id = 1;
  bool has_notification_id() const;
  void clear_notification_id();
  static const int kNotificationIdFieldNumber = 1;
  ::google::protobuf::int64 notification_id() const;
  void set_notification_id(::google::protobuf::int64 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 sender_id = 3;
  bool has_sender_id() const;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 3;
  ::google::protobuf::int64 sender_id() const;
  void set_sender_id(::google::protobuf::int64 value);

  // optional string op_id = 7;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 7;
  const ::std::string& op_id() const;
  void set_op_id(const ::std::string& value);
  void set_op_id(const char* value);
  void set_op_id(const char* value, size_t size);
  ::std::string* mutable_op_id();
  ::std::string* release_op_id();
  void set_allocated_op_id(::std::string* op_id);

  // optional double timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // optional .InvalidateMetadata invalidate = 5;
  bool has_invalidate() const;
  void clear_invalidate();
  static const int kInvalidateFieldNumber = 5;
  const ::InvalidateMetadata& invalidate() const;
  ::InvalidateMetadata* mutable_invalidate();
  ::InvalidateMetadata* release_invalidate();
  void set_allocated_invalidate(::InvalidateMetadata* invalidate);

  // optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
  bool has_inline_invalidate() const;
  void clear_inline_invalidate();
  static const int kInlineInvalidateFieldNumber = 6;
  const ::QueryNotificationsResponse_InlineInvalidation& inline_invalidate() const;
  ::QueryNotificationsResponse_InlineInvalidation* mutable_inline_invalidate();
  ::QueryNotificationsResponse_InlineInvalidation* release_inline_invalidate();
  void set_allocated_inline_invalidate(::QueryNotificationsResponse_InlineInvalidation* inline_invalidate);

  // @@protoc_insertion_point(class_scope:QueryNotificationsResponse.Notification)
 private:
  inline void set_has_notification_id();
  inline void clear_has_notification_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_op_id();
  inline void clear_has_op_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_invalidate();
  inline void clear_has_invalidate();
  inline void set_has_inline_invalidate();
  inline void clear_has_inline_invalidate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr op_id_;
  ::InvalidateMetadata* invalidate_;
  ::QueryNotificationsResponse_InlineInvalidation* inline_invalidate_;
  ::google::protobuf::int64 notification_id_;
  ::google::protobuf::int64 sender_id_;
  double timestamp_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse_Notification> QueryNotificationsResponse_Notification_default_instance_;

// -------------------------------------------------------------------

class QueryNotificationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryNotificationsResponse) */ {
 public:
  QueryNotificationsResponse();
  virtual ~QueryNotificationsResponse();

  QueryNotificationsResponse(const QueryNotificationsResponse& from);

  inline QueryNotificationsResponse& operator=(const QueryNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryNotificationsResponse& default_instance();

  static const QueryNotificationsResponse* internal_default_instance();

  void Swap(QueryNotificationsResponse* other);

  // implements Message ----------------------------------------------

  inline QueryNotificationsResponse* New() const { return New(NULL); }

  QueryNotificationsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryNotificationsResponse& from);
  void MergeFrom(const QueryNotificationsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryNotificationsResponse* other);
  void UnsafeMergeFrom(const QueryNotificationsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryNotificationsResponse_InlineViewpoint InlineViewpoint;
  typedef QueryNotificationsResponse_InlineInvalidation InlineInvalidation;
  typedef QueryNotificationsResponse_Notification Notification;

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // optional string last_key = 2;
  bool has_last_key() const;
  void clear_last_key();
  static const int kLastKeyFieldNumber = 2;
  const ::std::string& last_key() const;
  void set_last_key(const ::std::string& value);
  void set_last_key(const char* value);
  void set_last_key(const char* value, size_t size);
  ::std::string* mutable_last_key();
  ::std::string* release_last_key();
  void set_allocated_last_key(::std::string* last_key);

  // repeated .QueryNotificationsResponse.Notification notifications = 3;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 3;
  const ::QueryNotificationsResponse_Notification& notifications(int index) const;
  ::QueryNotificationsResponse_Notification* mutable_notifications(int index);
  ::QueryNotificationsResponse_Notification* add_notifications();
  ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >*
      mutable_notifications();
  const ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >&
      notifications() const;

  // optional double retry_after = 4;
  bool has_retry_after() const;
  void clear_retry_after();
  static const int kRetryAfterFieldNumber = 4;
  double retry_after() const;
  void set_retry_after(double value);

  // @@protoc_insertion_point(class_scope:QueryNotificationsResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();
  inline void set_has_last_key();
  inline void clear_has_last_key();
  inline void set_has_retry_after();
  inline void clear_has_retry_after();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification > notifications_;
  ::google::protobuf::internal::ArenaStringPtr last_key_;
  ::Headers* headers_;
  double retry_after_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryNotificationsResponse> QueryNotificationsResponse_default_instance_;

// -------------------------------------------------------------------

class QueryUsersResponse_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryUsersResponse.User) */ {
 public:
  QueryUsersResponse_User();
  virtual ~QueryUsersResponse_User();

  QueryUsersResponse_User(const QueryUsersResponse_User& from);

  inline QueryUsersResponse_User& operator=(const QueryUsersResponse_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUsersResponse_User& default_instance();

  static const QueryUsersResponse_User* internal_default_instance();

  void Swap(QueryUsersResponse_User* other);

  // implements Message ----------------------------------------------

  inline QueryUsersResponse_User* New() const { return New(NULL); }

  QueryUsersResponse_User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUsersResponse_User& from);
  void MergeFrom(const QueryUsersResponse_User& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryUsersResponse_User* other);
  void UnsafeMergeFrom(const QueryUsersResponse_User& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactMetadata contact = 3;
  bool has_contact() const;
  void clear_contact();
  static const int kContactFieldNumber = 3;
  const ::ContactMetadata& contact() const;
  ::ContactMetadata* mutable_contact();
  ::ContactMetadata* release_contact();
  void set_allocated_contact(::ContactMetadata* contact);

  // repeated .ServerSubscriptionMetadata subscriptions = 4;
  int subscriptions_size() const;
  void clear_subscriptions();
  static const int kSubscriptionsFieldNumber = 4;
  const ::ServerSubscriptionMetadata& subscriptions(int index) const;
  ::ServerSubscriptionMetadata* mutable_subscriptions(int index);
  ::ServerSubscriptionMetadata* add_subscriptions();
  ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >*
      mutable_subscriptions();
  const ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >&
      subscriptions() const;

  // optional .AccountSettingsMetadata account_settings = 5;
  bool has_account_settings() const;
  void clear_account_settings();
  static const int kAccountSettingsFieldNumber = 5;
  const ::AccountSettingsMetadata& account_settings() const;
  ::AccountSettingsMetadata* mutable_account_settings();
  ::AccountSettingsMetadata* release_account_settings();
  void set_allocated_account_settings(::AccountSettingsMetadata* account_settings);

  // optional bool no_password = 7;
  bool has_no_password() const;
  void clear_no_password();
  static const int kNoPasswordFieldNumber = 7;
  bool no_password() const;
  void set_no_password(bool value);

  // @@protoc_insertion_point(class_scope:QueryUsersResponse.User)
 private:
  inline void set_has_contact();
  inline void clear_has_contact();
  inline void set_has_account_settings();
  inline void clear_has_account_settings();
  inline void set_has_no_password();
  inline void clear_has_no_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata > subscriptions_;
  ::ContactMetadata* contact_;
  ::AccountSettingsMetadata* account_settings_;
  bool no_password_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryUsersResponse_User> QueryUsersResponse_User_default_instance_;

// -------------------------------------------------------------------

class QueryUsersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryUsersResponse) */ {
 public:
  QueryUsersResponse();
  virtual ~QueryUsersResponse();

  QueryUsersResponse(const QueryUsersResponse& from);

  inline QueryUsersResponse& operator=(const QueryUsersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUsersResponse& default_instance();

  static const QueryUsersResponse* internal_default_instance();

  void Swap(QueryUsersResponse* other);

  // implements Message ----------------------------------------------

  inline QueryUsersResponse* New() const { return New(NULL); }

  QueryUsersResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUsersResponse& from);
  void MergeFrom(const QueryUsersResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryUsersResponse* other);
  void UnsafeMergeFrom(const QueryUsersResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryUsersResponse_User User;

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated group User = 2 { ... };
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::QueryUsersResponse_User& user(int index) const;
  ::QueryUsersResponse_User* mutable_user(int index);
  ::QueryUsersResponse_User* add_user();
  ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >&
      user() const;

  // @@protoc_insertion_point(class_scope:QueryUsersResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User > user_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryUsersResponse> QueryUsersResponse_default_instance_;

// -------------------------------------------------------------------

class QueryViewpointsResponse_FollowerMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryViewpointsResponse.FollowerMetadata) */ {
 public:
  QueryViewpointsResponse_FollowerMetadata();
  virtual ~QueryViewpointsResponse_FollowerMetadata();

  QueryViewpointsResponse_FollowerMetadata(const QueryViewpointsResponse_FollowerMetadata& from);

  inline QueryViewpointsResponse_FollowerMetadata& operator=(const QueryViewpointsResponse_FollowerMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryViewpointsResponse_FollowerMetadata& default_instance();

  static const QueryViewpointsResponse_FollowerMetadata* internal_default_instance();

  void Swap(QueryViewpointsResponse_FollowerMetadata* other);

  // implements Message ----------------------------------------------

  inline QueryViewpointsResponse_FollowerMetadata* New() const { return New(NULL); }

  QueryViewpointsResponse_FollowerMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryViewpointsResponse_FollowerMetadata& from);
  void MergeFrom(const QueryViewpointsResponse_FollowerMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryViewpointsResponse_FollowerMetadata* other);
  void UnsafeMergeFrom(const QueryViewpointsResponse_FollowerMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 follower_id = 1;
  bool has_follower_id() const;
  void clear_follower_id();
  static const int kFollowerIdFieldNumber = 1;
  ::google::protobuf::int64 follower_id() const;
  void set_follower_id(::google::protobuf::int64 value);

  // optional bool label_removed = 2;
  bool has_label_removed() const;
  void clear_label_removed();
  static const int kLabelRemovedFieldNumber = 2;
  bool label_removed() const;
  void set_label_removed(bool value);

  // optional bool label_unrevivable = 3;
  bool has_label_unrevivable() const;
  void clear_label_unrevivable();
  static const int kLabelUnrevivableFieldNumber = 3;
  bool label_unrevivable() const;
  void set_label_unrevivable(bool value);

  // @@protoc_insertion_point(class_scope:QueryViewpointsResponse.FollowerMetadata)
 private:
  inline void set_has_follower_id();
  inline void clear_has_follower_id();
  inline void set_has_label_removed();
  inline void clear_has_label_removed();
  inline void set_has_label_unrevivable();
  inline void clear_has_label_unrevivable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 follower_id_;
  bool label_removed_;
  bool label_unrevivable_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse_FollowerMetadata> QueryViewpointsResponse_FollowerMetadata_default_instance_;

// -------------------------------------------------------------------

class QueryViewpointsResponse_Viewpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryViewpointsResponse.Viewpoint) */ {
 public:
  QueryViewpointsResponse_Viewpoint();
  virtual ~QueryViewpointsResponse_Viewpoint();

  QueryViewpointsResponse_Viewpoint(const QueryViewpointsResponse_Viewpoint& from);

  inline QueryViewpointsResponse_Viewpoint& operator=(const QueryViewpointsResponse_Viewpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryViewpointsResponse_Viewpoint& default_instance();

  static const QueryViewpointsResponse_Viewpoint* internal_default_instance();

  void Swap(QueryViewpointsResponse_Viewpoint* other);

  // implements Message ----------------------------------------------

  inline QueryViewpointsResponse_Viewpoint* New() const { return New(NULL); }

  QueryViewpointsResponse_Viewpoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryViewpointsResponse_Viewpoint& from);
  void MergeFrom(const QueryViewpointsResponse_Viewpoint& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryViewpointsResponse_Viewpoint* other);
  void UnsafeMergeFrom(const QueryViewpointsResponse_Viewpoint& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string follower_last_key = 1;
  bool has_follower_last_key() const;
  void clear_follower_last_key();
  static const int kFollowerLastKeyFieldNumber = 1;
  const ::std::string& follower_last_key() const;
  void set_follower_last_key(const ::std::string& value);
  void set_follower_last_key(const char* value);
  void set_follower_last_key(const char* value, size_t size);
  ::std::string* mutable_follower_last_key();
  ::std::string* release_follower_last_key();
  void set_allocated_follower_last_key(::std::string* follower_last_key);

  // optional string activity_last_key = 2;
  bool has_activity_last_key() const;
  void clear_activity_last_key();
  static const int kActivityLastKeyFieldNumber = 2;
  const ::std::string& activity_last_key() const;
  void set_activity_last_key(const ::std::string& value);
  void set_activity_last_key(const char* value);
  void set_activity_last_key(const char* value, size_t size);
  ::std::string* mutable_activity_last_key();
  ::std::string* release_activity_last_key();
  void set_allocated_activity_last_key(::std::string* activity_last_key);

  // optional string episode_last_key = 3;
  bool has_episode_last_key() const;
  void clear_episode_last_key();
  static const int kEpisodeLastKeyFieldNumber = 3;
  const ::std::string& episode_last_key() const;
  void set_episode_last_key(const ::std::string& value);
  void set_episode_last_key(const char* value);
  void set_episode_last_key(const char* value, size_t size);
  ::std::string* mutable_episode_last_key();
  ::std::string* release_episode_last_key();
  void set_allocated_episode_last_key(::std::string* episode_last_key);

  // optional string comment_last_key = 4;
  bool has_comment_last_key() const;
  void clear_comment_last_key();
  static const int kCommentLastKeyFieldNumber = 4;
  const ::std::string& comment_last_key() const;
  void set_comment_last_key(const ::std::string& value);
  void set_comment_last_key(const char* value);
  void set_comment_last_key(const char* value, size_t size);
  ::std::string* mutable_comment_last_key();
  ::std::string* release_comment_last_key();
  void set_allocated_comment_last_key(::std::string* comment_last_key);

  // optional .ViewpointMetadata metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::ViewpointMetadata& metadata() const;
  ::ViewpointMetadata* mutable_metadata();
  ::ViewpointMetadata* release_metadata();
  void set_allocated_metadata(::ViewpointMetadata* metadata);

  // repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
  int followers_size() const;
  void clear_followers();
  static const int kFollowersFieldNumber = 6;
  const ::QueryViewpointsResponse_FollowerMetadata& followers(int index) const;
  ::QueryViewpointsResponse_FollowerMetadata* mutable_followers(int index);
  ::QueryViewpointsResponse_FollowerMetadata* add_followers();
  ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >*
      mutable_followers();
  const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >&
      followers() const;

  // repeated .ActivityMetadata activities = 7;
  int activities_size() const;
  void clear_activities();
  static const int kActivitiesFieldNumber = 7;
  const ::ActivityMetadata& activities(int index) const;
  ::ActivityMetadata* mutable_activities(int index);
  ::ActivityMetadata* add_activities();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata >*
      mutable_activities();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata >&
      activities() const;

  // repeated .EpisodeMetadata episodes = 8;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 8;
  const ::EpisodeMetadata& episodes(int index) const;
  ::EpisodeMetadata* mutable_episodes(int index);
  ::EpisodeMetadata* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >&
      episodes() const;

  // repeated .CommentMetadata comments = 9;
  int comments_size() const;
  void clear_comments();
  static const int kCommentsFieldNumber = 9;
  const ::CommentMetadata& comments(int index) const;
  ::CommentMetadata* mutable_comments(int index);
  ::CommentMetadata* add_comments();
  ::google::protobuf::RepeatedPtrField< ::CommentMetadata >*
      mutable_comments();
  const ::google::protobuf::RepeatedPtrField< ::CommentMetadata >&
      comments() const;

  // @@protoc_insertion_point(class_scope:QueryViewpointsResponse.Viewpoint)
 private:
  inline void set_has_follower_last_key();
  inline void clear_has_follower_last_key();
  inline void set_has_activity_last_key();
  inline void clear_has_activity_last_key();
  inline void set_has_episode_last_key();
  inline void clear_has_episode_last_key();
  inline void set_has_comment_last_key();
  inline void clear_has_comment_last_key();
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata > followers_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata > activities_;
  ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata > episodes_;
  ::google::protobuf::RepeatedPtrField< ::CommentMetadata > comments_;
  ::google::protobuf::internal::ArenaStringPtr follower_last_key_;
  ::google::protobuf::internal::ArenaStringPtr activity_last_key_;
  ::google::protobuf::internal::ArenaStringPtr episode_last_key_;
  ::google::protobuf::internal::ArenaStringPtr comment_last_key_;
  ::ViewpointMetadata* metadata_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse_Viewpoint> QueryViewpointsResponse_Viewpoint_default_instance_;

// -------------------------------------------------------------------

class QueryViewpointsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryViewpointsResponse) */ {
 public:
  QueryViewpointsResponse();
  virtual ~QueryViewpointsResponse();

  QueryViewpointsResponse(const QueryViewpointsResponse& from);

  inline QueryViewpointsResponse& operator=(const QueryViewpointsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryViewpointsResponse& default_instance();

  static const QueryViewpointsResponse* internal_default_instance();

  void Swap(QueryViewpointsResponse* other);

  // implements Message ----------------------------------------------

  inline QueryViewpointsResponse* New() const { return New(NULL); }

  QueryViewpointsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryViewpointsResponse& from);
  void MergeFrom(const QueryViewpointsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryViewpointsResponse* other);
  void UnsafeMergeFrom(const QueryViewpointsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryViewpointsResponse_FollowerMetadata FollowerMetadata;
  typedef QueryViewpointsResponse_Viewpoint Viewpoint;

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
  int viewpoints_size() const;
  void clear_viewpoints();
  static const int kViewpointsFieldNumber = 2;
  const ::QueryViewpointsResponse_Viewpoint& viewpoints(int index) const;
  ::QueryViewpointsResponse_Viewpoint* mutable_viewpoints(int index);
  ::QueryViewpointsResponse_Viewpoint* add_viewpoints();
  ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >*
      mutable_viewpoints();
  const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >&
      viewpoints() const;

  // @@protoc_insertion_point(class_scope:QueryViewpointsResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint > viewpoints_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryViewpointsResponse> QueryViewpointsResponse_default_instance_;

// -------------------------------------------------------------------

class ResolveContactsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResolveContactsResponse) */ {
 public:
  ResolveContactsResponse();
  virtual ~ResolveContactsResponse();

  ResolveContactsResponse(const ResolveContactsResponse& from);

  inline ResolveContactsResponse& operator=(const ResolveContactsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResolveContactsResponse& default_instance();

  static const ResolveContactsResponse* internal_default_instance();

  void Swap(ResolveContactsResponse* other);

  // implements Message ----------------------------------------------

  inline ResolveContactsResponse* New() const { return New(NULL); }

  ResolveContactsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResolveContactsResponse& from);
  void MergeFrom(const ResolveContactsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResolveContactsResponse* other);
  void UnsafeMergeFrom(const ResolveContactsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated .ContactMetadata contacts = 2;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 2;
  const ::ContactMetadata& contacts(int index) const;
  ::ContactMetadata* mutable_contacts(int index);
  ::ContactMetadata* add_contacts();
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
      mutable_contacts();
  const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:ResolveContactsResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata > contacts_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResolveContactsResponse> ResolveContactsResponse_default_instance_;

// -------------------------------------------------------------------

class RsvpResponse_Rsvp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RsvpResponse.Rsvp) */ {
 public:
  RsvpResponse_Rsvp();
  virtual ~RsvpResponse_Rsvp();

  RsvpResponse_Rsvp(const RsvpResponse_Rsvp& from);

  inline RsvpResponse_Rsvp& operator=(const RsvpResponse_Rsvp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RsvpResponse_Rsvp& default_instance();

  static const RsvpResponse_Rsvp* internal_default_instance();

  void Swap(RsvpResponse_Rsvp* other);

  // implements Message ----------------------------------------------

  inline RsvpResponse_Rsvp* New() const { return New(NULL); }

  RsvpResponse_Rsvp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RsvpResponse_Rsvp& from);
  void MergeFrom(const RsvpResponse_Rsvp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RsvpResponse_Rsvp* other);
  void UnsafeMergeFrom(const RsvpResponse_Rsvp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  const ::std::string& episode_id() const;
  void set_episode_id(const ::std::string& value);
  void set_episode_id(const char* value);
  void set_episode_id(const char* value, size_t size);
  ::std::string* mutable_episode_id();
  ::std::string* release_episode_id();
  void set_allocated_episode_id(::std::string* episode_id);

  // repeated string labels = 2;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 2;
  const ::std::string& labels(int index) const;
  ::std::string* mutable_labels(int index);
  void set_labels(int index, const ::std::string& value);
  void set_labels(int index, const char* value);
  void set_labels(int index, const char* value, size_t size);
  ::std::string* add_labels();
  void add_labels(const ::std::string& value);
  void add_labels(const char* value);
  void add_labels(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_labels();

  // @@protoc_insertion_point(class_scope:RsvpResponse.Rsvp)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> labels_;
  ::google::protobuf::internal::ArenaStringPtr episode_id_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RsvpResponse_Rsvp> RsvpResponse_Rsvp_default_instance_;

// -------------------------------------------------------------------

class RsvpResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RsvpResponse) */ {
 public:
  RsvpResponse();
  virtual ~RsvpResponse();

  RsvpResponse(const RsvpResponse& from);

  inline RsvpResponse& operator=(const RsvpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RsvpResponse& default_instance();

  static const RsvpResponse* internal_default_instance();

  void Swap(RsvpResponse* other);

  // implements Message ----------------------------------------------

  inline RsvpResponse* New() const { return New(NULL); }

  RsvpResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RsvpResponse& from);
  void MergeFrom(const RsvpResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RsvpResponse* other);
  void UnsafeMergeFrom(const RsvpResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RsvpResponse_Rsvp Rsvp;

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated .RsvpResponse.Rsvp rsvps = 2;
  int rsvps_size() const;
  void clear_rsvps();
  static const int kRsvpsFieldNumber = 2;
  const ::RsvpResponse_Rsvp& rsvps(int index) const;
  ::RsvpResponse_Rsvp* mutable_rsvps(int index);
  ::RsvpResponse_Rsvp* add_rsvps();
  ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >*
      mutable_rsvps();
  const ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >&
      rsvps() const;

  // @@protoc_insertion_point(class_scope:RsvpResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp > rsvps_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RsvpResponse> RsvpResponse_default_instance_;

// -------------------------------------------------------------------

class UploadContactsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UploadContactsResponse) */ {
 public:
  UploadContactsResponse();
  virtual ~UploadContactsResponse();

  UploadContactsResponse(const UploadContactsResponse& from);

  inline UploadContactsResponse& operator=(const UploadContactsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadContactsResponse& default_instance();

  static const UploadContactsResponse* internal_default_instance();

  void Swap(UploadContactsResponse* other);

  // implements Message ----------------------------------------------

  inline UploadContactsResponse* New() const { return New(NULL); }

  UploadContactsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadContactsResponse& from);
  void MergeFrom(const UploadContactsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadContactsResponse* other);
  void UnsafeMergeFrom(const UploadContactsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated string contact_ids = 2;
  int contact_ids_size() const;
  void clear_contact_ids();
  static const int kContactIdsFieldNumber = 2;
  const ::std::string& contact_ids(int index) const;
  ::std::string* mutable_contact_ids(int index);
  void set_contact_ids(int index, const ::std::string& value);
  void set_contact_ids(int index, const char* value);
  void set_contact_ids(int index, const char* value, size_t size);
  ::std::string* add_contact_ids();
  void add_contact_ids(const ::std::string& value);
  void add_contact_ids(const char* value);
  void add_contact_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& contact_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contact_ids();

  // @@protoc_insertion_point(class_scope:UploadContactsResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> contact_ids_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadContactsResponse> UploadContactsResponse_default_instance_;

// -------------------------------------------------------------------

class UploadEpisodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UploadEpisodeResponse) */ {
 public:
  UploadEpisodeResponse();
  virtual ~UploadEpisodeResponse();

  UploadEpisodeResponse(const UploadEpisodeResponse& from);

  inline UploadEpisodeResponse& operator=(const UploadEpisodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadEpisodeResponse& default_instance();

  static const UploadEpisodeResponse* internal_default_instance();

  void Swap(UploadEpisodeResponse* other);

  // implements Message ----------------------------------------------

  inline UploadEpisodeResponse* New() const { return New(NULL); }

  UploadEpisodeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadEpisodeResponse& from);
  void MergeFrom(const UploadEpisodeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadEpisodeResponse* other);
  void UnsafeMergeFrom(const UploadEpisodeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Headers headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::Headers& headers() const;
  ::Headers* mutable_headers();
  ::Headers* release_headers();
  void set_allocated_headers(::Headers* headers);

  // repeated .PhotoUpdate photos = 2;
  int photos_size() const;
  void clear_photos();
  static const int kPhotosFieldNumber = 2;
  const ::PhotoUpdate& photos(int index) const;
  ::PhotoUpdate* mutable_photos(int index);
  ::PhotoUpdate* add_photos();
  ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
      mutable_photos();
  const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
      photos() const;

  // @@protoc_insertion_point(class_scope:UploadEpisodeResponse)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PhotoUpdate > photos_;
  ::Headers* headers_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadEpisodeResponse> UploadEpisodeResponse_default_instance_;

// -------------------------------------------------------------------

class OpHeaders : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpHeaders) */ {
 public:
  OpHeaders();
  virtual ~OpHeaders();

  OpHeaders(const OpHeaders& from);

  inline OpHeaders& operator=(const OpHeaders& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpHeaders& default_instance();

  static const OpHeaders* internal_default_instance();

  void Swap(OpHeaders* other);

  // implements Message ----------------------------------------------

  inline OpHeaders* New() const { return New(NULL); }

  OpHeaders* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpHeaders& from);
  void MergeFrom(const OpHeaders& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpHeaders* other);
  void UnsafeMergeFrom(const OpHeaders& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 op_id = 1;
  bool has_op_id() const;
  void clear_op_id();
  static const int kOpIdFieldNumber = 1;
  ::google::protobuf::int64 op_id() const;
  void set_op_id(::google::protobuf::int64 value);

  // optional double op_timestamp = 2;
  bool has_op_timestamp() const;
  void clear_op_timestamp();
  static const int kOpTimestampFieldNumber = 2;
  double op_timestamp() const;
  void set_op_timestamp(double value);

  // @@protoc_insertion_point(class_scope:OpHeaders)
 private:
  inline void set_has_op_id();
  inline void clear_has_op_id();
  inline void set_has_op_timestamp();
  inline void clear_has_op_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 op_id_;
  double op_timestamp_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OpHeaders> OpHeaders_default_instance_;

// -------------------------------------------------------------------

class ServerOperation_RemovePhotos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerOperation.RemovePhotos) */ {
 public:
  ServerOperation_RemovePhotos();
  virtual ~ServerOperation_RemovePhotos();

  ServerOperation_RemovePhotos(const ServerOperation_RemovePhotos& from);

  inline ServerOperation_RemovePhotos& operator=(const ServerOperation_RemovePhotos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOperation_RemovePhotos& default_instance();

  static const ServerOperation_RemovePhotos* internal_default_instance();

  void Swap(ServerOperation_RemovePhotos* other);

  // implements Message ----------------------------------------------

  inline ServerOperation_RemovePhotos* New() const { return New(NULL); }

  ServerOperation_RemovePhotos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOperation_RemovePhotos& from);
  void MergeFrom(const ServerOperation_RemovePhotos& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerOperation_RemovePhotos* other);
  void UnsafeMergeFrom(const ServerOperation_RemovePhotos& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityMetadata.Episode episodes = 1;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 1;
  const ::ActivityMetadata_Episode& episodes(int index) const;
  ::ActivityMetadata_Episode* mutable_episodes(int index);
  ::ActivityMetadata_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
      episodes() const;

  // @@protoc_insertion_point(class_scope:ServerOperation.RemovePhotos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode > episodes_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServerOperation_RemovePhotos> ServerOperation_RemovePhotos_default_instance_;

// -------------------------------------------------------------------

class ServerOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerOperation) */ {
 public:
  ServerOperation();
  virtual ~ServerOperation();

  ServerOperation(const ServerOperation& from);

  inline ServerOperation& operator=(const ServerOperation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOperation& default_instance();

  static const ServerOperation* internal_default_instance();

  void Swap(ServerOperation* other);

  // implements Message ----------------------------------------------

  inline ServerOperation* New() const { return New(NULL); }

  ServerOperation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOperation& from);
  void MergeFrom(const ServerOperation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerOperation* other);
  void UnsafeMergeFrom(const ServerOperation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerOperation_RemovePhotos RemovePhotos;

  // accessors -------------------------------------------------------

  // optional .OpHeaders headers = 1;
  bool has_headers() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 1;
  const ::OpHeaders& headers() const;
  ::OpHeaders* mutable_headers();
  ::OpHeaders* release_headers();
  void set_allocated_headers(::OpHeaders* headers);

  // optional int64 upload_activity = 2;
  bool has_upload_activity() const;
  void clear_upload_activity();
  static const int kUploadActivityFieldNumber = 2;
  ::google::protobuf::int64 upload_activity() const;
  void set_upload_activity(::google::protobuf::int64 value);

  // optional int64 update_photo = 3;
  bool has_update_photo() const;
  void clear_update_photo();
  static const int kUpdatePhotoFieldNumber = 3;
  ::google::protobuf::int64 update_photo() const;
  void set_update_photo(::google::protobuf::int64 value);

  // optional .ServerOperation.RemovePhotos remove_photos = 4;
  bool has_remove_photos() const;
  void clear_remove_photos();
  static const int kRemovePhotosFieldNumber = 4;
  const ::ServerOperation_RemovePhotos& remove_photos() const;
  ::ServerOperation_RemovePhotos* mutable_remove_photos();
  ::ServerOperation_RemovePhotos* release_remove_photos();
  void set_allocated_remove_photos(::ServerOperation_RemovePhotos* remove_photos);

  // optional int64 update_viewpoint = 5;
  bool has_update_viewpoint() const;
  void clear_update_viewpoint();
  static const int kUpdateViewpointFieldNumber = 5;
  ::google::protobuf::int64 update_viewpoint() const;
  void set_update_viewpoint(::google::protobuf::int64 value);

  // repeated int32 stats = 6;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 6;
  ::google::protobuf::int32 stats(int index) const;
  void set_stats(int index, ::google::protobuf::int32 value);
  void add_stats(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stats() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stats();

  // @@protoc_insertion_point(class_scope:ServerOperation)
 private:
  inline void set_has_headers();
  inline void clear_has_headers();
  inline void set_has_upload_activity();
  inline void clear_has_upload_activity();
  inline void set_has_update_photo();
  inline void clear_has_update_photo();
  inline void set_has_remove_photos();
  inline void clear_has_remove_photos();
  inline void set_has_update_viewpoint();
  inline void clear_has_update_viewpoint();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stats_;
  ::OpHeaders* headers_;
  ::ServerOperation_RemovePhotos* remove_photos_;
  ::google::protobuf::int64 upload_activity_;
  ::google::protobuf::int64 update_photo_;
  ::google::protobuf::int64 update_viewpoint_;
  friend void  protobuf_InitDefaults_Server_2eproto_impl();
  friend void  protobuf_AddDesc_Server_2eproto_impl();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServerOperation> ServerOperation_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Headers

// optional int32 version = 1;
inline bool Headers::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Headers::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Headers::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Headers::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 Headers::version() const {
  // @@protoc_insertion_point(field_get:Headers.version)
  return version_;
}
inline void Headers::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Headers.version)
}

// optional int32 min_required_version = 2;
inline bool Headers::has_min_required_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Headers::set_has_min_required_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Headers::clear_has_min_required_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Headers::clear_min_required_version() {
  min_required_version_ = 0;
  clear_has_min_required_version();
}
inline ::google::protobuf::int32 Headers::min_required_version() const {
  // @@protoc_insertion_point(field_get:Headers.min_required_version)
  return min_required_version_;
}
inline void Headers::set_min_required_version(::google::protobuf::int32 value) {
  set_has_min_required_version();
  min_required_version_ = value;
  // @@protoc_insertion_point(field_set:Headers.min_required_version)
}

// optional string op_id = 3;
inline bool Headers::has_op_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Headers::set_has_op_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Headers::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Headers::clear_op_id() {
  op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_id();
}
inline const ::std::string& Headers::op_id() const {
  // @@protoc_insertion_point(field_get:Headers.op_id)
  return op_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Headers::set_op_id(const ::std::string& value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Headers.op_id)
}
inline void Headers::set_op_id(const char* value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Headers.op_id)
}
inline void Headers::set_op_id(const char* value, size_t size) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Headers.op_id)
}
inline ::std::string* Headers::mutable_op_id() {
  set_has_op_id();
  // @@protoc_insertion_point(field_mutable:Headers.op_id)
  return op_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Headers::release_op_id() {
  // @@protoc_insertion_point(field_release:Headers.op_id)
  clear_has_op_id();
  return op_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Headers::set_allocated_op_id(::std::string* op_id) {
  if (op_id != NULL) {
    set_has_op_id();
  } else {
    clear_has_op_id();
  }
  op_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_id);
  // @@protoc_insertion_point(field_set_allocated:Headers.op_id)
}

inline const Headers* Headers::internal_default_instance() {
  return &Headers_default_instance_.get();
}
// -------------------------------------------------------------------

// PhotoUpdate

// optional .PhotoMetadata metadata = 1;
inline bool PhotoUpdate::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhotoUpdate::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhotoUpdate::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhotoUpdate::clear_metadata() {
  if (metadata_ != NULL) metadata_->::PhotoMetadata::Clear();
  clear_has_metadata();
}
inline const ::PhotoMetadata& PhotoUpdate::metadata() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::PhotoMetadata::internal_default_instance();
}
inline ::PhotoMetadata* PhotoUpdate::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::PhotoMetadata;
  }
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.metadata)
  return metadata_;
}
inline ::PhotoMetadata* PhotoUpdate::release_metadata() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.metadata)
  clear_has_metadata();
  ::PhotoMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void PhotoUpdate::set_allocated_metadata(::PhotoMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.metadata)
}

// optional string tn_get_url = 2;
inline bool PhotoUpdate::has_tn_get_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhotoUpdate::set_has_tn_get_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhotoUpdate::clear_has_tn_get_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhotoUpdate::clear_tn_get_url() {
  tn_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tn_get_url();
}
inline const ::std::string& PhotoUpdate::tn_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.tn_get_url)
  return tn_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_tn_get_url(const ::std::string& value) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.tn_get_url)
}
inline void PhotoUpdate::set_tn_get_url(const char* value) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.tn_get_url)
}
inline void PhotoUpdate::set_tn_get_url(const char* value, size_t size) {
  set_has_tn_get_url();
  tn_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.tn_get_url)
}
inline ::std::string* PhotoUpdate::mutable_tn_get_url() {
  set_has_tn_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.tn_get_url)
  return tn_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_tn_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.tn_get_url)
  clear_has_tn_get_url();
  return tn_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_tn_get_url(::std::string* tn_get_url) {
  if (tn_get_url != NULL) {
    set_has_tn_get_url();
  } else {
    clear_has_tn_get_url();
  }
  tn_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tn_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.tn_get_url)
}

// optional string tn_put_url = 3;
inline bool PhotoUpdate::has_tn_put_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PhotoUpdate::set_has_tn_put_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PhotoUpdate::clear_has_tn_put_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PhotoUpdate::clear_tn_put_url() {
  tn_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tn_put_url();
}
inline const ::std::string& PhotoUpdate::tn_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.tn_put_url)
  return tn_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_tn_put_url(const ::std::string& value) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.tn_put_url)
}
inline void PhotoUpdate::set_tn_put_url(const char* value) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.tn_put_url)
}
inline void PhotoUpdate::set_tn_put_url(const char* value, size_t size) {
  set_has_tn_put_url();
  tn_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.tn_put_url)
}
inline ::std::string* PhotoUpdate::mutable_tn_put_url() {
  set_has_tn_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.tn_put_url)
  return tn_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_tn_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.tn_put_url)
  clear_has_tn_put_url();
  return tn_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_tn_put_url(::std::string* tn_put_url) {
  if (tn_put_url != NULL) {
    set_has_tn_put_url();
  } else {
    clear_has_tn_put_url();
  }
  tn_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tn_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.tn_put_url)
}

// optional string med_get_url = 4;
inline bool PhotoUpdate::has_med_get_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PhotoUpdate::set_has_med_get_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PhotoUpdate::clear_has_med_get_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PhotoUpdate::clear_med_get_url() {
  med_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_med_get_url();
}
inline const ::std::string& PhotoUpdate::med_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.med_get_url)
  return med_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_med_get_url(const ::std::string& value) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.med_get_url)
}
inline void PhotoUpdate::set_med_get_url(const char* value) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.med_get_url)
}
inline void PhotoUpdate::set_med_get_url(const char* value, size_t size) {
  set_has_med_get_url();
  med_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.med_get_url)
}
inline ::std::string* PhotoUpdate::mutable_med_get_url() {
  set_has_med_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.med_get_url)
  return med_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_med_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.med_get_url)
  clear_has_med_get_url();
  return med_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_med_get_url(::std::string* med_get_url) {
  if (med_get_url != NULL) {
    set_has_med_get_url();
  } else {
    clear_has_med_get_url();
  }
  med_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), med_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.med_get_url)
}

// optional string med_put_url = 5;
inline bool PhotoUpdate::has_med_put_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PhotoUpdate::set_has_med_put_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PhotoUpdate::clear_has_med_put_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PhotoUpdate::clear_med_put_url() {
  med_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_med_put_url();
}
inline const ::std::string& PhotoUpdate::med_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.med_put_url)
  return med_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_med_put_url(const ::std::string& value) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.med_put_url)
}
inline void PhotoUpdate::set_med_put_url(const char* value) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.med_put_url)
}
inline void PhotoUpdate::set_med_put_url(const char* value, size_t size) {
  set_has_med_put_url();
  med_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.med_put_url)
}
inline ::std::string* PhotoUpdate::mutable_med_put_url() {
  set_has_med_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.med_put_url)
  return med_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_med_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.med_put_url)
  clear_has_med_put_url();
  return med_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_med_put_url(::std::string* med_put_url) {
  if (med_put_url != NULL) {
    set_has_med_put_url();
  } else {
    clear_has_med_put_url();
  }
  med_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), med_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.med_put_url)
}

// optional string full_get_url = 6;
inline bool PhotoUpdate::has_full_get_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PhotoUpdate::set_has_full_get_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PhotoUpdate::clear_has_full_get_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PhotoUpdate::clear_full_get_url() {
  full_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_get_url();
}
inline const ::std::string& PhotoUpdate::full_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.full_get_url)
  return full_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_full_get_url(const ::std::string& value) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.full_get_url)
}
inline void PhotoUpdate::set_full_get_url(const char* value) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.full_get_url)
}
inline void PhotoUpdate::set_full_get_url(const char* value, size_t size) {
  set_has_full_get_url();
  full_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.full_get_url)
}
inline ::std::string* PhotoUpdate::mutable_full_get_url() {
  set_has_full_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.full_get_url)
  return full_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_full_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.full_get_url)
  clear_has_full_get_url();
  return full_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_full_get_url(::std::string* full_get_url) {
  if (full_get_url != NULL) {
    set_has_full_get_url();
  } else {
    clear_has_full_get_url();
  }
  full_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.full_get_url)
}

// optional string full_put_url = 7;
inline bool PhotoUpdate::has_full_put_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PhotoUpdate::set_has_full_put_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PhotoUpdate::clear_has_full_put_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PhotoUpdate::clear_full_put_url() {
  full_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_put_url();
}
inline const ::std::string& PhotoUpdate::full_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.full_put_url)
  return full_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_full_put_url(const ::std::string& value) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.full_put_url)
}
inline void PhotoUpdate::set_full_put_url(const char* value) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.full_put_url)
}
inline void PhotoUpdate::set_full_put_url(const char* value, size_t size) {
  set_has_full_put_url();
  full_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.full_put_url)
}
inline ::std::string* PhotoUpdate::mutable_full_put_url() {
  set_has_full_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.full_put_url)
  return full_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_full_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.full_put_url)
  clear_has_full_put_url();
  return full_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_full_put_url(::std::string* full_put_url) {
  if (full_put_url != NULL) {
    set_has_full_put_url();
  } else {
    clear_has_full_put_url();
  }
  full_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.full_put_url)
}

// optional string orig_get_url = 8;
inline bool PhotoUpdate::has_orig_get_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PhotoUpdate::set_has_orig_get_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PhotoUpdate::clear_has_orig_get_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PhotoUpdate::clear_orig_get_url() {
  orig_get_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_get_url();
}
inline const ::std::string& PhotoUpdate::orig_get_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.orig_get_url)
  return orig_get_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_orig_get_url(const ::std::string& value) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.orig_get_url)
}
inline void PhotoUpdate::set_orig_get_url(const char* value) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.orig_get_url)
}
inline void PhotoUpdate::set_orig_get_url(const char* value, size_t size) {
  set_has_orig_get_url();
  orig_get_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.orig_get_url)
}
inline ::std::string* PhotoUpdate::mutable_orig_get_url() {
  set_has_orig_get_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.orig_get_url)
  return orig_get_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_orig_get_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.orig_get_url)
  clear_has_orig_get_url();
  return orig_get_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_orig_get_url(::std::string* orig_get_url) {
  if (orig_get_url != NULL) {
    set_has_orig_get_url();
  } else {
    clear_has_orig_get_url();
  }
  orig_get_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_get_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.orig_get_url)
}

// optional string orig_put_url = 9;
inline bool PhotoUpdate::has_orig_put_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PhotoUpdate::set_has_orig_put_url() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PhotoUpdate::clear_has_orig_put_url() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PhotoUpdate::clear_orig_put_url() {
  orig_put_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_put_url();
}
inline const ::std::string& PhotoUpdate::orig_put_url() const {
  // @@protoc_insertion_point(field_get:PhotoUpdate.orig_put_url)
  return orig_put_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_orig_put_url(const ::std::string& value) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhotoUpdate.orig_put_url)
}
inline void PhotoUpdate::set_orig_put_url(const char* value) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhotoUpdate.orig_put_url)
}
inline void PhotoUpdate::set_orig_put_url(const char* value, size_t size) {
  set_has_orig_put_url();
  orig_put_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhotoUpdate.orig_put_url)
}
inline ::std::string* PhotoUpdate::mutable_orig_put_url() {
  set_has_orig_put_url();
  // @@protoc_insertion_point(field_mutable:PhotoUpdate.orig_put_url)
  return orig_put_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhotoUpdate::release_orig_put_url() {
  // @@protoc_insertion_point(field_release:PhotoUpdate.orig_put_url)
  clear_has_orig_put_url();
  return orig_put_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhotoUpdate::set_allocated_orig_put_url(::std::string* orig_put_url) {
  if (orig_put_url != NULL) {
    set_has_orig_put_url();
  } else {
    clear_has_orig_put_url();
  }
  orig_put_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_put_url);
  // @@protoc_insertion_point(field_set_allocated:PhotoUpdate.orig_put_url)
}

inline const PhotoUpdate* PhotoUpdate::internal_default_instance() {
  return &PhotoUpdate_default_instance_.get();
}
// -------------------------------------------------------------------

// AccountSettingsMetadata

// optional string email_alerts = 1;
inline bool AccountSettingsMetadata::has_email_alerts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountSettingsMetadata::set_has_email_alerts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountSettingsMetadata::clear_has_email_alerts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountSettingsMetadata::clear_email_alerts() {
  email_alerts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email_alerts();
}
inline const ::std::string& AccountSettingsMetadata::email_alerts() const {
  // @@protoc_insertion_point(field_get:AccountSettingsMetadata.email_alerts)
  return email_alerts_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSettingsMetadata::set_email_alerts(const ::std::string& value) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountSettingsMetadata.email_alerts)
}
inline void AccountSettingsMetadata::set_email_alerts(const char* value) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountSettingsMetadata.email_alerts)
}
inline void AccountSettingsMetadata::set_email_alerts(const char* value, size_t size) {
  set_has_email_alerts();
  email_alerts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountSettingsMetadata.email_alerts)
}
inline ::std::string* AccountSettingsMetadata::mutable_email_alerts() {
  set_has_email_alerts();
  // @@protoc_insertion_point(field_mutable:AccountSettingsMetadata.email_alerts)
  return email_alerts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountSettingsMetadata::release_email_alerts() {
  // @@protoc_insertion_point(field_release:AccountSettingsMetadata.email_alerts)
  clear_has_email_alerts();
  return email_alerts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSettingsMetadata::set_allocated_email_alerts(::std::string* email_alerts) {
  if (email_alerts != NULL) {
    set_has_email_alerts();
  } else {
    clear_has_email_alerts();
  }
  email_alerts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email_alerts);
  // @@protoc_insertion_point(field_set_allocated:AccountSettingsMetadata.email_alerts)
}

// repeated string storage_options = 2;
inline int AccountSettingsMetadata::storage_options_size() const {
  return storage_options_.size();
}
inline void AccountSettingsMetadata::clear_storage_options() {
  storage_options_.Clear();
}
inline const ::std::string& AccountSettingsMetadata::storage_options(int index) const {
  // @@protoc_insertion_point(field_get:AccountSettingsMetadata.storage_options)
  return storage_options_.Get(index);
}
inline ::std::string* AccountSettingsMetadata::mutable_storage_options(int index) {
  // @@protoc_insertion_point(field_mutable:AccountSettingsMetadata.storage_options)
  return storage_options_.Mutable(index);
}
inline void AccountSettingsMetadata::set_storage_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AccountSettingsMetadata.storage_options)
  storage_options_.Mutable(index)->assign(value);
}
inline void AccountSettingsMetadata::set_storage_options(int index, const char* value) {
  storage_options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AccountSettingsMetadata.storage_options)
}
inline void AccountSettingsMetadata::set_storage_options(int index, const char* value, size_t size) {
  storage_options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AccountSettingsMetadata.storage_options)
}
inline ::std::string* AccountSettingsMetadata::add_storage_options() {
  // @@protoc_insertion_point(field_add_mutable:AccountSettingsMetadata.storage_options)
  return storage_options_.Add();
}
inline void AccountSettingsMetadata::add_storage_options(const ::std::string& value) {
  storage_options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AccountSettingsMetadata.storage_options)
}
inline void AccountSettingsMetadata::add_storage_options(const char* value) {
  storage_options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AccountSettingsMetadata.storage_options)
}
inline void AccountSettingsMetadata::add_storage_options(const char* value, size_t size) {
  storage_options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AccountSettingsMetadata.storage_options)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AccountSettingsMetadata::storage_options() const {
  // @@protoc_insertion_point(field_list:AccountSettingsMetadata.storage_options)
  return storage_options_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AccountSettingsMetadata::mutable_storage_options() {
  // @@protoc_insertion_point(field_mutable_list:AccountSettingsMetadata.storage_options)
  return &storage_options_;
}

inline const AccountSettingsMetadata* AccountSettingsMetadata::internal_default_instance() {
  return &AccountSettingsMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthResponse

// optional .Headers headers = 1;
inline bool AuthResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& AuthResponse::headers() const {
  // @@protoc_insertion_point(field_get:AuthResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* AuthResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:AuthResponse.headers)
  return headers_;
}
inline ::Headers* AuthResponse::release_headers() {
  // @@protoc_insertion_point(field_release:AuthResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void AuthResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:AuthResponse.headers)
}

// optional int64 user_id = 2;
inline bool AuthResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthResponse::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 AuthResponse::user_id() const {
  // @@protoc_insertion_point(field_get:AuthResponse.user_id)
  return user_id_;
}
inline void AuthResponse::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.user_id)
}

// optional int64 device_id = 3;
inline bool AuthResponse::has_device_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthResponse::set_has_device_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthResponse::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthResponse::clear_device_id() {
  device_id_ = GOOGLE_LONGLONG(0);
  clear_has_device_id();
}
inline ::google::protobuf::int64 AuthResponse::device_id() const {
  // @@protoc_insertion_point(field_get:AuthResponse.device_id)
  return device_id_;
}
inline void AuthResponse::set_device_id(::google::protobuf::int64 value) {
  set_has_device_id();
  device_id_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.device_id)
}

// optional int32 token_digits = 4;
inline bool AuthResponse::has_token_digits() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthResponse::set_has_token_digits() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthResponse::clear_has_token_digits() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthResponse::clear_token_digits() {
  token_digits_ = 0;
  clear_has_token_digits();
}
inline ::google::protobuf::int32 AuthResponse::token_digits() const {
  // @@protoc_insertion_point(field_get:AuthResponse.token_digits)
  return token_digits_;
}
inline void AuthResponse::set_token_digits(::google::protobuf::int32 value) {
  set_has_token_digits();
  token_digits_ = value;
  // @@protoc_insertion_point(field_set:AuthResponse.token_digits)
}

// optional string cookie = 5;
inline bool AuthResponse::has_cookie() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuthResponse::set_has_cookie() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuthResponse::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuthResponse::clear_cookie() {
  cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cookie();
}
inline const ::std::string& AuthResponse::cookie() const {
  // @@protoc_insertion_point(field_get:AuthResponse.cookie)
  return cookie_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResponse::set_cookie(const ::std::string& value) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthResponse.cookie)
}
inline void AuthResponse::set_cookie(const char* value) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthResponse.cookie)
}
inline void AuthResponse::set_cookie(const char* value, size_t size) {
  set_has_cookie();
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthResponse.cookie)
}
inline ::std::string* AuthResponse::mutable_cookie() {
  set_has_cookie();
  // @@protoc_insertion_point(field_mutable:AuthResponse.cookie)
  return cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResponse::release_cookie() {
  // @@protoc_insertion_point(field_release:AuthResponse.cookie)
  clear_has_cookie();
  return cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResponse::set_allocated_cookie(::std::string* cookie) {
  if (cookie != NULL) {
    set_has_cookie();
  } else {
    clear_has_cookie();
  }
  cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cookie);
  // @@protoc_insertion_point(field_set_allocated:AuthResponse.cookie)
}

inline const AuthResponse* AuthResponse::internal_default_instance() {
  return &AuthResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorResponse_Error

// optional string method = 1;
inline bool ErrorResponse_Error::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorResponse_Error::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorResponse_Error::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorResponse_Error::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& ErrorResponse_Error::method() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse_Error::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.method)
}
inline void ErrorResponse_Error::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorResponse.Error.method)
}
inline void ErrorResponse_Error::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorResponse.Error.method)
}
inline ::std::string* ErrorResponse_Error::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:ErrorResponse.Error.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorResponse_Error::release_method() {
  // @@protoc_insertion_point(field_release:ErrorResponse.Error.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse_Error::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.Error.method)
}

// optional string text = 2;
inline bool ErrorResponse_Error::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorResponse_Error::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorResponse_Error::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorResponse_Error::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& ErrorResponse_Error::text() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse_Error::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.text)
}
inline void ErrorResponse_Error::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorResponse.Error.text)
}
inline void ErrorResponse_Error::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorResponse.Error.text)
}
inline ::std::string* ErrorResponse_Error::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ErrorResponse.Error.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorResponse_Error::release_text() {
  // @@protoc_insertion_point(field_release:ErrorResponse.Error.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse_Error::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.Error.text)
}

// optional .ErrorResponse.ErrorId error_id = 3 [default = UNKNOWN];
inline bool ErrorResponse_Error::has_error_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrorResponse_Error::set_has_error_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrorResponse_Error::clear_has_error_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrorResponse_Error::clear_error_id() {
  error_id_ = 1;
  clear_has_error_id();
}
inline ::ErrorResponse_ErrorId ErrorResponse_Error::error_id() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.Error.error_id)
  return static_cast< ::ErrorResponse_ErrorId >(error_id_);
}
inline void ErrorResponse_Error::set_error_id(::ErrorResponse_ErrorId value) {
  assert(::ErrorResponse_ErrorId_IsValid(value));
  set_has_error_id();
  error_id_ = value;
  // @@protoc_insertion_point(field_set:ErrorResponse.Error.error_id)
}

inline const ErrorResponse_Error* ErrorResponse_Error::internal_default_instance() {
  return &ErrorResponse_Error_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorResponse

// optional .ErrorResponse.Error error = 1;
inline bool ErrorResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorResponse::clear_error() {
  if (error_ != NULL) error_->::ErrorResponse_Error::Clear();
  clear_has_error();
}
inline const ::ErrorResponse_Error& ErrorResponse::error() const {
  // @@protoc_insertion_point(field_get:ErrorResponse.error)
  return error_ != NULL ? *error_
                         : *::ErrorResponse_Error::internal_default_instance();
}
inline ::ErrorResponse_Error* ErrorResponse::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::ErrorResponse_Error;
  }
  // @@protoc_insertion_point(field_mutable:ErrorResponse.error)
  return error_;
}
inline ::ErrorResponse_Error* ErrorResponse::release_error() {
  // @@protoc_insertion_point(field_release:ErrorResponse.error)
  clear_has_error();
  ::ErrorResponse_Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ErrorResponse::set_allocated_error(::ErrorResponse_Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:ErrorResponse.error)
}

inline const ErrorResponse* ErrorResponse::internal_default_instance() {
  return &ErrorResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PingResponse

// optional .SystemMessage message = 1;
inline bool PingResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingResponse::clear_message() {
  if (message_ != NULL) message_->::SystemMessage::Clear();
  clear_has_message();
}
inline const ::SystemMessage& PingResponse::message() const {
  // @@protoc_insertion_point(field_get:PingResponse.message)
  return message_ != NULL ? *message_
                         : *::SystemMessage::internal_default_instance();
}
inline ::SystemMessage* PingResponse::mutable_message() {
  set_has_message();
  if (message_ == NULL) {
    message_ = new ::SystemMessage;
  }
  // @@protoc_insertion_point(field_mutable:PingResponse.message)
  return message_;
}
inline ::SystemMessage* PingResponse::release_message() {
  // @@protoc_insertion_point(field_release:PingResponse.message)
  clear_has_message();
  ::SystemMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void PingResponse::set_allocated_message(::SystemMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:PingResponse.message)
}

inline const PingResponse* PingResponse::internal_default_instance() {
  return &PingResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryContactsResponse

// optional .Headers headers = 1;
inline bool QueryContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.headers)
  return headers_;
}
inline ::Headers* QueryContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryContactsResponse.headers)
}

// optional string last_key = 2;
inline bool QueryContactsResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryContactsResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryContactsResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryContactsResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
inline const ::std::string& QueryContactsResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryContactsResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryContactsResponse.last_key)
}
inline void QueryContactsResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryContactsResponse.last_key)
}
inline void QueryContactsResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryContactsResponse.last_key)
}
inline ::std::string* QueryContactsResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryContactsResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryContactsResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryContactsResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryContactsResponse.last_key)
}

// repeated .ContactMetadata contacts = 3;
inline int QueryContactsResponse::contacts_size() const {
  return contacts_.size();
}
inline void QueryContactsResponse::clear_contacts() {
  contacts_.Clear();
}
inline const ::ContactMetadata& QueryContactsResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:QueryContactsResponse.contacts)
  return contacts_.Get(index);
}
inline ::ContactMetadata* QueryContactsResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:QueryContactsResponse.contacts)
  return contacts_.Mutable(index);
}
inline ::ContactMetadata* QueryContactsResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:QueryContactsResponse.contacts)
  return contacts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
QueryContactsResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:QueryContactsResponse.contacts)
  return &contacts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
QueryContactsResponse::contacts() const {
  // @@protoc_insertion_point(field_list:QueryContactsResponse.contacts)
  return contacts_;
}

inline const QueryContactsResponse* QueryContactsResponse::internal_default_instance() {
  return &QueryContactsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryEpisodesResponse_Episode

// optional string last_key = 1;
inline bool QueryEpisodesResponse_Episode::has_last_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryEpisodesResponse_Episode::set_has_last_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryEpisodesResponse_Episode::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryEpisodesResponse_Episode::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
inline const ::std::string& QueryEpisodesResponse_Episode::last_key() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryEpisodesResponse_Episode::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryEpisodesResponse.Episode.last_key)
}
inline void QueryEpisodesResponse_Episode::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryEpisodesResponse.Episode.last_key)
}
inline void QueryEpisodesResponse_Episode::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryEpisodesResponse.Episode.last_key)
}
inline ::std::string* QueryEpisodesResponse_Episode::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryEpisodesResponse_Episode::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.Episode.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryEpisodesResponse_Episode::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.Episode.last_key)
}

// optional .EpisodeMetadata metadata = 2;
inline bool QueryEpisodesResponse_Episode::has_metadata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryEpisodesResponse_Episode::set_has_metadata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryEpisodesResponse_Episode::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryEpisodesResponse_Episode::clear_metadata() {
  if (metadata_ != NULL) metadata_->::EpisodeMetadata::Clear();
  clear_has_metadata();
}
inline const ::EpisodeMetadata& QueryEpisodesResponse_Episode::metadata() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::EpisodeMetadata::internal_default_instance();
}
inline ::EpisodeMetadata* QueryEpisodesResponse_Episode::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::EpisodeMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.metadata)
  return metadata_;
}
inline ::EpisodeMetadata* QueryEpisodesResponse_Episode::release_metadata() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.Episode.metadata)
  clear_has_metadata();
  ::EpisodeMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void QueryEpisodesResponse_Episode::set_allocated_metadata(::EpisodeMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.Episode.metadata)
}

// repeated .PhotoUpdate photos = 3;
inline int QueryEpisodesResponse_Episode::photos_size() const {
  return photos_.size();
}
inline void QueryEpisodesResponse_Episode::clear_photos() {
  photos_.Clear();
}
inline const ::PhotoUpdate& QueryEpisodesResponse_Episode::photos(int index) const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.Episode.photos)
  return photos_.Get(index);
}
inline ::PhotoUpdate* QueryEpisodesResponse_Episode::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.Episode.photos)
  return photos_.Mutable(index);
}
inline ::PhotoUpdate* QueryEpisodesResponse_Episode::add_photos() {
  // @@protoc_insertion_point(field_add:QueryEpisodesResponse.Episode.photos)
  return photos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
QueryEpisodesResponse_Episode::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:QueryEpisodesResponse.Episode.photos)
  return &photos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
QueryEpisodesResponse_Episode::photos() const {
  // @@protoc_insertion_point(field_list:QueryEpisodesResponse.Episode.photos)
  return photos_;
}

inline const QueryEpisodesResponse_Episode* QueryEpisodesResponse_Episode::internal_default_instance() {
  return &QueryEpisodesResponse_Episode_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryEpisodesResponse

// optional .Headers headers = 1;
inline bool QueryEpisodesResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryEpisodesResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryEpisodesResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryEpisodesResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryEpisodesResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryEpisodesResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.headers)
  return headers_;
}
inline ::Headers* QueryEpisodesResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryEpisodesResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryEpisodesResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryEpisodesResponse.headers)
}

// repeated .QueryEpisodesResponse.Episode episodes = 2;
inline int QueryEpisodesResponse::episodes_size() const {
  return episodes_.size();
}
inline void QueryEpisodesResponse::clear_episodes() {
  episodes_.Clear();
}
inline const ::QueryEpisodesResponse_Episode& QueryEpisodesResponse::episodes(int index) const {
  // @@protoc_insertion_point(field_get:QueryEpisodesResponse.episodes)
  return episodes_.Get(index);
}
inline ::QueryEpisodesResponse_Episode* QueryEpisodesResponse::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:QueryEpisodesResponse.episodes)
  return episodes_.Mutable(index);
}
inline ::QueryEpisodesResponse_Episode* QueryEpisodesResponse::add_episodes() {
  // @@protoc_insertion_point(field_add:QueryEpisodesResponse.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >*
QueryEpisodesResponse::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:QueryEpisodesResponse.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::QueryEpisodesResponse_Episode >&
QueryEpisodesResponse::episodes() const {
  // @@protoc_insertion_point(field_list:QueryEpisodesResponse.episodes)
  return episodes_;
}

inline const QueryEpisodesResponse* QueryEpisodesResponse::internal_default_instance() {
  return &QueryEpisodesResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryFollowedResponse

// optional .Headers headers = 1;
inline bool QueryFollowedResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryFollowedResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryFollowedResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryFollowedResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryFollowedResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryFollowedResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.headers)
  return headers_;
}
inline ::Headers* QueryFollowedResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryFollowedResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryFollowedResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryFollowedResponse.headers)
}

// optional string last_key = 2;
inline bool QueryFollowedResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryFollowedResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryFollowedResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryFollowedResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
inline const ::std::string& QueryFollowedResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFollowedResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryFollowedResponse.last_key)
}
inline void QueryFollowedResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryFollowedResponse.last_key)
}
inline void QueryFollowedResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryFollowedResponse.last_key)
}
inline ::std::string* QueryFollowedResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryFollowedResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryFollowedResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFollowedResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryFollowedResponse.last_key)
}

// repeated .ViewpointMetadata viewpoints = 3;
inline int QueryFollowedResponse::viewpoints_size() const {
  return viewpoints_.size();
}
inline void QueryFollowedResponse::clear_viewpoints() {
  viewpoints_.Clear();
}
inline const ::ViewpointMetadata& QueryFollowedResponse::viewpoints(int index) const {
  // @@protoc_insertion_point(field_get:QueryFollowedResponse.viewpoints)
  return viewpoints_.Get(index);
}
inline ::ViewpointMetadata* QueryFollowedResponse::mutable_viewpoints(int index) {
  // @@protoc_insertion_point(field_mutable:QueryFollowedResponse.viewpoints)
  return viewpoints_.Mutable(index);
}
inline ::ViewpointMetadata* QueryFollowedResponse::add_viewpoints() {
  // @@protoc_insertion_point(field_add:QueryFollowedResponse.viewpoints)
  return viewpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >*
QueryFollowedResponse::mutable_viewpoints() {
  // @@protoc_insertion_point(field_mutable_list:QueryFollowedResponse.viewpoints)
  return &viewpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ViewpointMetadata >&
QueryFollowedResponse::viewpoints() const {
  // @@protoc_insertion_point(field_list:QueryFollowedResponse.viewpoints)
  return viewpoints_;
}

inline const QueryFollowedResponse* QueryFollowedResponse::internal_default_instance() {
  return &QueryFollowedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse_InlineViewpoint

// optional string viewpoint_id = 1;
inline bool QueryNotificationsResponse_InlineViewpoint::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryNotificationsResponse_InlineViewpoint::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_viewpoint_id() {
  viewpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_viewpoint_id();
}
inline const ::std::string& QueryNotificationsResponse_InlineViewpoint::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  return viewpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const ::std::string& value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
inline void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const char* value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
inline void QueryNotificationsResponse_InlineViewpoint::set_viewpoint_id(const char* value, size_t size) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}
inline ::std::string* QueryNotificationsResponse_InlineViewpoint::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  return viewpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryNotificationsResponse_InlineViewpoint::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
  clear_has_viewpoint_id();
  return viewpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_InlineViewpoint::set_allocated_viewpoint_id(::std::string* viewpoint_id) {
  if (viewpoint_id != NULL) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  viewpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), viewpoint_id);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineViewpoint.viewpoint_id)
}

// optional int64 update_seq = 2;
inline bool QueryNotificationsResponse_InlineViewpoint::has_update_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryNotificationsResponse_InlineViewpoint::set_has_update_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_has_update_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_update_seq() {
  update_seq_ = GOOGLE_LONGLONG(0);
  clear_has_update_seq();
}
inline ::google::protobuf::int64 QueryNotificationsResponse_InlineViewpoint::update_seq() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.update_seq)
  return update_seq_;
}
inline void QueryNotificationsResponse_InlineViewpoint::set_update_seq(::google::protobuf::int64 value) {
  set_has_update_seq();
  update_seq_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.update_seq)
}

// optional int64 viewed_seq = 3;
inline bool QueryNotificationsResponse_InlineViewpoint::has_viewed_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryNotificationsResponse_InlineViewpoint::set_has_viewed_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_has_viewed_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryNotificationsResponse_InlineViewpoint::clear_viewed_seq() {
  viewed_seq_ = GOOGLE_LONGLONG(0);
  clear_has_viewed_seq();
}
inline ::google::protobuf::int64 QueryNotificationsResponse_InlineViewpoint::viewed_seq() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineViewpoint.viewed_seq)
  return viewed_seq_;
}
inline void QueryNotificationsResponse_InlineViewpoint::set_viewed_seq(::google::protobuf::int64 value) {
  set_has_viewed_seq();
  viewed_seq_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.InlineViewpoint.viewed_seq)
}

inline const QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineViewpoint::internal_default_instance() {
  return &QueryNotificationsResponse_InlineViewpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse_InlineInvalidation

// optional .ActivityMetadata activity = 1;
inline bool QueryNotificationsResponse_InlineInvalidation::has_activity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_has_activity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_has_activity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_activity() {
  if (activity_ != NULL) activity_->::ActivityMetadata::Clear();
  clear_has_activity();
}
inline const ::ActivityMetadata& QueryNotificationsResponse_InlineInvalidation::activity() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.activity)
  return activity_ != NULL ? *activity_
                         : *::ActivityMetadata::internal_default_instance();
}
inline ::ActivityMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) {
    activity_ = new ::ActivityMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.activity)
  return activity_;
}
inline ::ActivityMetadata* QueryNotificationsResponse_InlineInvalidation::release_activity() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.activity)
  clear_has_activity();
  ::ActivityMetadata* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_allocated_activity(::ActivityMetadata* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.activity)
}

// optional .QueryNotificationsResponse.InlineViewpoint viewpoint = 2;
inline bool QueryNotificationsResponse_InlineInvalidation::has_viewpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_has_viewpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_has_viewpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_viewpoint() {
  if (viewpoint_ != NULL) viewpoint_->::QueryNotificationsResponse_InlineViewpoint::Clear();
  clear_has_viewpoint();
}
inline const ::QueryNotificationsResponse_InlineViewpoint& QueryNotificationsResponse_InlineInvalidation::viewpoint() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  return viewpoint_ != NULL ? *viewpoint_
                         : *::QueryNotificationsResponse_InlineViewpoint::internal_default_instance();
}
inline ::QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineInvalidation::mutable_viewpoint() {
  set_has_viewpoint();
  if (viewpoint_ == NULL) {
    viewpoint_ = new ::QueryNotificationsResponse_InlineViewpoint;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  return viewpoint_;
}
inline ::QueryNotificationsResponse_InlineViewpoint* QueryNotificationsResponse_InlineInvalidation::release_viewpoint() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.viewpoint)
  clear_has_viewpoint();
  ::QueryNotificationsResponse_InlineViewpoint* temp = viewpoint_;
  viewpoint_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_allocated_viewpoint(::QueryNotificationsResponse_InlineViewpoint* viewpoint) {
  delete viewpoint_;
  viewpoint_ = viewpoint;
  if (viewpoint) {
    set_has_viewpoint();
  } else {
    clear_has_viewpoint();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.viewpoint)
}

// optional .CommentMetadata comment = 3;
inline bool QueryNotificationsResponse_InlineInvalidation::has_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_has_comment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_has_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_comment() {
  if (comment_ != NULL) comment_->::CommentMetadata::Clear();
  clear_has_comment();
}
inline const ::CommentMetadata& QueryNotificationsResponse_InlineInvalidation::comment() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.comment)
  return comment_ != NULL ? *comment_
                         : *::CommentMetadata::internal_default_instance();
}
inline ::CommentMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_comment() {
  set_has_comment();
  if (comment_ == NULL) {
    comment_ = new ::CommentMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.comment)
  return comment_;
}
inline ::CommentMetadata* QueryNotificationsResponse_InlineInvalidation::release_comment() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.comment)
  clear_has_comment();
  ::CommentMetadata* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_allocated_comment(::CommentMetadata* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.comment)
}

// optional .UsageMetadata usage = 4;
inline bool QueryNotificationsResponse_InlineInvalidation::has_usage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_has_usage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_has_usage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryNotificationsResponse_InlineInvalidation::clear_usage() {
  if (usage_ != NULL) usage_->::UsageMetadata::Clear();
  clear_has_usage();
}
inline const ::UsageMetadata& QueryNotificationsResponse_InlineInvalidation::usage() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.InlineInvalidation.usage)
  return usage_ != NULL ? *usage_
                         : *::UsageMetadata::internal_default_instance();
}
inline ::UsageMetadata* QueryNotificationsResponse_InlineInvalidation::mutable_usage() {
  set_has_usage();
  if (usage_ == NULL) {
    usage_ = new ::UsageMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.InlineInvalidation.usage)
  return usage_;
}
inline ::UsageMetadata* QueryNotificationsResponse_InlineInvalidation::release_usage() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.InlineInvalidation.usage)
  clear_has_usage();
  ::UsageMetadata* temp = usage_;
  usage_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_InlineInvalidation::set_allocated_usage(::UsageMetadata* usage) {
  delete usage_;
  usage_ = usage;
  if (usage) {
    set_has_usage();
  } else {
    clear_has_usage();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.InlineInvalidation.usage)
}

inline const QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_InlineInvalidation::internal_default_instance() {
  return &QueryNotificationsResponse_InlineInvalidation_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse_Notification

// optional int64 notification_id = 1;
inline bool QueryNotificationsResponse_Notification::has_notification_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_notification_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryNotificationsResponse_Notification::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryNotificationsResponse_Notification::clear_notification_id() {
  notification_id_ = GOOGLE_LONGLONG(0);
  clear_has_notification_id();
}
inline ::google::protobuf::int64 QueryNotificationsResponse_Notification::notification_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.notification_id)
  return notification_id_;
}
inline void QueryNotificationsResponse_Notification::set_notification_id(::google::protobuf::int64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.notification_id)
}

// optional string name = 2;
inline bool QueryNotificationsResponse_Notification::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryNotificationsResponse_Notification::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryNotificationsResponse_Notification::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QueryNotificationsResponse_Notification::name() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_Notification::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.name)
}
inline void QueryNotificationsResponse_Notification::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.Notification.name)
}
inline void QueryNotificationsResponse_Notification::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.Notification.name)
}
inline ::std::string* QueryNotificationsResponse_Notification::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryNotificationsResponse_Notification::release_name() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_Notification::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.name)
}

// optional int64 sender_id = 3;
inline bool QueryNotificationsResponse_Notification::has_sender_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_sender_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryNotificationsResponse_Notification::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryNotificationsResponse_Notification::clear_sender_id() {
  sender_id_ = GOOGLE_LONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::int64 QueryNotificationsResponse_Notification::sender_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.sender_id)
  return sender_id_;
}
inline void QueryNotificationsResponse_Notification::set_sender_id(::google::protobuf::int64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.sender_id)
}

// optional string op_id = 7;
inline bool QueryNotificationsResponse_Notification::has_op_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_op_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryNotificationsResponse_Notification::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryNotificationsResponse_Notification::clear_op_id() {
  op_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_id();
}
inline const ::std::string& QueryNotificationsResponse_Notification::op_id() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.op_id)
  return op_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_Notification::set_op_id(const ::std::string& value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.op_id)
}
inline void QueryNotificationsResponse_Notification::set_op_id(const char* value) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.Notification.op_id)
}
inline void QueryNotificationsResponse_Notification::set_op_id(const char* value, size_t size) {
  set_has_op_id();
  op_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.Notification.op_id)
}
inline ::std::string* QueryNotificationsResponse_Notification::mutable_op_id() {
  set_has_op_id();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.op_id)
  return op_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryNotificationsResponse_Notification::release_op_id() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.op_id)
  clear_has_op_id();
  return op_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse_Notification::set_allocated_op_id(::std::string* op_id) {
  if (op_id != NULL) {
    set_has_op_id();
  } else {
    clear_has_op_id();
  }
  op_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_id);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.op_id)
}

// optional double timestamp = 4;
inline bool QueryNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryNotificationsResponse_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double QueryNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
inline void QueryNotificationsResponse_Notification::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.Notification.timestamp)
}

// optional .InvalidateMetadata invalidate = 5;
inline bool QueryNotificationsResponse_Notification::has_invalidate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_invalidate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryNotificationsResponse_Notification::clear_has_invalidate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryNotificationsResponse_Notification::clear_invalidate() {
  if (invalidate_ != NULL) invalidate_->::InvalidateMetadata::Clear();
  clear_has_invalidate();
}
inline const ::InvalidateMetadata& QueryNotificationsResponse_Notification::invalidate() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.invalidate)
  return invalidate_ != NULL ? *invalidate_
                         : *::InvalidateMetadata::internal_default_instance();
}
inline ::InvalidateMetadata* QueryNotificationsResponse_Notification::mutable_invalidate() {
  set_has_invalidate();
  if (invalidate_ == NULL) {
    invalidate_ = new ::InvalidateMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.invalidate)
  return invalidate_;
}
inline ::InvalidateMetadata* QueryNotificationsResponse_Notification::release_invalidate() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.invalidate)
  clear_has_invalidate();
  ::InvalidateMetadata* temp = invalidate_;
  invalidate_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_Notification::set_allocated_invalidate(::InvalidateMetadata* invalidate) {
  delete invalidate_;
  invalidate_ = invalidate;
  if (invalidate) {
    set_has_invalidate();
  } else {
    clear_has_invalidate();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.invalidate)
}

// optional .QueryNotificationsResponse.InlineInvalidation inline_invalidate = 6;
inline bool QueryNotificationsResponse_Notification::has_inline_invalidate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryNotificationsResponse_Notification::set_has_inline_invalidate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryNotificationsResponse_Notification::clear_has_inline_invalidate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryNotificationsResponse_Notification::clear_inline_invalidate() {
  if (inline_invalidate_ != NULL) inline_invalidate_->::QueryNotificationsResponse_InlineInvalidation::Clear();
  clear_has_inline_invalidate();
}
inline const ::QueryNotificationsResponse_InlineInvalidation& QueryNotificationsResponse_Notification::inline_invalidate() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.Notification.inline_invalidate)
  return inline_invalidate_ != NULL ? *inline_invalidate_
                         : *::QueryNotificationsResponse_InlineInvalidation::internal_default_instance();
}
inline ::QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_Notification::mutable_inline_invalidate() {
  set_has_inline_invalidate();
  if (inline_invalidate_ == NULL) {
    inline_invalidate_ = new ::QueryNotificationsResponse_InlineInvalidation;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.Notification.inline_invalidate)
  return inline_invalidate_;
}
inline ::QueryNotificationsResponse_InlineInvalidation* QueryNotificationsResponse_Notification::release_inline_invalidate() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.Notification.inline_invalidate)
  clear_has_inline_invalidate();
  ::QueryNotificationsResponse_InlineInvalidation* temp = inline_invalidate_;
  inline_invalidate_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse_Notification::set_allocated_inline_invalidate(::QueryNotificationsResponse_InlineInvalidation* inline_invalidate) {
  delete inline_invalidate_;
  inline_invalidate_ = inline_invalidate;
  if (inline_invalidate) {
    set_has_inline_invalidate();
  } else {
    clear_has_inline_invalidate();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.Notification.inline_invalidate)
}

inline const QueryNotificationsResponse_Notification* QueryNotificationsResponse_Notification::internal_default_instance() {
  return &QueryNotificationsResponse_Notification_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryNotificationsResponse

// optional .Headers headers = 1;
inline bool QueryNotificationsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryNotificationsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryNotificationsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryNotificationsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryNotificationsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryNotificationsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.headers)
  return headers_;
}
inline ::Headers* QueryNotificationsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryNotificationsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.headers)
}

// optional string last_key = 2;
inline bool QueryNotificationsResponse::has_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryNotificationsResponse::set_has_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryNotificationsResponse::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryNotificationsResponse::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
inline const ::std::string& QueryNotificationsResponse::last_key() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.last_key)
}
inline void QueryNotificationsResponse::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryNotificationsResponse.last_key)
}
inline void QueryNotificationsResponse::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryNotificationsResponse.last_key)
}
inline ::std::string* QueryNotificationsResponse::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryNotificationsResponse::release_last_key() {
  // @@protoc_insertion_point(field_release:QueryNotificationsResponse.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryNotificationsResponse::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryNotificationsResponse.last_key)
}

// repeated .QueryNotificationsResponse.Notification notifications = 3;
inline int QueryNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
inline void QueryNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
inline const ::QueryNotificationsResponse_Notification& QueryNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.notifications)
  return notifications_.Get(index);
}
inline ::QueryNotificationsResponse_Notification* QueryNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:QueryNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
inline ::QueryNotificationsResponse_Notification* QueryNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:QueryNotificationsResponse.notifications)
  return notifications_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >*
QueryNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:QueryNotificationsResponse.notifications)
  return &notifications_;
}
inline const ::google::protobuf::RepeatedPtrField< ::QueryNotificationsResponse_Notification >&
QueryNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:QueryNotificationsResponse.notifications)
  return notifications_;
}

// optional double retry_after = 4;
inline bool QueryNotificationsResponse::has_retry_after() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryNotificationsResponse::set_has_retry_after() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryNotificationsResponse::clear_has_retry_after() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryNotificationsResponse::clear_retry_after() {
  retry_after_ = 0;
  clear_has_retry_after();
}
inline double QueryNotificationsResponse::retry_after() const {
  // @@protoc_insertion_point(field_get:QueryNotificationsResponse.retry_after)
  return retry_after_;
}
inline void QueryNotificationsResponse::set_retry_after(double value) {
  set_has_retry_after();
  retry_after_ = value;
  // @@protoc_insertion_point(field_set:QueryNotificationsResponse.retry_after)
}

inline const QueryNotificationsResponse* QueryNotificationsResponse::internal_default_instance() {
  return &QueryNotificationsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryUsersResponse_User

// optional .ContactMetadata contact = 3;
inline bool QueryUsersResponse_User::has_contact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUsersResponse_User::set_has_contact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUsersResponse_User::clear_has_contact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUsersResponse_User::clear_contact() {
  if (contact_ != NULL) contact_->::ContactMetadata::Clear();
  clear_has_contact();
}
inline const ::ContactMetadata& QueryUsersResponse_User::contact() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.contact)
  return contact_ != NULL ? *contact_
                         : *::ContactMetadata::internal_default_instance();
}
inline ::ContactMetadata* QueryUsersResponse_User::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) {
    contact_ = new ::ContactMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.contact)
  return contact_;
}
inline ::ContactMetadata* QueryUsersResponse_User::release_contact() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.User.contact)
  clear_has_contact();
  ::ContactMetadata* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void QueryUsersResponse_User::set_allocated_contact(::ContactMetadata* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.User.contact)
}

// repeated .ServerSubscriptionMetadata subscriptions = 4;
inline int QueryUsersResponse_User::subscriptions_size() const {
  return subscriptions_.size();
}
inline void QueryUsersResponse_User::clear_subscriptions() {
  subscriptions_.Clear();
}
inline const ::ServerSubscriptionMetadata& QueryUsersResponse_User::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Get(index);
}
inline ::ServerSubscriptionMetadata* QueryUsersResponse_User::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Mutable(index);
}
inline ::ServerSubscriptionMetadata* QueryUsersResponse_User::add_subscriptions() {
  // @@protoc_insertion_point(field_add:QueryUsersResponse.User.subscriptions)
  return subscriptions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >*
QueryUsersResponse_User::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:QueryUsersResponse.User.subscriptions)
  return &subscriptions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerSubscriptionMetadata >&
QueryUsersResponse_User::subscriptions() const {
  // @@protoc_insertion_point(field_list:QueryUsersResponse.User.subscriptions)
  return subscriptions_;
}

// optional .AccountSettingsMetadata account_settings = 5;
inline bool QueryUsersResponse_User::has_account_settings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryUsersResponse_User::set_has_account_settings() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryUsersResponse_User::clear_has_account_settings() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryUsersResponse_User::clear_account_settings() {
  if (account_settings_ != NULL) account_settings_->::AccountSettingsMetadata::Clear();
  clear_has_account_settings();
}
inline const ::AccountSettingsMetadata& QueryUsersResponse_User::account_settings() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.account_settings)
  return account_settings_ != NULL ? *account_settings_
                         : *::AccountSettingsMetadata::internal_default_instance();
}
inline ::AccountSettingsMetadata* QueryUsersResponse_User::mutable_account_settings() {
  set_has_account_settings();
  if (account_settings_ == NULL) {
    account_settings_ = new ::AccountSettingsMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.User.account_settings)
  return account_settings_;
}
inline ::AccountSettingsMetadata* QueryUsersResponse_User::release_account_settings() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.User.account_settings)
  clear_has_account_settings();
  ::AccountSettingsMetadata* temp = account_settings_;
  account_settings_ = NULL;
  return temp;
}
inline void QueryUsersResponse_User::set_allocated_account_settings(::AccountSettingsMetadata* account_settings) {
  delete account_settings_;
  account_settings_ = account_settings;
  if (account_settings) {
    set_has_account_settings();
  } else {
    clear_has_account_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.User.account_settings)
}

// optional bool no_password = 7;
inline bool QueryUsersResponse_User::has_no_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryUsersResponse_User::set_has_no_password() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryUsersResponse_User::clear_has_no_password() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryUsersResponse_User::clear_no_password() {
  no_password_ = false;
  clear_has_no_password();
}
inline bool QueryUsersResponse_User::no_password() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.User.no_password)
  return no_password_;
}
inline void QueryUsersResponse_User::set_no_password(bool value) {
  set_has_no_password();
  no_password_ = value;
  // @@protoc_insertion_point(field_set:QueryUsersResponse.User.no_password)
}

inline const QueryUsersResponse_User* QueryUsersResponse_User::internal_default_instance() {
  return &QueryUsersResponse_User_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryUsersResponse

// optional .Headers headers = 1;
inline bool QueryUsersResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUsersResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUsersResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUsersResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryUsersResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryUsersResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.headers)
  return headers_;
}
inline ::Headers* QueryUsersResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryUsersResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryUsersResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryUsersResponse.headers)
}

// repeated group User = 2 { ... };
inline int QueryUsersResponse::user_size() const {
  return user_.size();
}
inline void QueryUsersResponse::clear_user() {
  user_.Clear();
}
inline const ::QueryUsersResponse_User& QueryUsersResponse::user(int index) const {
  // @@protoc_insertion_point(field_get:QueryUsersResponse.user)
  return user_.Get(index);
}
inline ::QueryUsersResponse_User* QueryUsersResponse::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:QueryUsersResponse.user)
  return user_.Mutable(index);
}
inline ::QueryUsersResponse_User* QueryUsersResponse::add_user() {
  // @@protoc_insertion_point(field_add:QueryUsersResponse.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >*
QueryUsersResponse::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:QueryUsersResponse.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::QueryUsersResponse_User >&
QueryUsersResponse::user() const {
  // @@protoc_insertion_point(field_list:QueryUsersResponse.user)
  return user_;
}

inline const QueryUsersResponse* QueryUsersResponse::internal_default_instance() {
  return &QueryUsersResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryViewpointsResponse_FollowerMetadata

// optional int64 follower_id = 1;
inline bool QueryViewpointsResponse_FollowerMetadata::has_follower_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_has_follower_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_has_follower_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_follower_id() {
  follower_id_ = GOOGLE_LONGLONG(0);
  clear_has_follower_id();
}
inline ::google::protobuf::int64 QueryViewpointsResponse_FollowerMetadata::follower_id() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.follower_id)
  return follower_id_;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_follower_id(::google::protobuf::int64 value) {
  set_has_follower_id();
  follower_id_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.follower_id)
}

// optional bool label_removed = 2;
inline bool QueryViewpointsResponse_FollowerMetadata::has_label_removed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_has_label_removed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_has_label_removed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_label_removed() {
  label_removed_ = false;
  clear_has_label_removed();
}
inline bool QueryViewpointsResponse_FollowerMetadata::label_removed() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.label_removed)
  return label_removed_;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_label_removed(bool value) {
  set_has_label_removed();
  label_removed_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.label_removed)
}

// optional bool label_unrevivable = 3;
inline bool QueryViewpointsResponse_FollowerMetadata::has_label_unrevivable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_has_label_unrevivable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_has_label_unrevivable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryViewpointsResponse_FollowerMetadata::clear_label_unrevivable() {
  label_unrevivable_ = false;
  clear_has_label_unrevivable();
}
inline bool QueryViewpointsResponse_FollowerMetadata::label_unrevivable() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.FollowerMetadata.label_unrevivable)
  return label_unrevivable_;
}
inline void QueryViewpointsResponse_FollowerMetadata::set_label_unrevivable(bool value) {
  set_has_label_unrevivable();
  label_unrevivable_ = value;
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.FollowerMetadata.label_unrevivable)
}

inline const QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_FollowerMetadata::internal_default_instance() {
  return &QueryViewpointsResponse_FollowerMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryViewpointsResponse_Viewpoint

// optional string follower_last_key = 1;
inline bool QueryViewpointsResponse_Viewpoint::has_follower_last_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryViewpointsResponse_Viewpoint::set_has_follower_last_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_has_follower_last_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_follower_last_key() {
  follower_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_follower_last_key();
}
inline const ::std::string& QueryViewpointsResponse_Viewpoint::follower_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.follower_last_key)
  return follower_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const ::std::string& value) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const char* value) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_follower_last_key(const char* value, size_t size) {
  set_has_follower_last_key();
  follower_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.follower_last_key)
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::mutable_follower_last_key() {
  set_has_follower_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.follower_last_key)
  return follower_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::release_follower_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.follower_last_key)
  clear_has_follower_last_key();
  return follower_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_allocated_follower_last_key(::std::string* follower_last_key) {
  if (follower_last_key != NULL) {
    set_has_follower_last_key();
  } else {
    clear_has_follower_last_key();
  }
  follower_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), follower_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.follower_last_key)
}

// optional string activity_last_key = 2;
inline bool QueryViewpointsResponse_Viewpoint::has_activity_last_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryViewpointsResponse_Viewpoint::set_has_activity_last_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_has_activity_last_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_activity_last_key() {
  activity_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activity_last_key();
}
inline const ::std::string& QueryViewpointsResponse_Viewpoint::activity_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.activity_last_key)
  return activity_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const ::std::string& value) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const char* value) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_activity_last_key(const char* value, size_t size) {
  set_has_activity_last_key();
  activity_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.activity_last_key)
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::mutable_activity_last_key() {
  set_has_activity_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.activity_last_key)
  return activity_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::release_activity_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.activity_last_key)
  clear_has_activity_last_key();
  return activity_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_allocated_activity_last_key(::std::string* activity_last_key) {
  if (activity_last_key != NULL) {
    set_has_activity_last_key();
  } else {
    clear_has_activity_last_key();
  }
  activity_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activity_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.activity_last_key)
}

// optional string episode_last_key = 3;
inline bool QueryViewpointsResponse_Viewpoint::has_episode_last_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryViewpointsResponse_Viewpoint::set_has_episode_last_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_has_episode_last_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_episode_last_key() {
  episode_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_last_key();
}
inline const ::std::string& QueryViewpointsResponse_Viewpoint::episode_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.episode_last_key)
  return episode_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const ::std::string& value) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const char* value) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_episode_last_key(const char* value, size_t size) {
  set_has_episode_last_key();
  episode_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.episode_last_key)
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::mutable_episode_last_key() {
  set_has_episode_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.episode_last_key)
  return episode_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::release_episode_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.episode_last_key)
  clear_has_episode_last_key();
  return episode_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_allocated_episode_last_key(::std::string* episode_last_key) {
  if (episode_last_key != NULL) {
    set_has_episode_last_key();
  } else {
    clear_has_episode_last_key();
  }
  episode_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.episode_last_key)
}

// optional string comment_last_key = 4;
inline bool QueryViewpointsResponse_Viewpoint::has_comment_last_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryViewpointsResponse_Viewpoint::set_has_comment_last_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_has_comment_last_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_comment_last_key() {
  comment_last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment_last_key();
}
inline const ::std::string& QueryViewpointsResponse_Viewpoint::comment_last_key() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.comment_last_key)
  return comment_last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const ::std::string& value) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const char* value) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
inline void QueryViewpointsResponse_Viewpoint::set_comment_last_key(const char* value, size_t size) {
  set_has_comment_last_key();
  comment_last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryViewpointsResponse.Viewpoint.comment_last_key)
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::mutable_comment_last_key() {
  set_has_comment_last_key();
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.comment_last_key)
  return comment_last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryViewpointsResponse_Viewpoint::release_comment_last_key() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.comment_last_key)
  clear_has_comment_last_key();
  return comment_last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryViewpointsResponse_Viewpoint::set_allocated_comment_last_key(::std::string* comment_last_key) {
  if (comment_last_key != NULL) {
    set_has_comment_last_key();
  } else {
    clear_has_comment_last_key();
  }
  comment_last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment_last_key);
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.comment_last_key)
}

// optional .ViewpointMetadata metadata = 5;
inline bool QueryViewpointsResponse_Viewpoint::has_metadata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryViewpointsResponse_Viewpoint::set_has_metadata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryViewpointsResponse_Viewpoint::clear_metadata() {
  if (metadata_ != NULL) metadata_->::ViewpointMetadata::Clear();
  clear_has_metadata();
}
inline const ::ViewpointMetadata& QueryViewpointsResponse_Viewpoint::metadata() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::ViewpointMetadata::internal_default_instance();
}
inline ::ViewpointMetadata* QueryViewpointsResponse_Viewpoint::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::ViewpointMetadata;
  }
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.metadata)
  return metadata_;
}
inline ::ViewpointMetadata* QueryViewpointsResponse_Viewpoint::release_metadata() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.Viewpoint.metadata)
  clear_has_metadata();
  ::ViewpointMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void QueryViewpointsResponse_Viewpoint::set_allocated_metadata(::ViewpointMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.Viewpoint.metadata)
}

// repeated .QueryViewpointsResponse.FollowerMetadata followers = 6;
inline int QueryViewpointsResponse_Viewpoint::followers_size() const {
  return followers_.size();
}
inline void QueryViewpointsResponse_Viewpoint::clear_followers() {
  followers_.Clear();
}
inline const ::QueryViewpointsResponse_FollowerMetadata& QueryViewpointsResponse_Viewpoint::followers(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Get(index);
}
inline ::QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_Viewpoint::mutable_followers(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Mutable(index);
}
inline ::QueryViewpointsResponse_FollowerMetadata* QueryViewpointsResponse_Viewpoint::add_followers() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.followers)
  return followers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_followers() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.followers)
  return &followers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_FollowerMetadata >&
QueryViewpointsResponse_Viewpoint::followers() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.followers)
  return followers_;
}

// repeated .ActivityMetadata activities = 7;
inline int QueryViewpointsResponse_Viewpoint::activities_size() const {
  return activities_.size();
}
inline void QueryViewpointsResponse_Viewpoint::clear_activities() {
  activities_.Clear();
}
inline const ::ActivityMetadata& QueryViewpointsResponse_Viewpoint::activities(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Get(index);
}
inline ::ActivityMetadata* QueryViewpointsResponse_Viewpoint::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Mutable(index);
}
inline ::ActivityMetadata* QueryViewpointsResponse_Viewpoint::add_activities() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.activities)
  return activities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.activities)
  return &activities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata >&
QueryViewpointsResponse_Viewpoint::activities() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.activities)
  return activities_;
}

// repeated .EpisodeMetadata episodes = 8;
inline int QueryViewpointsResponse_Viewpoint::episodes_size() const {
  return episodes_.size();
}
inline void QueryViewpointsResponse_Viewpoint::clear_episodes() {
  episodes_.Clear();
}
inline const ::EpisodeMetadata& QueryViewpointsResponse_Viewpoint::episodes(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Get(index);
}
inline ::EpisodeMetadata* QueryViewpointsResponse_Viewpoint::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Mutable(index);
}
inline ::EpisodeMetadata* QueryViewpointsResponse_Viewpoint::add_episodes() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::EpisodeMetadata >&
QueryViewpointsResponse_Viewpoint::episodes() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.episodes)
  return episodes_;
}

// repeated .CommentMetadata comments = 9;
inline int QueryViewpointsResponse_Viewpoint::comments_size() const {
  return comments_.size();
}
inline void QueryViewpointsResponse_Viewpoint::clear_comments() {
  comments_.Clear();
}
inline const ::CommentMetadata& QueryViewpointsResponse_Viewpoint::comments(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Get(index);
}
inline ::CommentMetadata* QueryViewpointsResponse_Viewpoint::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Mutable(index);
}
inline ::CommentMetadata* QueryViewpointsResponse_Viewpoint::add_comments() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.Viewpoint.comments)
  return comments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CommentMetadata >*
QueryViewpointsResponse_Viewpoint::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.Viewpoint.comments)
  return &comments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CommentMetadata >&
QueryViewpointsResponse_Viewpoint::comments() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.Viewpoint.comments)
  return comments_;
}

inline const QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse_Viewpoint::internal_default_instance() {
  return &QueryViewpointsResponse_Viewpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryViewpointsResponse

// optional .Headers headers = 1;
inline bool QueryViewpointsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryViewpointsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryViewpointsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryViewpointsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& QueryViewpointsResponse::headers() const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* QueryViewpointsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.headers)
  return headers_;
}
inline ::Headers* QueryViewpointsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:QueryViewpointsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void QueryViewpointsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:QueryViewpointsResponse.headers)
}

// repeated .QueryViewpointsResponse.Viewpoint viewpoints = 2;
inline int QueryViewpointsResponse::viewpoints_size() const {
  return viewpoints_.size();
}
inline void QueryViewpointsResponse::clear_viewpoints() {
  viewpoints_.Clear();
}
inline const ::QueryViewpointsResponse_Viewpoint& QueryViewpointsResponse::viewpoints(int index) const {
  // @@protoc_insertion_point(field_get:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Get(index);
}
inline ::QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse::mutable_viewpoints(int index) {
  // @@protoc_insertion_point(field_mutable:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Mutable(index);
}
inline ::QueryViewpointsResponse_Viewpoint* QueryViewpointsResponse::add_viewpoints() {
  // @@protoc_insertion_point(field_add:QueryViewpointsResponse.viewpoints)
  return viewpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >*
QueryViewpointsResponse::mutable_viewpoints() {
  // @@protoc_insertion_point(field_mutable_list:QueryViewpointsResponse.viewpoints)
  return &viewpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::QueryViewpointsResponse_Viewpoint >&
QueryViewpointsResponse::viewpoints() const {
  // @@protoc_insertion_point(field_list:QueryViewpointsResponse.viewpoints)
  return viewpoints_;
}

inline const QueryViewpointsResponse* QueryViewpointsResponse::internal_default_instance() {
  return &QueryViewpointsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ResolveContactsResponse

// optional .Headers headers = 1;
inline bool ResolveContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResolveContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResolveContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResolveContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& ResolveContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:ResolveContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* ResolveContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:ResolveContactsResponse.headers)
  return headers_;
}
inline ::Headers* ResolveContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:ResolveContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void ResolveContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:ResolveContactsResponse.headers)
}

// repeated .ContactMetadata contacts = 2;
inline int ResolveContactsResponse::contacts_size() const {
  return contacts_.size();
}
inline void ResolveContactsResponse::clear_contacts() {
  contacts_.Clear();
}
inline const ::ContactMetadata& ResolveContactsResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:ResolveContactsResponse.contacts)
  return contacts_.Get(index);
}
inline ::ContactMetadata* ResolveContactsResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:ResolveContactsResponse.contacts)
  return contacts_.Mutable(index);
}
inline ::ContactMetadata* ResolveContactsResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:ResolveContactsResponse.contacts)
  return contacts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
ResolveContactsResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:ResolveContactsResponse.contacts)
  return &contacts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
ResolveContactsResponse::contacts() const {
  // @@protoc_insertion_point(field_list:ResolveContactsResponse.contacts)
  return contacts_;
}

inline const ResolveContactsResponse* ResolveContactsResponse::internal_default_instance() {
  return &ResolveContactsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// RsvpResponse_Rsvp

// optional string episode_id = 1;
inline bool RsvpResponse_Rsvp::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RsvpResponse_Rsvp::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RsvpResponse_Rsvp::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RsvpResponse_Rsvp::clear_episode_id() {
  episode_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_id();
}
inline const ::std::string& RsvpResponse_Rsvp::episode_id() const {
  // @@protoc_insertion_point(field_get:RsvpResponse.Rsvp.episode_id)
  return episode_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RsvpResponse_Rsvp::set_episode_id(const ::std::string& value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RsvpResponse.Rsvp.episode_id)
}
inline void RsvpResponse_Rsvp::set_episode_id(const char* value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RsvpResponse.Rsvp.episode_id)
}
inline void RsvpResponse_Rsvp::set_episode_id(const char* value, size_t size) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RsvpResponse.Rsvp.episode_id)
}
inline ::std::string* RsvpResponse_Rsvp::mutable_episode_id() {
  set_has_episode_id();
  // @@protoc_insertion_point(field_mutable:RsvpResponse.Rsvp.episode_id)
  return episode_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RsvpResponse_Rsvp::release_episode_id() {
  // @@protoc_insertion_point(field_release:RsvpResponse.Rsvp.episode_id)
  clear_has_episode_id();
  return episode_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RsvpResponse_Rsvp::set_allocated_episode_id(::std::string* episode_id) {
  if (episode_id != NULL) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  episode_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_id);
  // @@protoc_insertion_point(field_set_allocated:RsvpResponse.Rsvp.episode_id)
}

// repeated string labels = 2;
inline int RsvpResponse_Rsvp::labels_size() const {
  return labels_.size();
}
inline void RsvpResponse_Rsvp::clear_labels() {
  labels_.Clear();
}
inline const ::std::string& RsvpResponse_Rsvp::labels(int index) const {
  // @@protoc_insertion_point(field_get:RsvpResponse.Rsvp.labels)
  return labels_.Get(index);
}
inline ::std::string* RsvpResponse_Rsvp::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:RsvpResponse.Rsvp.labels)
  return labels_.Mutable(index);
}
inline void RsvpResponse_Rsvp::set_labels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RsvpResponse.Rsvp.labels)
  labels_.Mutable(index)->assign(value);
}
inline void RsvpResponse_Rsvp::set_labels(int index, const char* value) {
  labels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:RsvpResponse.Rsvp.labels)
}
inline void RsvpResponse_Rsvp::set_labels(int index, const char* value, size_t size) {
  labels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RsvpResponse.Rsvp.labels)
}
inline ::std::string* RsvpResponse_Rsvp::add_labels() {
  // @@protoc_insertion_point(field_add_mutable:RsvpResponse.Rsvp.labels)
  return labels_.Add();
}
inline void RsvpResponse_Rsvp::add_labels(const ::std::string& value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:RsvpResponse.Rsvp.labels)
}
inline void RsvpResponse_Rsvp::add_labels(const char* value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:RsvpResponse.Rsvp.labels)
}
inline void RsvpResponse_Rsvp::add_labels(const char* value, size_t size) {
  labels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:RsvpResponse.Rsvp.labels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RsvpResponse_Rsvp::labels() const {
  // @@protoc_insertion_point(field_list:RsvpResponse.Rsvp.labels)
  return labels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RsvpResponse_Rsvp::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:RsvpResponse.Rsvp.labels)
  return &labels_;
}

inline const RsvpResponse_Rsvp* RsvpResponse_Rsvp::internal_default_instance() {
  return &RsvpResponse_Rsvp_default_instance_.get();
}
// -------------------------------------------------------------------

// RsvpResponse

// optional .Headers headers = 1;
inline bool RsvpResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RsvpResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RsvpResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RsvpResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& RsvpResponse::headers() const {
  // @@protoc_insertion_point(field_get:RsvpResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* RsvpResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:RsvpResponse.headers)
  return headers_;
}
inline ::Headers* RsvpResponse::release_headers() {
  // @@protoc_insertion_point(field_release:RsvpResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void RsvpResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:RsvpResponse.headers)
}

// repeated .RsvpResponse.Rsvp rsvps = 2;
inline int RsvpResponse::rsvps_size() const {
  return rsvps_.size();
}
inline void RsvpResponse::clear_rsvps() {
  rsvps_.Clear();
}
inline const ::RsvpResponse_Rsvp& RsvpResponse::rsvps(int index) const {
  // @@protoc_insertion_point(field_get:RsvpResponse.rsvps)
  return rsvps_.Get(index);
}
inline ::RsvpResponse_Rsvp* RsvpResponse::mutable_rsvps(int index) {
  // @@protoc_insertion_point(field_mutable:RsvpResponse.rsvps)
  return rsvps_.Mutable(index);
}
inline ::RsvpResponse_Rsvp* RsvpResponse::add_rsvps() {
  // @@protoc_insertion_point(field_add:RsvpResponse.rsvps)
  return rsvps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >*
RsvpResponse::mutable_rsvps() {
  // @@protoc_insertion_point(field_mutable_list:RsvpResponse.rsvps)
  return &rsvps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RsvpResponse_Rsvp >&
RsvpResponse::rsvps() const {
  // @@protoc_insertion_point(field_list:RsvpResponse.rsvps)
  return rsvps_;
}

inline const RsvpResponse* RsvpResponse::internal_default_instance() {
  return &RsvpResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadContactsResponse

// optional .Headers headers = 1;
inline bool UploadContactsResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadContactsResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadContactsResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadContactsResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& UploadContactsResponse::headers() const {
  // @@protoc_insertion_point(field_get:UploadContactsResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* UploadContactsResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:UploadContactsResponse.headers)
  return headers_;
}
inline ::Headers* UploadContactsResponse::release_headers() {
  // @@protoc_insertion_point(field_release:UploadContactsResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void UploadContactsResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:UploadContactsResponse.headers)
}

// repeated string contact_ids = 2;
inline int UploadContactsResponse::contact_ids_size() const {
  return contact_ids_.size();
}
inline void UploadContactsResponse::clear_contact_ids() {
  contact_ids_.Clear();
}
inline const ::std::string& UploadContactsResponse::contact_ids(int index) const {
  // @@protoc_insertion_point(field_get:UploadContactsResponse.contact_ids)
  return contact_ids_.Get(index);
}
inline ::std::string* UploadContactsResponse::mutable_contact_ids(int index) {
  // @@protoc_insertion_point(field_mutable:UploadContactsResponse.contact_ids)
  return contact_ids_.Mutable(index);
}
inline void UploadContactsResponse::set_contact_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UploadContactsResponse.contact_ids)
  contact_ids_.Mutable(index)->assign(value);
}
inline void UploadContactsResponse::set_contact_ids(int index, const char* value) {
  contact_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UploadContactsResponse.contact_ids)
}
inline void UploadContactsResponse::set_contact_ids(int index, const char* value, size_t size) {
  contact_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UploadContactsResponse.contact_ids)
}
inline ::std::string* UploadContactsResponse::add_contact_ids() {
  // @@protoc_insertion_point(field_add_mutable:UploadContactsResponse.contact_ids)
  return contact_ids_.Add();
}
inline void UploadContactsResponse::add_contact_ids(const ::std::string& value) {
  contact_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UploadContactsResponse.contact_ids)
}
inline void UploadContactsResponse::add_contact_ids(const char* value) {
  contact_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UploadContactsResponse.contact_ids)
}
inline void UploadContactsResponse::add_contact_ids(const char* value, size_t size) {
  contact_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UploadContactsResponse.contact_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UploadContactsResponse::contact_ids() const {
  // @@protoc_insertion_point(field_list:UploadContactsResponse.contact_ids)
  return contact_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UploadContactsResponse::mutable_contact_ids() {
  // @@protoc_insertion_point(field_mutable_list:UploadContactsResponse.contact_ids)
  return &contact_ids_;
}

inline const UploadContactsResponse* UploadContactsResponse::internal_default_instance() {
  return &UploadContactsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadEpisodeResponse

// optional .Headers headers = 1;
inline bool UploadEpisodeResponse::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadEpisodeResponse::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadEpisodeResponse::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadEpisodeResponse::clear_headers() {
  if (headers_ != NULL) headers_->::Headers::Clear();
  clear_has_headers();
}
inline const ::Headers& UploadEpisodeResponse::headers() const {
  // @@protoc_insertion_point(field_get:UploadEpisodeResponse.headers)
  return headers_ != NULL ? *headers_
                         : *::Headers::internal_default_instance();
}
inline ::Headers* UploadEpisodeResponse::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::Headers;
  }
  // @@protoc_insertion_point(field_mutable:UploadEpisodeResponse.headers)
  return headers_;
}
inline ::Headers* UploadEpisodeResponse::release_headers() {
  // @@protoc_insertion_point(field_release:UploadEpisodeResponse.headers)
  clear_has_headers();
  ::Headers* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void UploadEpisodeResponse::set_allocated_headers(::Headers* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:UploadEpisodeResponse.headers)
}

// repeated .PhotoUpdate photos = 2;
inline int UploadEpisodeResponse::photos_size() const {
  return photos_.size();
}
inline void UploadEpisodeResponse::clear_photos() {
  photos_.Clear();
}
inline const ::PhotoUpdate& UploadEpisodeResponse::photos(int index) const {
  // @@protoc_insertion_point(field_get:UploadEpisodeResponse.photos)
  return photos_.Get(index);
}
inline ::PhotoUpdate* UploadEpisodeResponse::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:UploadEpisodeResponse.photos)
  return photos_.Mutable(index);
}
inline ::PhotoUpdate* UploadEpisodeResponse::add_photos() {
  // @@protoc_insertion_point(field_add:UploadEpisodeResponse.photos)
  return photos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >*
UploadEpisodeResponse::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:UploadEpisodeResponse.photos)
  return &photos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PhotoUpdate >&
UploadEpisodeResponse::photos() const {
  // @@protoc_insertion_point(field_list:UploadEpisodeResponse.photos)
  return photos_;
}

inline const UploadEpisodeResponse* UploadEpisodeResponse::internal_default_instance() {
  return &UploadEpisodeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// OpHeaders

// optional int64 op_id = 1;
inline bool OpHeaders::has_op_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpHeaders::set_has_op_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpHeaders::clear_has_op_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpHeaders::clear_op_id() {
  op_id_ = GOOGLE_LONGLONG(0);
  clear_has_op_id();
}
inline ::google::protobuf::int64 OpHeaders::op_id() const {
  // @@protoc_insertion_point(field_get:OpHeaders.op_id)
  return op_id_;
}
inline void OpHeaders::set_op_id(::google::protobuf::int64 value) {
  set_has_op_id();
  op_id_ = value;
  // @@protoc_insertion_point(field_set:OpHeaders.op_id)
}

// optional double op_timestamp = 2;
inline bool OpHeaders::has_op_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpHeaders::set_has_op_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpHeaders::clear_has_op_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpHeaders::clear_op_timestamp() {
  op_timestamp_ = 0;
  clear_has_op_timestamp();
}
inline double OpHeaders::op_timestamp() const {
  // @@protoc_insertion_point(field_get:OpHeaders.op_timestamp)
  return op_timestamp_;
}
inline void OpHeaders::set_op_timestamp(double value) {
  set_has_op_timestamp();
  op_timestamp_ = value;
  // @@protoc_insertion_point(field_set:OpHeaders.op_timestamp)
}

inline const OpHeaders* OpHeaders::internal_default_instance() {
  return &OpHeaders_default_instance_.get();
}
// -------------------------------------------------------------------

// ServerOperation_RemovePhotos

// repeated .ActivityMetadata.Episode episodes = 1;
inline int ServerOperation_RemovePhotos::episodes_size() const {
  return episodes_.size();
}
inline void ServerOperation_RemovePhotos::clear_episodes() {
  episodes_.Clear();
}
inline const ::ActivityMetadata_Episode& ServerOperation_RemovePhotos::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ServerOperation.RemovePhotos.episodes)
  return episodes_.Get(index);
}
inline ::ActivityMetadata_Episode* ServerOperation_RemovePhotos::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ServerOperation.RemovePhotos.episodes)
  return episodes_.Mutable(index);
}
inline ::ActivityMetadata_Episode* ServerOperation_RemovePhotos::add_episodes() {
  // @@protoc_insertion_point(field_add:ServerOperation.RemovePhotos.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ServerOperation_RemovePhotos::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ServerOperation.RemovePhotos.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ServerOperation_RemovePhotos::episodes() const {
  // @@protoc_insertion_point(field_list:ServerOperation.RemovePhotos.episodes)
  return episodes_;
}

inline const ServerOperation_RemovePhotos* ServerOperation_RemovePhotos::internal_default_instance() {
  return &ServerOperation_RemovePhotos_default_instance_.get();
}
// -------------------------------------------------------------------

// ServerOperation

// optional .OpHeaders headers = 1;
inline bool ServerOperation::has_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerOperation::set_has_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerOperation::clear_has_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerOperation::clear_headers() {
  if (headers_ != NULL) headers_->::OpHeaders::Clear();
  clear_has_headers();
}
inline const ::OpHeaders& ServerOperation::headers() const {
  // @@protoc_insertion_point(field_get:ServerOperation.headers)
  return headers_ != NULL ? *headers_
                         : *::OpHeaders::internal_default_instance();
}
inline ::OpHeaders* ServerOperation::mutable_headers() {
  set_has_headers();
  if (headers_ == NULL) {
    headers_ = new ::OpHeaders;
  }
  // @@protoc_insertion_point(field_mutable:ServerOperation.headers)
  return headers_;
}
inline ::OpHeaders* ServerOperation::release_headers() {
  // @@protoc_insertion_point(field_release:ServerOperation.headers)
  clear_has_headers();
  ::OpHeaders* temp = headers_;
  headers_ = NULL;
  return temp;
}
inline void ServerOperation::set_allocated_headers(::OpHeaders* headers) {
  delete headers_;
  headers_ = headers;
  if (headers) {
    set_has_headers();
  } else {
    clear_has_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerOperation.headers)
}

// optional int64 upload_activity = 2;
inline bool ServerOperation::has_upload_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerOperation::set_has_upload_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerOperation::clear_has_upload_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerOperation::clear_upload_activity() {
  upload_activity_ = GOOGLE_LONGLONG(0);
  clear_has_upload_activity();
}
inline ::google::protobuf::int64 ServerOperation::upload_activity() const {
  // @@protoc_insertion_point(field_get:ServerOperation.upload_activity)
  return upload_activity_;
}
inline void ServerOperation::set_upload_activity(::google::protobuf::int64 value) {
  set_has_upload_activity();
  upload_activity_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.upload_activity)
}

// optional int64 update_photo = 3;
inline bool ServerOperation::has_update_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerOperation::set_has_update_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerOperation::clear_has_update_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerOperation::clear_update_photo() {
  update_photo_ = GOOGLE_LONGLONG(0);
  clear_has_update_photo();
}
inline ::google::protobuf::int64 ServerOperation::update_photo() const {
  // @@protoc_insertion_point(field_get:ServerOperation.update_photo)
  return update_photo_;
}
inline void ServerOperation::set_update_photo(::google::protobuf::int64 value) {
  set_has_update_photo();
  update_photo_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.update_photo)
}

// optional .ServerOperation.RemovePhotos remove_photos = 4;
inline bool ServerOperation::has_remove_photos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerOperation::set_has_remove_photos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerOperation::clear_has_remove_photos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerOperation::clear_remove_photos() {
  if (remove_photos_ != NULL) remove_photos_->::ServerOperation_RemovePhotos::Clear();
  clear_has_remove_photos();
}
inline const ::ServerOperation_RemovePhotos& ServerOperation::remove_photos() const {
  // @@protoc_insertion_point(field_get:ServerOperation.remove_photos)
  return remove_photos_ != NULL ? *remove_photos_
                         : *::ServerOperation_RemovePhotos::internal_default_instance();
}
inline ::ServerOperation_RemovePhotos* ServerOperation::mutable_remove_photos() {
  set_has_remove_photos();
  if (remove_photos_ == NULL) {
    remove_photos_ = new ::ServerOperation_RemovePhotos;
  }
  // @@protoc_insertion_point(field_mutable:ServerOperation.remove_photos)
  return remove_photos_;
}
inline ::ServerOperation_RemovePhotos* ServerOperation::release_remove_photos() {
  // @@protoc_insertion_point(field_release:ServerOperation.remove_photos)
  clear_has_remove_photos();
  ::ServerOperation_RemovePhotos* temp = remove_photos_;
  remove_photos_ = NULL;
  return temp;
}
inline void ServerOperation::set_allocated_remove_photos(::ServerOperation_RemovePhotos* remove_photos) {
  delete remove_photos_;
  remove_photos_ = remove_photos;
  if (remove_photos) {
    set_has_remove_photos();
  } else {
    clear_has_remove_photos();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerOperation.remove_photos)
}

// optional int64 update_viewpoint = 5;
inline bool ServerOperation::has_update_viewpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerOperation::set_has_update_viewpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerOperation::clear_has_update_viewpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerOperation::clear_update_viewpoint() {
  update_viewpoint_ = GOOGLE_LONGLONG(0);
  clear_has_update_viewpoint();
}
inline ::google::protobuf::int64 ServerOperation::update_viewpoint() const {
  // @@protoc_insertion_point(field_get:ServerOperation.update_viewpoint)
  return update_viewpoint_;
}
inline void ServerOperation::set_update_viewpoint(::google::protobuf::int64 value) {
  set_has_update_viewpoint();
  update_viewpoint_ = value;
  // @@protoc_insertion_point(field_set:ServerOperation.update_viewpoint)
}

// repeated int32 stats = 6;
inline int ServerOperation::stats_size() const {
  return stats_.size();
}
inline void ServerOperation::clear_stats() {
  stats_.Clear();
}
inline ::google::protobuf::int32 ServerOperation::stats(int index) const {
  // @@protoc_insertion_point(field_get:ServerOperation.stats)
  return stats_.Get(index);
}
inline void ServerOperation::set_stats(int index, ::google::protobuf::int32 value) {
  stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerOperation.stats)
}
inline void ServerOperation::add_stats(::google::protobuf::int32 value) {
  stats_.Add(value);
  // @@protoc_insertion_point(field_add:ServerOperation.stats)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServerOperation::stats() const {
  // @@protoc_insertion_point(field_list:ServerOperation.stats)
  return stats_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServerOperation::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:ServerOperation.stats)
  return &stats_;
}

inline const ServerOperation* ServerOperation::internal_default_instance() {
  return &ServerOperation_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ErrorResponse_ErrorId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ErrorResponse_ErrorId>() {
  return ::ErrorResponse_ErrorId_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Server_2eproto__INCLUDED
