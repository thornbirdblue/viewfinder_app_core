// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InvalidateMetadata.proto

#ifndef PROTOBUF_InvalidateMetadata_2eproto__INCLUDED
#define PROTOBUF_InvalidateMetadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_InvalidateMetadata_2eproto();
void protobuf_InitDefaults_InvalidateMetadata_2eproto();
void protobuf_AssignDesc_InvalidateMetadata_2eproto();
void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

class ContactSelection;
class EpisodeSelection;
class InvalidateMetadata;
class NotificationSelection;
class UserSelection;
class ViewpointSelection;

// ===================================================================

class ContactSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ContactSelection) */ {
 public:
  ContactSelection();
  virtual ~ContactSelection();

  ContactSelection(const ContactSelection& from);

  inline ContactSelection& operator=(const ContactSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactSelection& default_instance();

  static const ContactSelection* internal_default_instance();

  void Swap(ContactSelection* other);

  // implements Message ----------------------------------------------

  inline ContactSelection* New() const { return New(NULL); }

  ContactSelection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactSelection& from);
  void MergeFrom(const ContactSelection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContactSelection* other);
  void UnsafeMergeFrom(const ContactSelection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string start_key = 1;
  bool has_start_key() const;
  void clear_start_key();
  static const int kStartKeyFieldNumber = 1;
  const ::std::string& start_key() const;
  void set_start_key(const ::std::string& value);
  void set_start_key(const char* value);
  void set_start_key(const char* value, size_t size);
  ::std::string* mutable_start_key();
  ::std::string* release_start_key();
  void set_allocated_start_key(::std::string* start_key);

  // optional bool all = 2;
  bool has_all() const;
  void clear_all();
  static const int kAllFieldNumber = 2;
  bool all() const;
  void set_all(bool value);

  // @@protoc_insertion_point(class_scope:ContactSelection)
 private:
  inline void set_has_start_key();
  inline void clear_has_start_key();
  inline void set_has_all();
  inline void clear_has_all();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr start_key_;
  bool all_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ContactSelection> ContactSelection_default_instance_;

// -------------------------------------------------------------------

class EpisodeSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EpisodeSelection) */ {
 public:
  EpisodeSelection();
  virtual ~EpisodeSelection();

  EpisodeSelection(const EpisodeSelection& from);

  inline EpisodeSelection& operator=(const EpisodeSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EpisodeSelection& default_instance();

  static const EpisodeSelection* internal_default_instance();

  void Swap(EpisodeSelection* other);

  // implements Message ----------------------------------------------

  inline EpisodeSelection* New() const { return New(NULL); }

  EpisodeSelection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EpisodeSelection& from);
  void MergeFrom(const EpisodeSelection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EpisodeSelection* other);
  void UnsafeMergeFrom(const EpisodeSelection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  const ::std::string& episode_id() const;
  void set_episode_id(const ::std::string& value);
  void set_episode_id(const char* value);
  void set_episode_id(const char* value, size_t size);
  ::std::string* mutable_episode_id();
  ::std::string* release_episode_id();
  void set_allocated_episode_id(::std::string* episode_id);

  // optional bool get_attributes = 2 [default = false];
  bool has_get_attributes() const;
  void clear_get_attributes();
  static const int kGetAttributesFieldNumber = 2;
  bool get_attributes() const;
  void set_get_attributes(bool value);

  // optional bool get_photos = 3 [default = false];
  bool has_get_photos() const;
  void clear_get_photos();
  static const int kGetPhotosFieldNumber = 3;
  bool get_photos() const;
  void set_get_photos(bool value);

  // optional string photo_start_key = 4;
  bool has_photo_start_key() const;
  void clear_photo_start_key();
  static const int kPhotoStartKeyFieldNumber = 4;
  const ::std::string& photo_start_key() const;
  void set_photo_start_key(const ::std::string& value);
  void set_photo_start_key(const char* value);
  void set_photo_start_key(const char* value, size_t size);
  ::std::string* mutable_photo_start_key();
  ::std::string* release_photo_start_key();
  void set_allocated_photo_start_key(::std::string* photo_start_key);

  // @@protoc_insertion_point(class_scope:EpisodeSelection)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();
  inline void set_has_get_attributes();
  inline void clear_has_get_attributes();
  inline void set_has_get_photos();
  inline void clear_has_get_photos();
  inline void set_has_photo_start_key();
  inline void clear_has_photo_start_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr episode_id_;
  ::google::protobuf::internal::ArenaStringPtr photo_start_key_;
  bool get_attributes_;
  bool get_photos_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EpisodeSelection> EpisodeSelection_default_instance_;

// -------------------------------------------------------------------

class ViewpointSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ViewpointSelection) */ {
 public:
  ViewpointSelection();
  virtual ~ViewpointSelection();

  ViewpointSelection(const ViewpointSelection& from);

  inline ViewpointSelection& operator=(const ViewpointSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewpointSelection& default_instance();

  static const ViewpointSelection* internal_default_instance();

  void Swap(ViewpointSelection* other);

  // implements Message ----------------------------------------------

  inline ViewpointSelection* New() const { return New(NULL); }

  ViewpointSelection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewpointSelection& from);
  void MergeFrom(const ViewpointSelection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ViewpointSelection* other);
  void UnsafeMergeFrom(const ViewpointSelection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string viewpoint_id = 1;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 1;
  const ::std::string& viewpoint_id() const;
  void set_viewpoint_id(const ::std::string& value);
  void set_viewpoint_id(const char* value);
  void set_viewpoint_id(const char* value, size_t size);
  ::std::string* mutable_viewpoint_id();
  ::std::string* release_viewpoint_id();
  void set_allocated_viewpoint_id(::std::string* viewpoint_id);

  // optional bool get_attributes = 2 [default = false];
  bool has_get_attributes() const;
  void clear_get_attributes();
  static const int kGetAttributesFieldNumber = 2;
  bool get_attributes() const;
  void set_get_attributes(bool value);

  // optional bool get_followers = 3 [default = false];
  bool has_get_followers() const;
  void clear_get_followers();
  static const int kGetFollowersFieldNumber = 3;
  bool get_followers() const;
  void set_get_followers(bool value);

  // optional string follower_start_key = 4;
  bool has_follower_start_key() const;
  void clear_follower_start_key();
  static const int kFollowerStartKeyFieldNumber = 4;
  const ::std::string& follower_start_key() const;
  void set_follower_start_key(const ::std::string& value);
  void set_follower_start_key(const char* value);
  void set_follower_start_key(const char* value, size_t size);
  ::std::string* mutable_follower_start_key();
  ::std::string* release_follower_start_key();
  void set_allocated_follower_start_key(::std::string* follower_start_key);

  // optional bool get_activities = 5 [default = false];
  bool has_get_activities() const;
  void clear_get_activities();
  static const int kGetActivitiesFieldNumber = 5;
  bool get_activities() const;
  void set_get_activities(bool value);

  // optional string activity_start_key = 6;
  bool has_activity_start_key() const;
  void clear_activity_start_key();
  static const int kActivityStartKeyFieldNumber = 6;
  const ::std::string& activity_start_key() const;
  void set_activity_start_key(const ::std::string& value);
  void set_activity_start_key(const char* value);
  void set_activity_start_key(const char* value, size_t size);
  ::std::string* mutable_activity_start_key();
  ::std::string* release_activity_start_key();
  void set_allocated_activity_start_key(::std::string* activity_start_key);

  // optional bool get_episodes = 7 [default = false];
  bool has_get_episodes() const;
  void clear_get_episodes();
  static const int kGetEpisodesFieldNumber = 7;
  bool get_episodes() const;
  void set_get_episodes(bool value);

  // optional string episode_start_key = 8;
  bool has_episode_start_key() const;
  void clear_episode_start_key();
  static const int kEpisodeStartKeyFieldNumber = 8;
  const ::std::string& episode_start_key() const;
  void set_episode_start_key(const ::std::string& value);
  void set_episode_start_key(const char* value);
  void set_episode_start_key(const char* value, size_t size);
  ::std::string* mutable_episode_start_key();
  ::std::string* release_episode_start_key();
  void set_allocated_episode_start_key(::std::string* episode_start_key);

  // optional bool get_comments = 9 [default = false];
  bool has_get_comments() const;
  void clear_get_comments();
  static const int kGetCommentsFieldNumber = 9;
  bool get_comments() const;
  void set_get_comments(bool value);

  // optional string comment_start_key = 10;
  bool has_comment_start_key() const;
  void clear_comment_start_key();
  static const int kCommentStartKeyFieldNumber = 10;
  const ::std::string& comment_start_key() const;
  void set_comment_start_key(const ::std::string& value);
  void set_comment_start_key(const char* value);
  void set_comment_start_key(const char* value, size_t size);
  ::std::string* mutable_comment_start_key();
  ::std::string* release_comment_start_key();
  void set_allocated_comment_start_key(::std::string* comment_start_key);

  // @@protoc_insertion_point(class_scope:ViewpointSelection)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_get_attributes();
  inline void clear_has_get_attributes();
  inline void set_has_get_followers();
  inline void clear_has_get_followers();
  inline void set_has_follower_start_key();
  inline void clear_has_follower_start_key();
  inline void set_has_get_activities();
  inline void clear_has_get_activities();
  inline void set_has_activity_start_key();
  inline void clear_has_activity_start_key();
  inline void set_has_get_episodes();
  inline void clear_has_get_episodes();
  inline void set_has_episode_start_key();
  inline void clear_has_episode_start_key();
  inline void set_has_get_comments();
  inline void clear_has_get_comments();
  inline void set_has_comment_start_key();
  inline void clear_has_comment_start_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr viewpoint_id_;
  ::google::protobuf::internal::ArenaStringPtr follower_start_key_;
  ::google::protobuf::internal::ArenaStringPtr activity_start_key_;
  ::google::protobuf::internal::ArenaStringPtr episode_start_key_;
  ::google::protobuf::internal::ArenaStringPtr comment_start_key_;
  bool get_attributes_;
  bool get_followers_;
  bool get_activities_;
  bool get_episodes_;
  bool get_comments_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ViewpointSelection> ViewpointSelection_default_instance_;

// -------------------------------------------------------------------

class UserSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSelection) */ {
 public:
  UserSelection();
  virtual ~UserSelection();

  UserSelection(const UserSelection& from);

  inline UserSelection& operator=(const UserSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSelection& default_instance();

  static const UserSelection* internal_default_instance();

  void Swap(UserSelection* other);

  // implements Message ----------------------------------------------

  inline UserSelection* New() const { return New(NULL); }

  UserSelection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSelection& from);
  void MergeFrom(const UserSelection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserSelection* other);
  void UnsafeMergeFrom(const UserSelection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UserSelection)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserSelection> UserSelection_default_instance_;

// -------------------------------------------------------------------

class InvalidateMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InvalidateMetadata) */ {
 public:
  InvalidateMetadata();
  virtual ~InvalidateMetadata();

  InvalidateMetadata(const InvalidateMetadata& from);

  inline InvalidateMetadata& operator=(const InvalidateMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvalidateMetadata& default_instance();

  static const InvalidateMetadata* internal_default_instance();

  void Swap(InvalidateMetadata* other);

  // implements Message ----------------------------------------------

  inline InvalidateMetadata* New() const { return New(NULL); }

  InvalidateMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvalidateMetadata& from);
  void MergeFrom(const InvalidateMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InvalidateMetadata* other);
  void UnsafeMergeFrom(const InvalidateMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool all = 1;
  bool has_all() const;
  void clear_all();
  static const int kAllFieldNumber = 1;
  bool all() const;
  void set_all(bool value);

  // repeated .ViewpointSelection viewpoints = 2;
  int viewpoints_size() const;
  void clear_viewpoints();
  static const int kViewpointsFieldNumber = 2;
  const ::ViewpointSelection& viewpoints(int index) const;
  ::ViewpointSelection* mutable_viewpoints(int index);
  ::ViewpointSelection* add_viewpoints();
  ::google::protobuf::RepeatedPtrField< ::ViewpointSelection >*
      mutable_viewpoints();
  const ::google::protobuf::RepeatedPtrField< ::ViewpointSelection >&
      viewpoints() const;

  // repeated .EpisodeSelection episodes = 3;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 3;
  const ::EpisodeSelection& episodes(int index) const;
  ::EpisodeSelection* mutable_episodes(int index);
  ::EpisodeSelection* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::EpisodeSelection >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::EpisodeSelection >&
      episodes() const;

  // optional .ContactSelection contacts = 4;
  bool has_contacts() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 4;
  const ::ContactSelection& contacts() const;
  ::ContactSelection* mutable_contacts();
  ::ContactSelection* release_contacts();
  void set_allocated_contacts(::ContactSelection* contacts);

  // repeated .UserSelection users = 5;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 5;
  const ::UserSelection& users(int index) const;
  ::UserSelection* mutable_users(int index);
  ::UserSelection* add_users();
  ::google::protobuf::RepeatedPtrField< ::UserSelection >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::UserSelection >&
      users() const;

  // @@protoc_insertion_point(class_scope:InvalidateMetadata)
 private:
  inline void set_has_all();
  inline void clear_has_all();
  inline void set_has_contacts();
  inline void clear_has_contacts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ViewpointSelection > viewpoints_;
  ::google::protobuf::RepeatedPtrField< ::EpisodeSelection > episodes_;
  ::google::protobuf::RepeatedPtrField< ::UserSelection > users_;
  ::ContactSelection* contacts_;
  bool all_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InvalidateMetadata> InvalidateMetadata_default_instance_;

// -------------------------------------------------------------------

class NotificationSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NotificationSelection) */ {
 public:
  NotificationSelection();
  virtual ~NotificationSelection();

  NotificationSelection(const NotificationSelection& from);

  inline NotificationSelection& operator=(const NotificationSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotificationSelection& default_instance();

  static const NotificationSelection* internal_default_instance();

  void Swap(NotificationSelection* other);

  // implements Message ----------------------------------------------

  inline NotificationSelection* New() const { return New(NULL); }

  NotificationSelection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotificationSelection& from);
  void MergeFrom(const NotificationSelection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotificationSelection* other);
  void UnsafeMergeFrom(const NotificationSelection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string last_key = 1;
  bool has_last_key() const;
  void clear_last_key();
  static const int kLastKeyFieldNumber = 1;
  const ::std::string& last_key() const;
  void set_last_key(const ::std::string& value);
  void set_last_key(const char* value);
  void set_last_key(const char* value, size_t size);
  ::std::string* mutable_last_key();
  ::std::string* release_last_key();
  void set_allocated_last_key(::std::string* last_key);

  // optional bool query_done = 2;
  bool has_query_done() const;
  void clear_query_done();
  static const int kQueryDoneFieldNumber = 2;
  bool query_done() const;
  void set_query_done(bool value);

  // optional int64 low_water_notification_id = 3;
  bool has_low_water_notification_id() const;
  void clear_low_water_notification_id();
  static const int kLowWaterNotificationIdFieldNumber = 3;
  ::google::protobuf::int64 low_water_notification_id() const;
  void set_low_water_notification_id(::google::protobuf::int64 value);

  // optional int32 max_min_required_version = 4;
  bool has_max_min_required_version() const;
  void clear_max_min_required_version();
  static const int kMaxMinRequiredVersionFieldNumber = 4;
  ::google::protobuf::int32 max_min_required_version() const;
  void set_max_min_required_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NotificationSelection)
 private:
  inline void set_has_last_key();
  inline void clear_has_last_key();
  inline void set_has_query_done();
  inline void clear_has_query_done();
  inline void set_has_low_water_notification_id();
  inline void clear_has_low_water_notification_id();
  inline void set_has_max_min_required_version();
  inline void clear_has_max_min_required_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr last_key_;
  ::google::protobuf::int64 low_water_notification_id_;
  bool query_done_;
  ::google::protobuf::int32 max_min_required_version_;
  friend void  protobuf_InitDefaults_InvalidateMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_InvalidateMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_InvalidateMetadata_2eproto();
  friend void protobuf_ShutdownFile_InvalidateMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NotificationSelection> NotificationSelection_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ContactSelection

// optional string start_key = 1;
inline bool ContactSelection::has_start_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactSelection::set_has_start_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactSelection::clear_has_start_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactSelection::clear_start_key() {
  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_key();
}
inline const ::std::string& ContactSelection::start_key() const {
  // @@protoc_insertion_point(field_get:ContactSelection.start_key)
  return start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactSelection::set_start_key(const ::std::string& value) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactSelection.start_key)
}
inline void ContactSelection::set_start_key(const char* value) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactSelection.start_key)
}
inline void ContactSelection::set_start_key(const char* value, size_t size) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactSelection.start_key)
}
inline ::std::string* ContactSelection::mutable_start_key() {
  set_has_start_key();
  // @@protoc_insertion_point(field_mutable:ContactSelection.start_key)
  return start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactSelection::release_start_key() {
  // @@protoc_insertion_point(field_release:ContactSelection.start_key)
  clear_has_start_key();
  return start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactSelection::set_allocated_start_key(::std::string* start_key) {
  if (start_key != NULL) {
    set_has_start_key();
  } else {
    clear_has_start_key();
  }
  start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_key);
  // @@protoc_insertion_point(field_set_allocated:ContactSelection.start_key)
}

// optional bool all = 2;
inline bool ContactSelection::has_all() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactSelection::set_has_all() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactSelection::clear_has_all() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactSelection::clear_all() {
  all_ = false;
  clear_has_all();
}
inline bool ContactSelection::all() const {
  // @@protoc_insertion_point(field_get:ContactSelection.all)
  return all_;
}
inline void ContactSelection::set_all(bool value) {
  set_has_all();
  all_ = value;
  // @@protoc_insertion_point(field_set:ContactSelection.all)
}

inline const ContactSelection* ContactSelection::internal_default_instance() {
  return &ContactSelection_default_instance_.get();
}
// -------------------------------------------------------------------

// EpisodeSelection

// optional string episode_id = 1;
inline bool EpisodeSelection::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EpisodeSelection::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EpisodeSelection::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EpisodeSelection::clear_episode_id() {
  episode_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_id();
}
inline const ::std::string& EpisodeSelection::episode_id() const {
  // @@protoc_insertion_point(field_get:EpisodeSelection.episode_id)
  return episode_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EpisodeSelection::set_episode_id(const ::std::string& value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EpisodeSelection.episode_id)
}
inline void EpisodeSelection::set_episode_id(const char* value) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EpisodeSelection.episode_id)
}
inline void EpisodeSelection::set_episode_id(const char* value, size_t size) {
  set_has_episode_id();
  episode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EpisodeSelection.episode_id)
}
inline ::std::string* EpisodeSelection::mutable_episode_id() {
  set_has_episode_id();
  // @@protoc_insertion_point(field_mutable:EpisodeSelection.episode_id)
  return episode_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EpisodeSelection::release_episode_id() {
  // @@protoc_insertion_point(field_release:EpisodeSelection.episode_id)
  clear_has_episode_id();
  return episode_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EpisodeSelection::set_allocated_episode_id(::std::string* episode_id) {
  if (episode_id != NULL) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  episode_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_id);
  // @@protoc_insertion_point(field_set_allocated:EpisodeSelection.episode_id)
}

// optional bool get_attributes = 2 [default = false];
inline bool EpisodeSelection::has_get_attributes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EpisodeSelection::set_has_get_attributes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EpisodeSelection::clear_has_get_attributes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EpisodeSelection::clear_get_attributes() {
  get_attributes_ = false;
  clear_has_get_attributes();
}
inline bool EpisodeSelection::get_attributes() const {
  // @@protoc_insertion_point(field_get:EpisodeSelection.get_attributes)
  return get_attributes_;
}
inline void EpisodeSelection::set_get_attributes(bool value) {
  set_has_get_attributes();
  get_attributes_ = value;
  // @@protoc_insertion_point(field_set:EpisodeSelection.get_attributes)
}

// optional bool get_photos = 3 [default = false];
inline bool EpisodeSelection::has_get_photos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EpisodeSelection::set_has_get_photos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EpisodeSelection::clear_has_get_photos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EpisodeSelection::clear_get_photos() {
  get_photos_ = false;
  clear_has_get_photos();
}
inline bool EpisodeSelection::get_photos() const {
  // @@protoc_insertion_point(field_get:EpisodeSelection.get_photos)
  return get_photos_;
}
inline void EpisodeSelection::set_get_photos(bool value) {
  set_has_get_photos();
  get_photos_ = value;
  // @@protoc_insertion_point(field_set:EpisodeSelection.get_photos)
}

// optional string photo_start_key = 4;
inline bool EpisodeSelection::has_photo_start_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EpisodeSelection::set_has_photo_start_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EpisodeSelection::clear_has_photo_start_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EpisodeSelection::clear_photo_start_key() {
  photo_start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photo_start_key();
}
inline const ::std::string& EpisodeSelection::photo_start_key() const {
  // @@protoc_insertion_point(field_get:EpisodeSelection.photo_start_key)
  return photo_start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EpisodeSelection::set_photo_start_key(const ::std::string& value) {
  set_has_photo_start_key();
  photo_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EpisodeSelection.photo_start_key)
}
inline void EpisodeSelection::set_photo_start_key(const char* value) {
  set_has_photo_start_key();
  photo_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EpisodeSelection.photo_start_key)
}
inline void EpisodeSelection::set_photo_start_key(const char* value, size_t size) {
  set_has_photo_start_key();
  photo_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EpisodeSelection.photo_start_key)
}
inline ::std::string* EpisodeSelection::mutable_photo_start_key() {
  set_has_photo_start_key();
  // @@protoc_insertion_point(field_mutable:EpisodeSelection.photo_start_key)
  return photo_start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EpisodeSelection::release_photo_start_key() {
  // @@protoc_insertion_point(field_release:EpisodeSelection.photo_start_key)
  clear_has_photo_start_key();
  return photo_start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EpisodeSelection::set_allocated_photo_start_key(::std::string* photo_start_key) {
  if (photo_start_key != NULL) {
    set_has_photo_start_key();
  } else {
    clear_has_photo_start_key();
  }
  photo_start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photo_start_key);
  // @@protoc_insertion_point(field_set_allocated:EpisodeSelection.photo_start_key)
}

inline const EpisodeSelection* EpisodeSelection::internal_default_instance() {
  return &EpisodeSelection_default_instance_.get();
}
// -------------------------------------------------------------------

// ViewpointSelection

// optional string viewpoint_id = 1;
inline bool ViewpointSelection::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewpointSelection::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewpointSelection::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewpointSelection::clear_viewpoint_id() {
  viewpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_viewpoint_id();
}
inline const ::std::string& ViewpointSelection::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.viewpoint_id)
  return viewpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_viewpoint_id(const ::std::string& value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSelection.viewpoint_id)
}
inline void ViewpointSelection::set_viewpoint_id(const char* value) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSelection.viewpoint_id)
}
inline void ViewpointSelection::set_viewpoint_id(const char* value, size_t size) {
  set_has_viewpoint_id();
  viewpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSelection.viewpoint_id)
}
inline ::std::string* ViewpointSelection::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  // @@protoc_insertion_point(field_mutable:ViewpointSelection.viewpoint_id)
  return viewpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSelection::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:ViewpointSelection.viewpoint_id)
  clear_has_viewpoint_id();
  return viewpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_allocated_viewpoint_id(::std::string* viewpoint_id) {
  if (viewpoint_id != NULL) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  viewpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), viewpoint_id);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSelection.viewpoint_id)
}

// optional bool get_attributes = 2 [default = false];
inline bool ViewpointSelection::has_get_attributes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewpointSelection::set_has_get_attributes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewpointSelection::clear_has_get_attributes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewpointSelection::clear_get_attributes() {
  get_attributes_ = false;
  clear_has_get_attributes();
}
inline bool ViewpointSelection::get_attributes() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.get_attributes)
  return get_attributes_;
}
inline void ViewpointSelection::set_get_attributes(bool value) {
  set_has_get_attributes();
  get_attributes_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSelection.get_attributes)
}

// optional bool get_followers = 3 [default = false];
inline bool ViewpointSelection::has_get_followers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewpointSelection::set_has_get_followers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewpointSelection::clear_has_get_followers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewpointSelection::clear_get_followers() {
  get_followers_ = false;
  clear_has_get_followers();
}
inline bool ViewpointSelection::get_followers() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.get_followers)
  return get_followers_;
}
inline void ViewpointSelection::set_get_followers(bool value) {
  set_has_get_followers();
  get_followers_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSelection.get_followers)
}

// optional string follower_start_key = 4;
inline bool ViewpointSelection::has_follower_start_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ViewpointSelection::set_has_follower_start_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ViewpointSelection::clear_has_follower_start_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ViewpointSelection::clear_follower_start_key() {
  follower_start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_follower_start_key();
}
inline const ::std::string& ViewpointSelection::follower_start_key() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.follower_start_key)
  return follower_start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_follower_start_key(const ::std::string& value) {
  set_has_follower_start_key();
  follower_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSelection.follower_start_key)
}
inline void ViewpointSelection::set_follower_start_key(const char* value) {
  set_has_follower_start_key();
  follower_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSelection.follower_start_key)
}
inline void ViewpointSelection::set_follower_start_key(const char* value, size_t size) {
  set_has_follower_start_key();
  follower_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSelection.follower_start_key)
}
inline ::std::string* ViewpointSelection::mutable_follower_start_key() {
  set_has_follower_start_key();
  // @@protoc_insertion_point(field_mutable:ViewpointSelection.follower_start_key)
  return follower_start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSelection::release_follower_start_key() {
  // @@protoc_insertion_point(field_release:ViewpointSelection.follower_start_key)
  clear_has_follower_start_key();
  return follower_start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_allocated_follower_start_key(::std::string* follower_start_key) {
  if (follower_start_key != NULL) {
    set_has_follower_start_key();
  } else {
    clear_has_follower_start_key();
  }
  follower_start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), follower_start_key);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSelection.follower_start_key)
}

// optional bool get_activities = 5 [default = false];
inline bool ViewpointSelection::has_get_activities() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ViewpointSelection::set_has_get_activities() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ViewpointSelection::clear_has_get_activities() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ViewpointSelection::clear_get_activities() {
  get_activities_ = false;
  clear_has_get_activities();
}
inline bool ViewpointSelection::get_activities() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.get_activities)
  return get_activities_;
}
inline void ViewpointSelection::set_get_activities(bool value) {
  set_has_get_activities();
  get_activities_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSelection.get_activities)
}

// optional string activity_start_key = 6;
inline bool ViewpointSelection::has_activity_start_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ViewpointSelection::set_has_activity_start_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ViewpointSelection::clear_has_activity_start_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ViewpointSelection::clear_activity_start_key() {
  activity_start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activity_start_key();
}
inline const ::std::string& ViewpointSelection::activity_start_key() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.activity_start_key)
  return activity_start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_activity_start_key(const ::std::string& value) {
  set_has_activity_start_key();
  activity_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSelection.activity_start_key)
}
inline void ViewpointSelection::set_activity_start_key(const char* value) {
  set_has_activity_start_key();
  activity_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSelection.activity_start_key)
}
inline void ViewpointSelection::set_activity_start_key(const char* value, size_t size) {
  set_has_activity_start_key();
  activity_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSelection.activity_start_key)
}
inline ::std::string* ViewpointSelection::mutable_activity_start_key() {
  set_has_activity_start_key();
  // @@protoc_insertion_point(field_mutable:ViewpointSelection.activity_start_key)
  return activity_start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSelection::release_activity_start_key() {
  // @@protoc_insertion_point(field_release:ViewpointSelection.activity_start_key)
  clear_has_activity_start_key();
  return activity_start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_allocated_activity_start_key(::std::string* activity_start_key) {
  if (activity_start_key != NULL) {
    set_has_activity_start_key();
  } else {
    clear_has_activity_start_key();
  }
  activity_start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activity_start_key);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSelection.activity_start_key)
}

// optional bool get_episodes = 7 [default = false];
inline bool ViewpointSelection::has_get_episodes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ViewpointSelection::set_has_get_episodes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ViewpointSelection::clear_has_get_episodes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ViewpointSelection::clear_get_episodes() {
  get_episodes_ = false;
  clear_has_get_episodes();
}
inline bool ViewpointSelection::get_episodes() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.get_episodes)
  return get_episodes_;
}
inline void ViewpointSelection::set_get_episodes(bool value) {
  set_has_get_episodes();
  get_episodes_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSelection.get_episodes)
}

// optional string episode_start_key = 8;
inline bool ViewpointSelection::has_episode_start_key() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ViewpointSelection::set_has_episode_start_key() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ViewpointSelection::clear_has_episode_start_key() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ViewpointSelection::clear_episode_start_key() {
  episode_start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_episode_start_key();
}
inline const ::std::string& ViewpointSelection::episode_start_key() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.episode_start_key)
  return episode_start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_episode_start_key(const ::std::string& value) {
  set_has_episode_start_key();
  episode_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSelection.episode_start_key)
}
inline void ViewpointSelection::set_episode_start_key(const char* value) {
  set_has_episode_start_key();
  episode_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSelection.episode_start_key)
}
inline void ViewpointSelection::set_episode_start_key(const char* value, size_t size) {
  set_has_episode_start_key();
  episode_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSelection.episode_start_key)
}
inline ::std::string* ViewpointSelection::mutable_episode_start_key() {
  set_has_episode_start_key();
  // @@protoc_insertion_point(field_mutable:ViewpointSelection.episode_start_key)
  return episode_start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSelection::release_episode_start_key() {
  // @@protoc_insertion_point(field_release:ViewpointSelection.episode_start_key)
  clear_has_episode_start_key();
  return episode_start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_allocated_episode_start_key(::std::string* episode_start_key) {
  if (episode_start_key != NULL) {
    set_has_episode_start_key();
  } else {
    clear_has_episode_start_key();
  }
  episode_start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), episode_start_key);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSelection.episode_start_key)
}

// optional bool get_comments = 9 [default = false];
inline bool ViewpointSelection::has_get_comments() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ViewpointSelection::set_has_get_comments() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ViewpointSelection::clear_has_get_comments() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ViewpointSelection::clear_get_comments() {
  get_comments_ = false;
  clear_has_get_comments();
}
inline bool ViewpointSelection::get_comments() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.get_comments)
  return get_comments_;
}
inline void ViewpointSelection::set_get_comments(bool value) {
  set_has_get_comments();
  get_comments_ = value;
  // @@protoc_insertion_point(field_set:ViewpointSelection.get_comments)
}

// optional string comment_start_key = 10;
inline bool ViewpointSelection::has_comment_start_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ViewpointSelection::set_has_comment_start_key() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ViewpointSelection::clear_has_comment_start_key() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ViewpointSelection::clear_comment_start_key() {
  comment_start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment_start_key();
}
inline const ::std::string& ViewpointSelection::comment_start_key() const {
  // @@protoc_insertion_point(field_get:ViewpointSelection.comment_start_key)
  return comment_start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_comment_start_key(const ::std::string& value) {
  set_has_comment_start_key();
  comment_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewpointSelection.comment_start_key)
}
inline void ViewpointSelection::set_comment_start_key(const char* value) {
  set_has_comment_start_key();
  comment_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewpointSelection.comment_start_key)
}
inline void ViewpointSelection::set_comment_start_key(const char* value, size_t size) {
  set_has_comment_start_key();
  comment_start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewpointSelection.comment_start_key)
}
inline ::std::string* ViewpointSelection::mutable_comment_start_key() {
  set_has_comment_start_key();
  // @@protoc_insertion_point(field_mutable:ViewpointSelection.comment_start_key)
  return comment_start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ViewpointSelection::release_comment_start_key() {
  // @@protoc_insertion_point(field_release:ViewpointSelection.comment_start_key)
  clear_has_comment_start_key();
  return comment_start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ViewpointSelection::set_allocated_comment_start_key(::std::string* comment_start_key) {
  if (comment_start_key != NULL) {
    set_has_comment_start_key();
  } else {
    clear_has_comment_start_key();
  }
  comment_start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment_start_key);
  // @@protoc_insertion_point(field_set_allocated:ViewpointSelection.comment_start_key)
}

inline const ViewpointSelection* ViewpointSelection::internal_default_instance() {
  return &ViewpointSelection_default_instance_.get();
}
// -------------------------------------------------------------------

// UserSelection

// optional int64 user_id = 1;
inline bool UserSelection::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSelection::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSelection::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSelection::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 UserSelection::user_id() const {
  // @@protoc_insertion_point(field_get:UserSelection.user_id)
  return user_id_;
}
inline void UserSelection::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:UserSelection.user_id)
}

inline const UserSelection* UserSelection::internal_default_instance() {
  return &UserSelection_default_instance_.get();
}
// -------------------------------------------------------------------

// InvalidateMetadata

// optional bool all = 1;
inline bool InvalidateMetadata::has_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvalidateMetadata::set_has_all() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvalidateMetadata::clear_has_all() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvalidateMetadata::clear_all() {
  all_ = false;
  clear_has_all();
}
inline bool InvalidateMetadata::all() const {
  // @@protoc_insertion_point(field_get:InvalidateMetadata.all)
  return all_;
}
inline void InvalidateMetadata::set_all(bool value) {
  set_has_all();
  all_ = value;
  // @@protoc_insertion_point(field_set:InvalidateMetadata.all)
}

// repeated .ViewpointSelection viewpoints = 2;
inline int InvalidateMetadata::viewpoints_size() const {
  return viewpoints_.size();
}
inline void InvalidateMetadata::clear_viewpoints() {
  viewpoints_.Clear();
}
inline const ::ViewpointSelection& InvalidateMetadata::viewpoints(int index) const {
  // @@protoc_insertion_point(field_get:InvalidateMetadata.viewpoints)
  return viewpoints_.Get(index);
}
inline ::ViewpointSelection* InvalidateMetadata::mutable_viewpoints(int index) {
  // @@protoc_insertion_point(field_mutable:InvalidateMetadata.viewpoints)
  return viewpoints_.Mutable(index);
}
inline ::ViewpointSelection* InvalidateMetadata::add_viewpoints() {
  // @@protoc_insertion_point(field_add:InvalidateMetadata.viewpoints)
  return viewpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ViewpointSelection >*
InvalidateMetadata::mutable_viewpoints() {
  // @@protoc_insertion_point(field_mutable_list:InvalidateMetadata.viewpoints)
  return &viewpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ViewpointSelection >&
InvalidateMetadata::viewpoints() const {
  // @@protoc_insertion_point(field_list:InvalidateMetadata.viewpoints)
  return viewpoints_;
}

// repeated .EpisodeSelection episodes = 3;
inline int InvalidateMetadata::episodes_size() const {
  return episodes_.size();
}
inline void InvalidateMetadata::clear_episodes() {
  episodes_.Clear();
}
inline const ::EpisodeSelection& InvalidateMetadata::episodes(int index) const {
  // @@protoc_insertion_point(field_get:InvalidateMetadata.episodes)
  return episodes_.Get(index);
}
inline ::EpisodeSelection* InvalidateMetadata::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:InvalidateMetadata.episodes)
  return episodes_.Mutable(index);
}
inline ::EpisodeSelection* InvalidateMetadata::add_episodes() {
  // @@protoc_insertion_point(field_add:InvalidateMetadata.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::EpisodeSelection >*
InvalidateMetadata::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:InvalidateMetadata.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::EpisodeSelection >&
InvalidateMetadata::episodes() const {
  // @@protoc_insertion_point(field_list:InvalidateMetadata.episodes)
  return episodes_;
}

// optional .ContactSelection contacts = 4;
inline bool InvalidateMetadata::has_contacts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InvalidateMetadata::set_has_contacts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InvalidateMetadata::clear_has_contacts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InvalidateMetadata::clear_contacts() {
  if (contacts_ != NULL) contacts_->::ContactSelection::Clear();
  clear_has_contacts();
}
inline const ::ContactSelection& InvalidateMetadata::contacts() const {
  // @@protoc_insertion_point(field_get:InvalidateMetadata.contacts)
  return contacts_ != NULL ? *contacts_
                         : *::ContactSelection::internal_default_instance();
}
inline ::ContactSelection* InvalidateMetadata::mutable_contacts() {
  set_has_contacts();
  if (contacts_ == NULL) {
    contacts_ = new ::ContactSelection;
  }
  // @@protoc_insertion_point(field_mutable:InvalidateMetadata.contacts)
  return contacts_;
}
inline ::ContactSelection* InvalidateMetadata::release_contacts() {
  // @@protoc_insertion_point(field_release:InvalidateMetadata.contacts)
  clear_has_contacts();
  ::ContactSelection* temp = contacts_;
  contacts_ = NULL;
  return temp;
}
inline void InvalidateMetadata::set_allocated_contacts(::ContactSelection* contacts) {
  delete contacts_;
  contacts_ = contacts;
  if (contacts) {
    set_has_contacts();
  } else {
    clear_has_contacts();
  }
  // @@protoc_insertion_point(field_set_allocated:InvalidateMetadata.contacts)
}

// repeated .UserSelection users = 5;
inline int InvalidateMetadata::users_size() const {
  return users_.size();
}
inline void InvalidateMetadata::clear_users() {
  users_.Clear();
}
inline const ::UserSelection& InvalidateMetadata::users(int index) const {
  // @@protoc_insertion_point(field_get:InvalidateMetadata.users)
  return users_.Get(index);
}
inline ::UserSelection* InvalidateMetadata::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:InvalidateMetadata.users)
  return users_.Mutable(index);
}
inline ::UserSelection* InvalidateMetadata::add_users() {
  // @@protoc_insertion_point(field_add:InvalidateMetadata.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserSelection >*
InvalidateMetadata::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:InvalidateMetadata.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSelection >&
InvalidateMetadata::users() const {
  // @@protoc_insertion_point(field_list:InvalidateMetadata.users)
  return users_;
}

inline const InvalidateMetadata* InvalidateMetadata::internal_default_instance() {
  return &InvalidateMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// NotificationSelection

// optional string last_key = 1;
inline bool NotificationSelection::has_last_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationSelection::set_has_last_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotificationSelection::clear_has_last_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotificationSelection::clear_last_key() {
  last_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_key();
}
inline const ::std::string& NotificationSelection::last_key() const {
  // @@protoc_insertion_point(field_get:NotificationSelection.last_key)
  return last_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationSelection::set_last_key(const ::std::string& value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotificationSelection.last_key)
}
inline void NotificationSelection::set_last_key(const char* value) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotificationSelection.last_key)
}
inline void NotificationSelection::set_last_key(const char* value, size_t size) {
  set_has_last_key();
  last_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotificationSelection.last_key)
}
inline ::std::string* NotificationSelection::mutable_last_key() {
  set_has_last_key();
  // @@protoc_insertion_point(field_mutable:NotificationSelection.last_key)
  return last_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationSelection::release_last_key() {
  // @@protoc_insertion_point(field_release:NotificationSelection.last_key)
  clear_has_last_key();
  return last_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationSelection::set_allocated_last_key(::std::string* last_key) {
  if (last_key != NULL) {
    set_has_last_key();
  } else {
    clear_has_last_key();
  }
  last_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_key);
  // @@protoc_insertion_point(field_set_allocated:NotificationSelection.last_key)
}

// optional bool query_done = 2;
inline bool NotificationSelection::has_query_done() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationSelection::set_has_query_done() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotificationSelection::clear_has_query_done() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotificationSelection::clear_query_done() {
  query_done_ = false;
  clear_has_query_done();
}
inline bool NotificationSelection::query_done() const {
  // @@protoc_insertion_point(field_get:NotificationSelection.query_done)
  return query_done_;
}
inline void NotificationSelection::set_query_done(bool value) {
  set_has_query_done();
  query_done_ = value;
  // @@protoc_insertion_point(field_set:NotificationSelection.query_done)
}

// optional int64 low_water_notification_id = 3;
inline bool NotificationSelection::has_low_water_notification_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotificationSelection::set_has_low_water_notification_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotificationSelection::clear_has_low_water_notification_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotificationSelection::clear_low_water_notification_id() {
  low_water_notification_id_ = GOOGLE_LONGLONG(0);
  clear_has_low_water_notification_id();
}
inline ::google::protobuf::int64 NotificationSelection::low_water_notification_id() const {
  // @@protoc_insertion_point(field_get:NotificationSelection.low_water_notification_id)
  return low_water_notification_id_;
}
inline void NotificationSelection::set_low_water_notification_id(::google::protobuf::int64 value) {
  set_has_low_water_notification_id();
  low_water_notification_id_ = value;
  // @@protoc_insertion_point(field_set:NotificationSelection.low_water_notification_id)
}

// optional int32 max_min_required_version = 4;
inline bool NotificationSelection::has_max_min_required_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotificationSelection::set_has_max_min_required_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotificationSelection::clear_has_max_min_required_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotificationSelection::clear_max_min_required_version() {
  max_min_required_version_ = 0;
  clear_has_max_min_required_version();
}
inline ::google::protobuf::int32 NotificationSelection::max_min_required_version() const {
  // @@protoc_insertion_point(field_get:NotificationSelection.max_min_required_version)
  return max_min_required_version_;
}
inline void NotificationSelection::set_max_min_required_version(::google::protobuf::int32 value) {
  set_has_max_min_required_version();
  max_min_required_version_ = value;
  // @@protoc_insertion_point(field_set:NotificationSelection.max_min_required_version)
}

inline const NotificationSelection* NotificationSelection::internal_default_instance() {
  return &NotificationSelection_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InvalidateMetadata_2eproto__INCLUDED
