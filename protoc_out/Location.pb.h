// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Location.proto

#ifndef PROTOBUF_Location_2eproto__INCLUDED
#define PROTOBUF_Location_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Location_2eproto();
void protobuf_InitDefaults_Location_2eproto();
void protobuf_AssignDesc_Location_2eproto();
void protobuf_ShutdownFile_Location_2eproto();

class Location;

// ===================================================================

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static const Location* internal_default_instance();

  void Swap(Location* other);

  // implements Message ----------------------------------------------

  inline Location* New() const { return New(NULL); }

  Location* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Location* other);
  void UnsafeMergeFrom(const Location& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double latitude = 1;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  double latitude() const;
  void set_latitude(double value);

  // optional double longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // optional double accuracy = 3;
  bool has_accuracy() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 3;
  double accuracy() const;
  void set_accuracy(double value);

  // optional double altitude = 4;
  bool has_altitude() const;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  double altitude() const;
  void set_altitude(double value);

  // @@protoc_insertion_point(class_scope:Location)
 private:
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_accuracy();
  inline void clear_has_accuracy();
  inline void set_has_altitude();
  inline void clear_has_altitude();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double latitude_;
  double longitude_;
  double accuracy_;
  double altitude_;
  friend void  protobuf_InitDefaults_Location_2eproto_impl();
  friend void  protobuf_AddDesc_Location_2eproto_impl();
  friend void protobuf_AssignDesc_Location_2eproto();
  friend void protobuf_ShutdownFile_Location_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Location> Location_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Location

// optional double latitude = 1;
inline bool Location::has_latitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Location::set_has_latitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Location::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Location::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double Location::latitude() const {
  // @@protoc_insertion_point(field_get:Location.latitude)
  return latitude_;
}
inline void Location::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Location.latitude)
}

// optional double longitude = 2;
inline bool Location::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Location::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Location::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Location::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double Location::longitude() const {
  // @@protoc_insertion_point(field_get:Location.longitude)
  return longitude_;
}
inline void Location::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Location.longitude)
}

// optional double accuracy = 3;
inline bool Location::has_accuracy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Location::set_has_accuracy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Location::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Location::clear_accuracy() {
  accuracy_ = 0;
  clear_has_accuracy();
}
inline double Location::accuracy() const {
  // @@protoc_insertion_point(field_get:Location.accuracy)
  return accuracy_;
}
inline void Location::set_accuracy(double value) {
  set_has_accuracy();
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:Location.accuracy)
}

// optional double altitude = 4;
inline bool Location::has_altitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Location::set_has_altitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Location::clear_has_altitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Location::clear_altitude() {
  altitude_ = 0;
  clear_has_altitude();
}
inline double Location::altitude() const {
  // @@protoc_insertion_point(field_get:Location.altitude)
  return altitude_;
}
inline void Location::set_altitude(double value) {
  set_has_altitude();
  altitude_ = value;
  // @@protoc_insertion_point(field_set:Location.altitude)
}

inline const Location* Location::internal_default_instance() {
  return &Location_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Location_2eproto__INCLUDED
