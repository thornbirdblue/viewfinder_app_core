// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityMetadata.proto

#ifndef PROTOBUF_ActivityMetadata_2eproto__INCLUDED
#define PROTOBUF_ActivityMetadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ContentIds.pb.h"
#include "ContactMetadata.pb.h"
#include "QueueMetadata.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ActivityMetadata_2eproto();
void protobuf_InitDefaults_ActivityMetadata_2eproto();
void protobuf_AssignDesc_ActivityMetadata_2eproto();
void protobuf_ShutdownFile_ActivityMetadata_2eproto();

class ActivityMetadata;
class ActivityMetadata_AddFollowers;
class ActivityMetadata_Episode;
class ActivityMetadata_MergeAccounts;
class ActivityMetadata_PostComment;
class ActivityMetadata_RemoveFollowers;
class ActivityMetadata_SavePhotos;
class ActivityMetadata_ShareExisting;
class ActivityMetadata_ShareNew;
class ActivityMetadata_Unshare;
class ActivityMetadata_UpdateEpisode;
class ActivityMetadata_UpdateViewpoint;
class ActivityMetadata_UploadEpisode;

// ===================================================================

class ActivityMetadata_Episode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.Episode) */ {
 public:
  ActivityMetadata_Episode();
  virtual ~ActivityMetadata_Episode();

  ActivityMetadata_Episode(const ActivityMetadata_Episode& from);

  inline ActivityMetadata_Episode& operator=(const ActivityMetadata_Episode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_Episode& default_instance();

  static const ActivityMetadata_Episode* internal_default_instance();

  void Swap(ActivityMetadata_Episode* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_Episode* New() const { return New(NULL); }

  ActivityMetadata_Episode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_Episode& from);
  void MergeFrom(const ActivityMetadata_Episode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_Episode* other);
  void UnsafeMergeFrom(const ActivityMetadata_Episode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EpisodeId episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  const ::EpisodeId& episode_id() const;
  ::EpisodeId* mutable_episode_id();
  ::EpisodeId* release_episode_id();
  void set_allocated_episode_id(::EpisodeId* episode_id);

  // repeated .PhotoId photo_ids = 2;
  int photo_ids_size() const;
  void clear_photo_ids();
  static const int kPhotoIdsFieldNumber = 2;
  const ::PhotoId& photo_ids(int index) const;
  ::PhotoId* mutable_photo_ids(int index);
  ::PhotoId* add_photo_ids();
  ::google::protobuf::RepeatedPtrField< ::PhotoId >*
      mutable_photo_ids();
  const ::google::protobuf::RepeatedPtrField< ::PhotoId >&
      photo_ids() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.Episode)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PhotoId > photo_ids_;
  ::EpisodeId* episode_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_Episode> ActivityMetadata_Episode_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_AddFollowers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.AddFollowers) */ {
 public:
  ActivityMetadata_AddFollowers();
  virtual ~ActivityMetadata_AddFollowers();

  ActivityMetadata_AddFollowers(const ActivityMetadata_AddFollowers& from);

  inline ActivityMetadata_AddFollowers& operator=(const ActivityMetadata_AddFollowers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_AddFollowers& default_instance();

  static const ActivityMetadata_AddFollowers* internal_default_instance();

  void Swap(ActivityMetadata_AddFollowers* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_AddFollowers* New() const { return New(NULL); }

  ActivityMetadata_AddFollowers* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_AddFollowers& from);
  void MergeFrom(const ActivityMetadata_AddFollowers& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_AddFollowers* other);
  void UnsafeMergeFrom(const ActivityMetadata_AddFollowers& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ContactMetadata contacts = 1;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 1;
  const ::ContactMetadata& contacts(int index) const;
  ::ContactMetadata* mutable_contacts(int index);
  ::ContactMetadata* add_contacts();
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
      mutable_contacts();
  const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.AddFollowers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata > contacts_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_AddFollowers> ActivityMetadata_AddFollowers_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_MergeAccounts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.MergeAccounts) */ {
 public:
  ActivityMetadata_MergeAccounts();
  virtual ~ActivityMetadata_MergeAccounts();

  ActivityMetadata_MergeAccounts(const ActivityMetadata_MergeAccounts& from);

  inline ActivityMetadata_MergeAccounts& operator=(const ActivityMetadata_MergeAccounts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_MergeAccounts& default_instance();

  static const ActivityMetadata_MergeAccounts* internal_default_instance();

  void Swap(ActivityMetadata_MergeAccounts* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_MergeAccounts* New() const { return New(NULL); }

  ActivityMetadata_MergeAccounts* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_MergeAccounts& from);
  void MergeFrom(const ActivityMetadata_MergeAccounts& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_MergeAccounts* other);
  void UnsafeMergeFrom(const ActivityMetadata_MergeAccounts& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 source_user_id = 1;
  bool has_source_user_id() const;
  void clear_source_user_id();
  static const int kSourceUserIdFieldNumber = 1;
  ::google::protobuf::int64 source_user_id() const;
  void set_source_user_id(::google::protobuf::int64 value);

  // optional int64 target_user_id = 2;
  bool has_target_user_id() const;
  void clear_target_user_id();
  static const int kTargetUserIdFieldNumber = 2;
  ::google::protobuf::int64 target_user_id() const;
  void set_target_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ActivityMetadata.MergeAccounts)
 private:
  inline void set_has_source_user_id();
  inline void clear_has_source_user_id();
  inline void set_has_target_user_id();
  inline void clear_has_target_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 source_user_id_;
  ::google::protobuf::int64 target_user_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_MergeAccounts> ActivityMetadata_MergeAccounts_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_PostComment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.PostComment) */ {
 public:
  ActivityMetadata_PostComment();
  virtual ~ActivityMetadata_PostComment();

  ActivityMetadata_PostComment(const ActivityMetadata_PostComment& from);

  inline ActivityMetadata_PostComment& operator=(const ActivityMetadata_PostComment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_PostComment& default_instance();

  static const ActivityMetadata_PostComment* internal_default_instance();

  void Swap(ActivityMetadata_PostComment* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_PostComment* New() const { return New(NULL); }

  ActivityMetadata_PostComment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_PostComment& from);
  void MergeFrom(const ActivityMetadata_PostComment& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_PostComment* other);
  void UnsafeMergeFrom(const ActivityMetadata_PostComment& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CommentId comment_id = 1;
  bool has_comment_id() const;
  void clear_comment_id();
  static const int kCommentIdFieldNumber = 1;
  const ::CommentId& comment_id() const;
  ::CommentId* mutable_comment_id();
  ::CommentId* release_comment_id();
  void set_allocated_comment_id(::CommentId* comment_id);

  // @@protoc_insertion_point(class_scope:ActivityMetadata.PostComment)
 private:
  inline void set_has_comment_id();
  inline void clear_has_comment_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CommentId* comment_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_PostComment> ActivityMetadata_PostComment_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_RemoveFollowers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.RemoveFollowers) */ {
 public:
  ActivityMetadata_RemoveFollowers();
  virtual ~ActivityMetadata_RemoveFollowers();

  ActivityMetadata_RemoveFollowers(const ActivityMetadata_RemoveFollowers& from);

  inline ActivityMetadata_RemoveFollowers& operator=(const ActivityMetadata_RemoveFollowers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_RemoveFollowers& default_instance();

  static const ActivityMetadata_RemoveFollowers* internal_default_instance();

  void Swap(ActivityMetadata_RemoveFollowers* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_RemoveFollowers* New() const { return New(NULL); }

  ActivityMetadata_RemoveFollowers* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_RemoveFollowers& from);
  void MergeFrom(const ActivityMetadata_RemoveFollowers& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_RemoveFollowers* other);
  void UnsafeMergeFrom(const ActivityMetadata_RemoveFollowers& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 user_ids = 1;
  int user_ids_size() const;
  void clear_user_ids();
  static const int kUserIdsFieldNumber = 1;
  ::google::protobuf::int64 user_ids(int index) const;
  void set_user_ids(int index, ::google::protobuf::int64 value);
  void add_user_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      user_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_user_ids();

  // @@protoc_insertion_point(class_scope:ActivityMetadata.RemoveFollowers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_ids_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_RemoveFollowers> ActivityMetadata_RemoveFollowers_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_SavePhotos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.SavePhotos) */ {
 public:
  ActivityMetadata_SavePhotos();
  virtual ~ActivityMetadata_SavePhotos();

  ActivityMetadata_SavePhotos(const ActivityMetadata_SavePhotos& from);

  inline ActivityMetadata_SavePhotos& operator=(const ActivityMetadata_SavePhotos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_SavePhotos& default_instance();

  static const ActivityMetadata_SavePhotos* internal_default_instance();

  void Swap(ActivityMetadata_SavePhotos* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_SavePhotos* New() const { return New(NULL); }

  ActivityMetadata_SavePhotos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_SavePhotos& from);
  void MergeFrom(const ActivityMetadata_SavePhotos& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_SavePhotos* other);
  void UnsafeMergeFrom(const ActivityMetadata_SavePhotos& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityMetadata.Episode episodes = 1;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 1;
  const ::ActivityMetadata_Episode& episodes(int index) const;
  ::ActivityMetadata_Episode* mutable_episodes(int index);
  ::ActivityMetadata_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
      episodes() const;

  // optional .ViewpointId viewpoint_id = 2;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 2;
  const ::ViewpointId& viewpoint_id() const;
  ::ViewpointId* mutable_viewpoint_id();
  ::ViewpointId* release_viewpoint_id();
  void set_allocated_viewpoint_id(::ViewpointId* viewpoint_id);

  // @@protoc_insertion_point(class_scope:ActivityMetadata.SavePhotos)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode > episodes_;
  ::ViewpointId* viewpoint_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_SavePhotos> ActivityMetadata_SavePhotos_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_ShareNew : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.ShareNew) */ {
 public:
  ActivityMetadata_ShareNew();
  virtual ~ActivityMetadata_ShareNew();

  ActivityMetadata_ShareNew(const ActivityMetadata_ShareNew& from);

  inline ActivityMetadata_ShareNew& operator=(const ActivityMetadata_ShareNew& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_ShareNew& default_instance();

  static const ActivityMetadata_ShareNew* internal_default_instance();

  void Swap(ActivityMetadata_ShareNew* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_ShareNew* New() const { return New(NULL); }

  ActivityMetadata_ShareNew* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_ShareNew& from);
  void MergeFrom(const ActivityMetadata_ShareNew& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_ShareNew* other);
  void UnsafeMergeFrom(const ActivityMetadata_ShareNew& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityMetadata.Episode episodes = 1;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 1;
  const ::ActivityMetadata_Episode& episodes(int index) const;
  ::ActivityMetadata_Episode* mutable_episodes(int index);
  ::ActivityMetadata_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
      episodes() const;

  // repeated .ContactMetadata contacts = 2;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 2;
  const ::ContactMetadata& contacts(int index) const;
  ::ContactMetadata* mutable_contacts(int index);
  ::ContactMetadata* add_contacts();
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
      mutable_contacts();
  const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.ShareNew)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode > episodes_;
  ::google::protobuf::RepeatedPtrField< ::ContactMetadata > contacts_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_ShareNew> ActivityMetadata_ShareNew_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_ShareExisting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.ShareExisting) */ {
 public:
  ActivityMetadata_ShareExisting();
  virtual ~ActivityMetadata_ShareExisting();

  ActivityMetadata_ShareExisting(const ActivityMetadata_ShareExisting& from);

  inline ActivityMetadata_ShareExisting& operator=(const ActivityMetadata_ShareExisting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_ShareExisting& default_instance();

  static const ActivityMetadata_ShareExisting* internal_default_instance();

  void Swap(ActivityMetadata_ShareExisting* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_ShareExisting* New() const { return New(NULL); }

  ActivityMetadata_ShareExisting* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_ShareExisting& from);
  void MergeFrom(const ActivityMetadata_ShareExisting& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_ShareExisting* other);
  void UnsafeMergeFrom(const ActivityMetadata_ShareExisting& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityMetadata.Episode episodes = 1;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 1;
  const ::ActivityMetadata_Episode& episodes(int index) const;
  ::ActivityMetadata_Episode* mutable_episodes(int index);
  ::ActivityMetadata_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
      episodes() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.ShareExisting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode > episodes_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_ShareExisting> ActivityMetadata_ShareExisting_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_Unshare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.Unshare) */ {
 public:
  ActivityMetadata_Unshare();
  virtual ~ActivityMetadata_Unshare();

  ActivityMetadata_Unshare(const ActivityMetadata_Unshare& from);

  inline ActivityMetadata_Unshare& operator=(const ActivityMetadata_Unshare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_Unshare& default_instance();

  static const ActivityMetadata_Unshare* internal_default_instance();

  void Swap(ActivityMetadata_Unshare* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_Unshare* New() const { return New(NULL); }

  ActivityMetadata_Unshare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_Unshare& from);
  void MergeFrom(const ActivityMetadata_Unshare& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_Unshare* other);
  void UnsafeMergeFrom(const ActivityMetadata_Unshare& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityMetadata.Episode episodes = 1;
  int episodes_size() const;
  void clear_episodes();
  static const int kEpisodesFieldNumber = 1;
  const ::ActivityMetadata_Episode& episodes(int index) const;
  ::ActivityMetadata_Episode* mutable_episodes(int index);
  ::ActivityMetadata_Episode* add_episodes();
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
      mutable_episodes();
  const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
      episodes() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.Unshare)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode > episodes_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_Unshare> ActivityMetadata_Unshare_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_UpdateEpisode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.UpdateEpisode) */ {
 public:
  ActivityMetadata_UpdateEpisode();
  virtual ~ActivityMetadata_UpdateEpisode();

  ActivityMetadata_UpdateEpisode(const ActivityMetadata_UpdateEpisode& from);

  inline ActivityMetadata_UpdateEpisode& operator=(const ActivityMetadata_UpdateEpisode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_UpdateEpisode& default_instance();

  static const ActivityMetadata_UpdateEpisode* internal_default_instance();

  void Swap(ActivityMetadata_UpdateEpisode* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_UpdateEpisode* New() const { return New(NULL); }

  ActivityMetadata_UpdateEpisode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_UpdateEpisode& from);
  void MergeFrom(const ActivityMetadata_UpdateEpisode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_UpdateEpisode* other);
  void UnsafeMergeFrom(const ActivityMetadata_UpdateEpisode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EpisodeId episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  const ::EpisodeId& episode_id() const;
  ::EpisodeId* mutable_episode_id();
  ::EpisodeId* release_episode_id();
  void set_allocated_episode_id(::EpisodeId* episode_id);

  // @@protoc_insertion_point(class_scope:ActivityMetadata.UpdateEpisode)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::EpisodeId* episode_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_UpdateEpisode> ActivityMetadata_UpdateEpisode_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_UpdateViewpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.UpdateViewpoint) */ {
 public:
  ActivityMetadata_UpdateViewpoint();
  virtual ~ActivityMetadata_UpdateViewpoint();

  ActivityMetadata_UpdateViewpoint(const ActivityMetadata_UpdateViewpoint& from);

  inline ActivityMetadata_UpdateViewpoint& operator=(const ActivityMetadata_UpdateViewpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_UpdateViewpoint& default_instance();

  static const ActivityMetadata_UpdateViewpoint* internal_default_instance();

  void Swap(ActivityMetadata_UpdateViewpoint* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_UpdateViewpoint* New() const { return New(NULL); }

  ActivityMetadata_UpdateViewpoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_UpdateViewpoint& from);
  void MergeFrom(const ActivityMetadata_UpdateViewpoint& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_UpdateViewpoint* other);
  void UnsafeMergeFrom(const ActivityMetadata_UpdateViewpoint& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ViewpointId viewpoint_id = 1;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 1;
  const ::ViewpointId& viewpoint_id() const;
  ::ViewpointId* mutable_viewpoint_id();
  ::ViewpointId* release_viewpoint_id();
  void set_allocated_viewpoint_id(::ViewpointId* viewpoint_id);

  // @@protoc_insertion_point(class_scope:ActivityMetadata.UpdateViewpoint)
 private:
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ViewpointId* viewpoint_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_UpdateViewpoint> ActivityMetadata_UpdateViewpoint_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata_UploadEpisode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata.UploadEpisode) */ {
 public:
  ActivityMetadata_UploadEpisode();
  virtual ~ActivityMetadata_UploadEpisode();

  ActivityMetadata_UploadEpisode(const ActivityMetadata_UploadEpisode& from);

  inline ActivityMetadata_UploadEpisode& operator=(const ActivityMetadata_UploadEpisode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata_UploadEpisode& default_instance();

  static const ActivityMetadata_UploadEpisode* internal_default_instance();

  void Swap(ActivityMetadata_UploadEpisode* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata_UploadEpisode* New() const { return New(NULL); }

  ActivityMetadata_UploadEpisode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata_UploadEpisode& from);
  void MergeFrom(const ActivityMetadata_UploadEpisode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata_UploadEpisode* other);
  void UnsafeMergeFrom(const ActivityMetadata_UploadEpisode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EpisodeId episode_id = 1;
  bool has_episode_id() const;
  void clear_episode_id();
  static const int kEpisodeIdFieldNumber = 1;
  const ::EpisodeId& episode_id() const;
  ::EpisodeId* mutable_episode_id();
  ::EpisodeId* release_episode_id();
  void set_allocated_episode_id(::EpisodeId* episode_id);

  // repeated .PhotoId photo_ids = 2;
  int photo_ids_size() const;
  void clear_photo_ids();
  static const int kPhotoIdsFieldNumber = 2;
  const ::PhotoId& photo_ids(int index) const;
  ::PhotoId* mutable_photo_ids(int index);
  ::PhotoId* add_photo_ids();
  ::google::protobuf::RepeatedPtrField< ::PhotoId >*
      mutable_photo_ids();
  const ::google::protobuf::RepeatedPtrField< ::PhotoId >&
      photo_ids() const;

  // @@protoc_insertion_point(class_scope:ActivityMetadata.UploadEpisode)
 private:
  inline void set_has_episode_id();
  inline void clear_has_episode_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PhotoId > photo_ids_;
  ::EpisodeId* episode_id_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata_UploadEpisode> ActivityMetadata_UploadEpisode_default_instance_;

// -------------------------------------------------------------------

class ActivityMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityMetadata) */ {
 public:
  ActivityMetadata();
  virtual ~ActivityMetadata();

  ActivityMetadata(const ActivityMetadata& from);

  inline ActivityMetadata& operator=(const ActivityMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityMetadata& default_instance();

  static const ActivityMetadata* internal_default_instance();

  void Swap(ActivityMetadata* other);

  // implements Message ----------------------------------------------

  inline ActivityMetadata* New() const { return New(NULL); }

  ActivityMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityMetadata& from);
  void MergeFrom(const ActivityMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActivityMetadata* other);
  void UnsafeMergeFrom(const ActivityMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ActivityMetadata_Episode Episode;
  typedef ActivityMetadata_AddFollowers AddFollowers;
  typedef ActivityMetadata_MergeAccounts MergeAccounts;
  typedef ActivityMetadata_PostComment PostComment;
  typedef ActivityMetadata_RemoveFollowers RemoveFollowers;
  typedef ActivityMetadata_SavePhotos SavePhotos;
  typedef ActivityMetadata_ShareNew ShareNew;
  typedef ActivityMetadata_ShareExisting ShareExisting;
  typedef ActivityMetadata_Unshare Unshare;
  typedef ActivityMetadata_UpdateEpisode UpdateEpisode;
  typedef ActivityMetadata_UpdateViewpoint UpdateViewpoint;
  typedef ActivityMetadata_UploadEpisode UploadEpisode;

  // accessors -------------------------------------------------------

  // optional .ActivityId activity_id = 1;
  bool has_activity_id() const;
  void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  const ::ActivityId& activity_id() const;
  ::ActivityId* mutable_activity_id();
  ::ActivityId* release_activity_id();
  void set_allocated_activity_id(::ActivityId* activity_id);

  // optional .ViewpointId viewpoint_id = 2;
  bool has_viewpoint_id() const;
  void clear_viewpoint_id();
  static const int kViewpointIdFieldNumber = 2;
  const ::ViewpointId& viewpoint_id() const;
  ::ViewpointId* mutable_viewpoint_id();
  ::ViewpointId* release_viewpoint_id();
  void set_allocated_viewpoint_id(::ViewpointId* viewpoint_id);

  // optional int64 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // optional double timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // optional int64 update_seq = 5;
  bool has_update_seq() const;
  void clear_update_seq();
  static const int kUpdateSeqFieldNumber = 5;
  ::google::protobuf::int64 update_seq() const;
  void set_update_seq(::google::protobuf::int64 value);

  // optional .QueueMetadata queue = 6;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 6;
  const ::QueueMetadata& queue() const;
  ::QueueMetadata* mutable_queue();
  ::QueueMetadata* release_queue();
  void set_allocated_queue(::QueueMetadata* queue);

  // optional .ActivityMetadata.AddFollowers add_followers = 7;
  bool has_add_followers() const;
  void clear_add_followers();
  static const int kAddFollowersFieldNumber = 7;
  const ::ActivityMetadata_AddFollowers& add_followers() const;
  ::ActivityMetadata_AddFollowers* mutable_add_followers();
  ::ActivityMetadata_AddFollowers* release_add_followers();
  void set_allocated_add_followers(::ActivityMetadata_AddFollowers* add_followers);

  // optional .ActivityMetadata.MergeAccounts merge_accounts = 16;
  bool has_merge_accounts() const;
  void clear_merge_accounts();
  static const int kMergeAccountsFieldNumber = 16;
  const ::ActivityMetadata_MergeAccounts& merge_accounts() const;
  ::ActivityMetadata_MergeAccounts* mutable_merge_accounts();
  ::ActivityMetadata_MergeAccounts* release_merge_accounts();
  void set_allocated_merge_accounts(::ActivityMetadata_MergeAccounts* merge_accounts);

  // optional .ActivityMetadata.PostComment post_comment = 8;
  bool has_post_comment() const;
  void clear_post_comment();
  static const int kPostCommentFieldNumber = 8;
  const ::ActivityMetadata_PostComment& post_comment() const;
  ::ActivityMetadata_PostComment* mutable_post_comment();
  ::ActivityMetadata_PostComment* release_post_comment();
  void set_allocated_post_comment(::ActivityMetadata_PostComment* post_comment);

  // optional .ActivityMetadata.RemoveFollowers remove_followers = 17;
  bool has_remove_followers() const;
  void clear_remove_followers();
  static const int kRemoveFollowersFieldNumber = 17;
  const ::ActivityMetadata_RemoveFollowers& remove_followers() const;
  ::ActivityMetadata_RemoveFollowers* mutable_remove_followers();
  ::ActivityMetadata_RemoveFollowers* release_remove_followers();
  void set_allocated_remove_followers(::ActivityMetadata_RemoveFollowers* remove_followers);

  // optional .ActivityMetadata.SavePhotos save_photos = 15;
  bool has_save_photos() const;
  void clear_save_photos();
  static const int kSavePhotosFieldNumber = 15;
  const ::ActivityMetadata_SavePhotos& save_photos() const;
  ::ActivityMetadata_SavePhotos* mutable_save_photos();
  ::ActivityMetadata_SavePhotos* release_save_photos();
  void set_allocated_save_photos(::ActivityMetadata_SavePhotos* save_photos);

  // optional .ActivityMetadata.ShareNew share_new = 9;
  bool has_share_new() const;
  void clear_share_new();
  static const int kShareNewFieldNumber = 9;
  const ::ActivityMetadata_ShareNew& share_new() const;
  ::ActivityMetadata_ShareNew* mutable_share_new();
  ::ActivityMetadata_ShareNew* release_share_new();
  void set_allocated_share_new(::ActivityMetadata_ShareNew* share_new);

  // optional .ActivityMetadata.ShareExisting share_existing = 10;
  bool has_share_existing() const;
  void clear_share_existing();
  static const int kShareExistingFieldNumber = 10;
  const ::ActivityMetadata_ShareExisting& share_existing() const;
  ::ActivityMetadata_ShareExisting* mutable_share_existing();
  ::ActivityMetadata_ShareExisting* release_share_existing();
  void set_allocated_share_existing(::ActivityMetadata_ShareExisting* share_existing);

  // optional .ActivityMetadata.Unshare unshare = 11;
  bool has_unshare() const;
  void clear_unshare();
  static const int kUnshareFieldNumber = 11;
  const ::ActivityMetadata_Unshare& unshare() const;
  ::ActivityMetadata_Unshare* mutable_unshare();
  ::ActivityMetadata_Unshare* release_unshare();
  void set_allocated_unshare(::ActivityMetadata_Unshare* unshare);

  // optional .ActivityMetadata.UpdateEpisode update_episode = 12;
  bool has_update_episode() const;
  void clear_update_episode();
  static const int kUpdateEpisodeFieldNumber = 12;
  const ::ActivityMetadata_UpdateEpisode& update_episode() const;
  ::ActivityMetadata_UpdateEpisode* mutable_update_episode();
  ::ActivityMetadata_UpdateEpisode* release_update_episode();
  void set_allocated_update_episode(::ActivityMetadata_UpdateEpisode* update_episode);

  // optional .ActivityMetadata.UpdateViewpoint update_viewpoint = 13;
  bool has_update_viewpoint() const;
  void clear_update_viewpoint();
  static const int kUpdateViewpointFieldNumber = 13;
  const ::ActivityMetadata_UpdateViewpoint& update_viewpoint() const;
  ::ActivityMetadata_UpdateViewpoint* mutable_update_viewpoint();
  ::ActivityMetadata_UpdateViewpoint* release_update_viewpoint();
  void set_allocated_update_viewpoint(::ActivityMetadata_UpdateViewpoint* update_viewpoint);

  // optional .ActivityMetadata.UploadEpisode upload_episode = 14;
  bool has_upload_episode() const;
  void clear_upload_episode();
  static const int kUploadEpisodeFieldNumber = 14;
  const ::ActivityMetadata_UploadEpisode& upload_episode() const;
  ::ActivityMetadata_UploadEpisode* mutable_upload_episode();
  ::ActivityMetadata_UploadEpisode* release_upload_episode();
  void set_allocated_upload_episode(::ActivityMetadata_UploadEpisode* upload_episode);

  // optional bool label_error = 20;
  bool has_label_error() const;
  void clear_label_error();
  static const int kLabelErrorFieldNumber = 20;
  bool label_error() const;
  void set_label_error(bool value);

  // optional bool provisional = 32;
  bool has_provisional() const;
  void clear_provisional();
  static const int kProvisionalFieldNumber = 32;
  bool provisional() const;
  void set_provisional(bool value);

  // optional bool upload_activity = 30;
  bool has_upload_activity() const;
  void clear_upload_activity();
  static const int kUploadActivityFieldNumber = 30;
  bool upload_activity() const;
  void set_upload_activity(bool value);

  // optional double viewed_timestamp = 31;
  bool has_viewed_timestamp() const;
  void clear_viewed_timestamp();
  static const int kViewedTimestampFieldNumber = 31;
  double viewed_timestamp() const;
  void set_viewed_timestamp(double value);

  // @@protoc_insertion_point(class_scope:ActivityMetadata)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_viewpoint_id();
  inline void clear_has_viewpoint_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_update_seq();
  inline void clear_has_update_seq();
  inline void set_has_queue();
  inline void clear_has_queue();
  inline void set_has_add_followers();
  inline void clear_has_add_followers();
  inline void set_has_merge_accounts();
  inline void clear_has_merge_accounts();
  inline void set_has_post_comment();
  inline void clear_has_post_comment();
  inline void set_has_remove_followers();
  inline void clear_has_remove_followers();
  inline void set_has_save_photos();
  inline void clear_has_save_photos();
  inline void set_has_share_new();
  inline void clear_has_share_new();
  inline void set_has_share_existing();
  inline void clear_has_share_existing();
  inline void set_has_unshare();
  inline void clear_has_unshare();
  inline void set_has_update_episode();
  inline void clear_has_update_episode();
  inline void set_has_update_viewpoint();
  inline void clear_has_update_viewpoint();
  inline void set_has_upload_episode();
  inline void clear_has_upload_episode();
  inline void set_has_label_error();
  inline void clear_has_label_error();
  inline void set_has_provisional();
  inline void clear_has_provisional();
  inline void set_has_upload_activity();
  inline void clear_has_upload_activity();
  inline void set_has_viewed_timestamp();
  inline void clear_has_viewed_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityId* activity_id_;
  ::ViewpointId* viewpoint_id_;
  ::QueueMetadata* queue_;
  ::ActivityMetadata_AddFollowers* add_followers_;
  ::ActivityMetadata_MergeAccounts* merge_accounts_;
  ::ActivityMetadata_PostComment* post_comment_;
  ::ActivityMetadata_RemoveFollowers* remove_followers_;
  ::ActivityMetadata_SavePhotos* save_photos_;
  ::ActivityMetadata_ShareNew* share_new_;
  ::ActivityMetadata_ShareExisting* share_existing_;
  ::ActivityMetadata_Unshare* unshare_;
  ::ActivityMetadata_UpdateEpisode* update_episode_;
  ::ActivityMetadata_UpdateViewpoint* update_viewpoint_;
  ::ActivityMetadata_UploadEpisode* upload_episode_;
  ::google::protobuf::int64 user_id_;
  double timestamp_;
  ::google::protobuf::int64 update_seq_;
  double viewed_timestamp_;
  bool label_error_;
  bool provisional_;
  bool upload_activity_;
  friend void  protobuf_InitDefaults_ActivityMetadata_2eproto_impl();
  friend void  protobuf_AddDesc_ActivityMetadata_2eproto_impl();
  friend void protobuf_AssignDesc_ActivityMetadata_2eproto();
  friend void protobuf_ShutdownFile_ActivityMetadata_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ActivityMetadata> ActivityMetadata_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityMetadata_Episode

// optional .EpisodeId episode_id = 1;
inline bool ActivityMetadata_Episode::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_Episode::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_Episode::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_Episode::clear_episode_id() {
  if (episode_id_ != NULL) episode_id_->::EpisodeId::Clear();
  clear_has_episode_id();
}
inline const ::EpisodeId& ActivityMetadata_Episode::episode_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.Episode.episode_id)
  return episode_id_ != NULL ? *episode_id_
                         : *::EpisodeId::internal_default_instance();
}
inline ::EpisodeId* ActivityMetadata_Episode::mutable_episode_id() {
  set_has_episode_id();
  if (episode_id_ == NULL) {
    episode_id_ = new ::EpisodeId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.Episode.episode_id)
  return episode_id_;
}
inline ::EpisodeId* ActivityMetadata_Episode::release_episode_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.Episode.episode_id)
  clear_has_episode_id();
  ::EpisodeId* temp = episode_id_;
  episode_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_Episode::set_allocated_episode_id(::EpisodeId* episode_id) {
  delete episode_id_;
  episode_id_ = episode_id;
  if (episode_id) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.Episode.episode_id)
}

// repeated .PhotoId photo_ids = 2;
inline int ActivityMetadata_Episode::photo_ids_size() const {
  return photo_ids_.size();
}
inline void ActivityMetadata_Episode::clear_photo_ids() {
  photo_ids_.Clear();
}
inline const ::PhotoId& ActivityMetadata_Episode::photo_ids(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.Episode.photo_ids)
  return photo_ids_.Get(index);
}
inline ::PhotoId* ActivityMetadata_Episode::mutable_photo_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.Episode.photo_ids)
  return photo_ids_.Mutable(index);
}
inline ::PhotoId* ActivityMetadata_Episode::add_photo_ids() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.Episode.photo_ids)
  return photo_ids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PhotoId >*
ActivityMetadata_Episode::mutable_photo_ids() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.Episode.photo_ids)
  return &photo_ids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PhotoId >&
ActivityMetadata_Episode::photo_ids() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.Episode.photo_ids)
  return photo_ids_;
}

inline const ActivityMetadata_Episode* ActivityMetadata_Episode::internal_default_instance() {
  return &ActivityMetadata_Episode_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_AddFollowers

// repeated .ContactMetadata contacts = 1;
inline int ActivityMetadata_AddFollowers::contacts_size() const {
  return contacts_.size();
}
inline void ActivityMetadata_AddFollowers::clear_contacts() {
  contacts_.Clear();
}
inline const ::ContactMetadata& ActivityMetadata_AddFollowers::contacts(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.AddFollowers.contacts)
  return contacts_.Get(index);
}
inline ::ContactMetadata* ActivityMetadata_AddFollowers::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.AddFollowers.contacts)
  return contacts_.Mutable(index);
}
inline ::ContactMetadata* ActivityMetadata_AddFollowers::add_contacts() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.AddFollowers.contacts)
  return contacts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
ActivityMetadata_AddFollowers::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.AddFollowers.contacts)
  return &contacts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
ActivityMetadata_AddFollowers::contacts() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.AddFollowers.contacts)
  return contacts_;
}

inline const ActivityMetadata_AddFollowers* ActivityMetadata_AddFollowers::internal_default_instance() {
  return &ActivityMetadata_AddFollowers_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_MergeAccounts

// optional int64 source_user_id = 1;
inline bool ActivityMetadata_MergeAccounts::has_source_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_MergeAccounts::set_has_source_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_MergeAccounts::clear_has_source_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_MergeAccounts::clear_source_user_id() {
  source_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_source_user_id();
}
inline ::google::protobuf::int64 ActivityMetadata_MergeAccounts::source_user_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.MergeAccounts.source_user_id)
  return source_user_id_;
}
inline void ActivityMetadata_MergeAccounts::set_source_user_id(::google::protobuf::int64 value) {
  set_has_source_user_id();
  source_user_id_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.MergeAccounts.source_user_id)
}

// optional int64 target_user_id = 2;
inline bool ActivityMetadata_MergeAccounts::has_target_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityMetadata_MergeAccounts::set_has_target_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityMetadata_MergeAccounts::clear_has_target_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityMetadata_MergeAccounts::clear_target_user_id() {
  target_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_target_user_id();
}
inline ::google::protobuf::int64 ActivityMetadata_MergeAccounts::target_user_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.MergeAccounts.target_user_id)
  return target_user_id_;
}
inline void ActivityMetadata_MergeAccounts::set_target_user_id(::google::protobuf::int64 value) {
  set_has_target_user_id();
  target_user_id_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.MergeAccounts.target_user_id)
}

inline const ActivityMetadata_MergeAccounts* ActivityMetadata_MergeAccounts::internal_default_instance() {
  return &ActivityMetadata_MergeAccounts_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_PostComment

// optional .CommentId comment_id = 1;
inline bool ActivityMetadata_PostComment::has_comment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_PostComment::set_has_comment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_PostComment::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_PostComment::clear_comment_id() {
  if (comment_id_ != NULL) comment_id_->::CommentId::Clear();
  clear_has_comment_id();
}
inline const ::CommentId& ActivityMetadata_PostComment::comment_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.PostComment.comment_id)
  return comment_id_ != NULL ? *comment_id_
                         : *::CommentId::internal_default_instance();
}
inline ::CommentId* ActivityMetadata_PostComment::mutable_comment_id() {
  set_has_comment_id();
  if (comment_id_ == NULL) {
    comment_id_ = new ::CommentId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.PostComment.comment_id)
  return comment_id_;
}
inline ::CommentId* ActivityMetadata_PostComment::release_comment_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.PostComment.comment_id)
  clear_has_comment_id();
  ::CommentId* temp = comment_id_;
  comment_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_PostComment::set_allocated_comment_id(::CommentId* comment_id) {
  delete comment_id_;
  comment_id_ = comment_id;
  if (comment_id) {
    set_has_comment_id();
  } else {
    clear_has_comment_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.PostComment.comment_id)
}

inline const ActivityMetadata_PostComment* ActivityMetadata_PostComment::internal_default_instance() {
  return &ActivityMetadata_PostComment_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_RemoveFollowers

// repeated int64 user_ids = 1;
inline int ActivityMetadata_RemoveFollowers::user_ids_size() const {
  return user_ids_.size();
}
inline void ActivityMetadata_RemoveFollowers::clear_user_ids() {
  user_ids_.Clear();
}
inline ::google::protobuf::int64 ActivityMetadata_RemoveFollowers::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.RemoveFollowers.user_ids)
  return user_ids_.Get(index);
}
inline void ActivityMetadata_RemoveFollowers::set_user_ids(int index, ::google::protobuf::int64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ActivityMetadata.RemoveFollowers.user_ids)
}
inline void ActivityMetadata_RemoveFollowers::add_user_ids(::google::protobuf::int64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:ActivityMetadata.RemoveFollowers.user_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ActivityMetadata_RemoveFollowers::user_ids() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.RemoveFollowers.user_ids)
  return user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ActivityMetadata_RemoveFollowers::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.RemoveFollowers.user_ids)
  return &user_ids_;
}

inline const ActivityMetadata_RemoveFollowers* ActivityMetadata_RemoveFollowers::internal_default_instance() {
  return &ActivityMetadata_RemoveFollowers_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_SavePhotos

// repeated .ActivityMetadata.Episode episodes = 1;
inline int ActivityMetadata_SavePhotos::episodes_size() const {
  return episodes_.size();
}
inline void ActivityMetadata_SavePhotos::clear_episodes() {
  episodes_.Clear();
}
inline const ::ActivityMetadata_Episode& ActivityMetadata_SavePhotos::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.SavePhotos.episodes)
  return episodes_.Get(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_SavePhotos::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.SavePhotos.episodes)
  return episodes_.Mutable(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_SavePhotos::add_episodes() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.SavePhotos.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ActivityMetadata_SavePhotos::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.SavePhotos.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ActivityMetadata_SavePhotos::episodes() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.SavePhotos.episodes)
  return episodes_;
}

// optional .ViewpointId viewpoint_id = 2;
inline bool ActivityMetadata_SavePhotos::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityMetadata_SavePhotos::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityMetadata_SavePhotos::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityMetadata_SavePhotos::clear_viewpoint_id() {
  if (viewpoint_id_ != NULL) viewpoint_id_->::ViewpointId::Clear();
  clear_has_viewpoint_id();
}
inline const ::ViewpointId& ActivityMetadata_SavePhotos::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.SavePhotos.viewpoint_id)
  return viewpoint_id_ != NULL ? *viewpoint_id_
                         : *::ViewpointId::internal_default_instance();
}
inline ::ViewpointId* ActivityMetadata_SavePhotos::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  if (viewpoint_id_ == NULL) {
    viewpoint_id_ = new ::ViewpointId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.SavePhotos.viewpoint_id)
  return viewpoint_id_;
}
inline ::ViewpointId* ActivityMetadata_SavePhotos::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.SavePhotos.viewpoint_id)
  clear_has_viewpoint_id();
  ::ViewpointId* temp = viewpoint_id_;
  viewpoint_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_SavePhotos::set_allocated_viewpoint_id(::ViewpointId* viewpoint_id) {
  delete viewpoint_id_;
  viewpoint_id_ = viewpoint_id;
  if (viewpoint_id) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.SavePhotos.viewpoint_id)
}

inline const ActivityMetadata_SavePhotos* ActivityMetadata_SavePhotos::internal_default_instance() {
  return &ActivityMetadata_SavePhotos_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_ShareNew

// repeated .ActivityMetadata.Episode episodes = 1;
inline int ActivityMetadata_ShareNew::episodes_size() const {
  return episodes_.size();
}
inline void ActivityMetadata_ShareNew::clear_episodes() {
  episodes_.Clear();
}
inline const ::ActivityMetadata_Episode& ActivityMetadata_ShareNew::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.ShareNew.episodes)
  return episodes_.Get(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_ShareNew::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.ShareNew.episodes)
  return episodes_.Mutable(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_ShareNew::add_episodes() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.ShareNew.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ActivityMetadata_ShareNew::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.ShareNew.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ActivityMetadata_ShareNew::episodes() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.ShareNew.episodes)
  return episodes_;
}

// repeated .ContactMetadata contacts = 2;
inline int ActivityMetadata_ShareNew::contacts_size() const {
  return contacts_.size();
}
inline void ActivityMetadata_ShareNew::clear_contacts() {
  contacts_.Clear();
}
inline const ::ContactMetadata& ActivityMetadata_ShareNew::contacts(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.ShareNew.contacts)
  return contacts_.Get(index);
}
inline ::ContactMetadata* ActivityMetadata_ShareNew::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.ShareNew.contacts)
  return contacts_.Mutable(index);
}
inline ::ContactMetadata* ActivityMetadata_ShareNew::add_contacts() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.ShareNew.contacts)
  return contacts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ContactMetadata >*
ActivityMetadata_ShareNew::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.ShareNew.contacts)
  return &contacts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactMetadata >&
ActivityMetadata_ShareNew::contacts() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.ShareNew.contacts)
  return contacts_;
}

inline const ActivityMetadata_ShareNew* ActivityMetadata_ShareNew::internal_default_instance() {
  return &ActivityMetadata_ShareNew_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_ShareExisting

// repeated .ActivityMetadata.Episode episodes = 1;
inline int ActivityMetadata_ShareExisting::episodes_size() const {
  return episodes_.size();
}
inline void ActivityMetadata_ShareExisting::clear_episodes() {
  episodes_.Clear();
}
inline const ::ActivityMetadata_Episode& ActivityMetadata_ShareExisting::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.ShareExisting.episodes)
  return episodes_.Get(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_ShareExisting::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.ShareExisting.episodes)
  return episodes_.Mutable(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_ShareExisting::add_episodes() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.ShareExisting.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ActivityMetadata_ShareExisting::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.ShareExisting.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ActivityMetadata_ShareExisting::episodes() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.ShareExisting.episodes)
  return episodes_;
}

inline const ActivityMetadata_ShareExisting* ActivityMetadata_ShareExisting::internal_default_instance() {
  return &ActivityMetadata_ShareExisting_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_Unshare

// repeated .ActivityMetadata.Episode episodes = 1;
inline int ActivityMetadata_Unshare::episodes_size() const {
  return episodes_.size();
}
inline void ActivityMetadata_Unshare::clear_episodes() {
  episodes_.Clear();
}
inline const ::ActivityMetadata_Episode& ActivityMetadata_Unshare::episodes(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.Unshare.episodes)
  return episodes_.Get(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_Unshare::mutable_episodes(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.Unshare.episodes)
  return episodes_.Mutable(index);
}
inline ::ActivityMetadata_Episode* ActivityMetadata_Unshare::add_episodes() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.Unshare.episodes)
  return episodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >*
ActivityMetadata_Unshare::mutable_episodes() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.Unshare.episodes)
  return &episodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityMetadata_Episode >&
ActivityMetadata_Unshare::episodes() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.Unshare.episodes)
  return episodes_;
}

inline const ActivityMetadata_Unshare* ActivityMetadata_Unshare::internal_default_instance() {
  return &ActivityMetadata_Unshare_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_UpdateEpisode

// optional .EpisodeId episode_id = 1;
inline bool ActivityMetadata_UpdateEpisode::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_UpdateEpisode::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_UpdateEpisode::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_UpdateEpisode::clear_episode_id() {
  if (episode_id_ != NULL) episode_id_->::EpisodeId::Clear();
  clear_has_episode_id();
}
inline const ::EpisodeId& ActivityMetadata_UpdateEpisode::episode_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.UpdateEpisode.episode_id)
  return episode_id_ != NULL ? *episode_id_
                         : *::EpisodeId::internal_default_instance();
}
inline ::EpisodeId* ActivityMetadata_UpdateEpisode::mutable_episode_id() {
  set_has_episode_id();
  if (episode_id_ == NULL) {
    episode_id_ = new ::EpisodeId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.UpdateEpisode.episode_id)
  return episode_id_;
}
inline ::EpisodeId* ActivityMetadata_UpdateEpisode::release_episode_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.UpdateEpisode.episode_id)
  clear_has_episode_id();
  ::EpisodeId* temp = episode_id_;
  episode_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_UpdateEpisode::set_allocated_episode_id(::EpisodeId* episode_id) {
  delete episode_id_;
  episode_id_ = episode_id;
  if (episode_id) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.UpdateEpisode.episode_id)
}

inline const ActivityMetadata_UpdateEpisode* ActivityMetadata_UpdateEpisode::internal_default_instance() {
  return &ActivityMetadata_UpdateEpisode_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_UpdateViewpoint

// optional .ViewpointId viewpoint_id = 1;
inline bool ActivityMetadata_UpdateViewpoint::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_UpdateViewpoint::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_UpdateViewpoint::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_UpdateViewpoint::clear_viewpoint_id() {
  if (viewpoint_id_ != NULL) viewpoint_id_->::ViewpointId::Clear();
  clear_has_viewpoint_id();
}
inline const ::ViewpointId& ActivityMetadata_UpdateViewpoint::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.UpdateViewpoint.viewpoint_id)
  return viewpoint_id_ != NULL ? *viewpoint_id_
                         : *::ViewpointId::internal_default_instance();
}
inline ::ViewpointId* ActivityMetadata_UpdateViewpoint::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  if (viewpoint_id_ == NULL) {
    viewpoint_id_ = new ::ViewpointId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.UpdateViewpoint.viewpoint_id)
  return viewpoint_id_;
}
inline ::ViewpointId* ActivityMetadata_UpdateViewpoint::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.UpdateViewpoint.viewpoint_id)
  clear_has_viewpoint_id();
  ::ViewpointId* temp = viewpoint_id_;
  viewpoint_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_UpdateViewpoint::set_allocated_viewpoint_id(::ViewpointId* viewpoint_id) {
  delete viewpoint_id_;
  viewpoint_id_ = viewpoint_id;
  if (viewpoint_id) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.UpdateViewpoint.viewpoint_id)
}

inline const ActivityMetadata_UpdateViewpoint* ActivityMetadata_UpdateViewpoint::internal_default_instance() {
  return &ActivityMetadata_UpdateViewpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata_UploadEpisode

// optional .EpisodeId episode_id = 1;
inline bool ActivityMetadata_UploadEpisode::has_episode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata_UploadEpisode::set_has_episode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata_UploadEpisode::clear_has_episode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata_UploadEpisode::clear_episode_id() {
  if (episode_id_ != NULL) episode_id_->::EpisodeId::Clear();
  clear_has_episode_id();
}
inline const ::EpisodeId& ActivityMetadata_UploadEpisode::episode_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.UploadEpisode.episode_id)
  return episode_id_ != NULL ? *episode_id_
                         : *::EpisodeId::internal_default_instance();
}
inline ::EpisodeId* ActivityMetadata_UploadEpisode::mutable_episode_id() {
  set_has_episode_id();
  if (episode_id_ == NULL) {
    episode_id_ = new ::EpisodeId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.UploadEpisode.episode_id)
  return episode_id_;
}
inline ::EpisodeId* ActivityMetadata_UploadEpisode::release_episode_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.UploadEpisode.episode_id)
  clear_has_episode_id();
  ::EpisodeId* temp = episode_id_;
  episode_id_ = NULL;
  return temp;
}
inline void ActivityMetadata_UploadEpisode::set_allocated_episode_id(::EpisodeId* episode_id) {
  delete episode_id_;
  episode_id_ = episode_id;
  if (episode_id) {
    set_has_episode_id();
  } else {
    clear_has_episode_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.UploadEpisode.episode_id)
}

// repeated .PhotoId photo_ids = 2;
inline int ActivityMetadata_UploadEpisode::photo_ids_size() const {
  return photo_ids_.size();
}
inline void ActivityMetadata_UploadEpisode::clear_photo_ids() {
  photo_ids_.Clear();
}
inline const ::PhotoId& ActivityMetadata_UploadEpisode::photo_ids(int index) const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.UploadEpisode.photo_ids)
  return photo_ids_.Get(index);
}
inline ::PhotoId* ActivityMetadata_UploadEpisode::mutable_photo_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.UploadEpisode.photo_ids)
  return photo_ids_.Mutable(index);
}
inline ::PhotoId* ActivityMetadata_UploadEpisode::add_photo_ids() {
  // @@protoc_insertion_point(field_add:ActivityMetadata.UploadEpisode.photo_ids)
  return photo_ids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PhotoId >*
ActivityMetadata_UploadEpisode::mutable_photo_ids() {
  // @@protoc_insertion_point(field_mutable_list:ActivityMetadata.UploadEpisode.photo_ids)
  return &photo_ids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PhotoId >&
ActivityMetadata_UploadEpisode::photo_ids() const {
  // @@protoc_insertion_point(field_list:ActivityMetadata.UploadEpisode.photo_ids)
  return photo_ids_;
}

inline const ActivityMetadata_UploadEpisode* ActivityMetadata_UploadEpisode::internal_default_instance() {
  return &ActivityMetadata_UploadEpisode_default_instance_.get();
}
// -------------------------------------------------------------------

// ActivityMetadata

// optional .ActivityId activity_id = 1;
inline bool ActivityMetadata::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMetadata::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMetadata::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMetadata::clear_activity_id() {
  if (activity_id_ != NULL) activity_id_->::ActivityId::Clear();
  clear_has_activity_id();
}
inline const ::ActivityId& ActivityMetadata::activity_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.activity_id)
  return activity_id_ != NULL ? *activity_id_
                         : *::ActivityId::internal_default_instance();
}
inline ::ActivityId* ActivityMetadata::mutable_activity_id() {
  set_has_activity_id();
  if (activity_id_ == NULL) {
    activity_id_ = new ::ActivityId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.activity_id)
  return activity_id_;
}
inline ::ActivityId* ActivityMetadata::release_activity_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.activity_id)
  clear_has_activity_id();
  ::ActivityId* temp = activity_id_;
  activity_id_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_activity_id(::ActivityId* activity_id) {
  delete activity_id_;
  activity_id_ = activity_id;
  if (activity_id) {
    set_has_activity_id();
  } else {
    clear_has_activity_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.activity_id)
}

// optional .ViewpointId viewpoint_id = 2;
inline bool ActivityMetadata::has_viewpoint_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityMetadata::set_has_viewpoint_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityMetadata::clear_has_viewpoint_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityMetadata::clear_viewpoint_id() {
  if (viewpoint_id_ != NULL) viewpoint_id_->::ViewpointId::Clear();
  clear_has_viewpoint_id();
}
inline const ::ViewpointId& ActivityMetadata::viewpoint_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.viewpoint_id)
  return viewpoint_id_ != NULL ? *viewpoint_id_
                         : *::ViewpointId::internal_default_instance();
}
inline ::ViewpointId* ActivityMetadata::mutable_viewpoint_id() {
  set_has_viewpoint_id();
  if (viewpoint_id_ == NULL) {
    viewpoint_id_ = new ::ViewpointId;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.viewpoint_id)
  return viewpoint_id_;
}
inline ::ViewpointId* ActivityMetadata::release_viewpoint_id() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.viewpoint_id)
  clear_has_viewpoint_id();
  ::ViewpointId* temp = viewpoint_id_;
  viewpoint_id_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_viewpoint_id(::ViewpointId* viewpoint_id) {
  delete viewpoint_id_;
  viewpoint_id_ = viewpoint_id;
  if (viewpoint_id) {
    set_has_viewpoint_id();
  } else {
    clear_has_viewpoint_id();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.viewpoint_id)
}

// optional int64 user_id = 3;
inline bool ActivityMetadata::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityMetadata::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityMetadata::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityMetadata::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ActivityMetadata::user_id() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.user_id)
  return user_id_;
}
inline void ActivityMetadata::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.user_id)
}

// optional double timestamp = 4;
inline bool ActivityMetadata::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityMetadata::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityMetadata::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityMetadata::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double ActivityMetadata::timestamp() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.timestamp)
  return timestamp_;
}
inline void ActivityMetadata::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.timestamp)
}

// optional int64 update_seq = 5;
inline bool ActivityMetadata::has_update_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActivityMetadata::set_has_update_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActivityMetadata::clear_has_update_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActivityMetadata::clear_update_seq() {
  update_seq_ = GOOGLE_LONGLONG(0);
  clear_has_update_seq();
}
inline ::google::protobuf::int64 ActivityMetadata::update_seq() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.update_seq)
  return update_seq_;
}
inline void ActivityMetadata::set_update_seq(::google::protobuf::int64 value) {
  set_has_update_seq();
  update_seq_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.update_seq)
}

// optional .QueueMetadata queue = 6;
inline bool ActivityMetadata::has_queue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActivityMetadata::set_has_queue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActivityMetadata::clear_has_queue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActivityMetadata::clear_queue() {
  if (queue_ != NULL) queue_->::QueueMetadata::Clear();
  clear_has_queue();
}
inline const ::QueueMetadata& ActivityMetadata::queue() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.queue)
  return queue_ != NULL ? *queue_
                         : *::QueueMetadata::internal_default_instance();
}
inline ::QueueMetadata* ActivityMetadata::mutable_queue() {
  set_has_queue();
  if (queue_ == NULL) {
    queue_ = new ::QueueMetadata;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.queue)
  return queue_;
}
inline ::QueueMetadata* ActivityMetadata::release_queue() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.queue)
  clear_has_queue();
  ::QueueMetadata* temp = queue_;
  queue_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_queue(::QueueMetadata* queue) {
  delete queue_;
  queue_ = queue;
  if (queue) {
    set_has_queue();
  } else {
    clear_has_queue();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.queue)
}

// optional .ActivityMetadata.AddFollowers add_followers = 7;
inline bool ActivityMetadata::has_add_followers() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActivityMetadata::set_has_add_followers() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActivityMetadata::clear_has_add_followers() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActivityMetadata::clear_add_followers() {
  if (add_followers_ != NULL) add_followers_->::ActivityMetadata_AddFollowers::Clear();
  clear_has_add_followers();
}
inline const ::ActivityMetadata_AddFollowers& ActivityMetadata::add_followers() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.add_followers)
  return add_followers_ != NULL ? *add_followers_
                         : *::ActivityMetadata_AddFollowers::internal_default_instance();
}
inline ::ActivityMetadata_AddFollowers* ActivityMetadata::mutable_add_followers() {
  set_has_add_followers();
  if (add_followers_ == NULL) {
    add_followers_ = new ::ActivityMetadata_AddFollowers;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.add_followers)
  return add_followers_;
}
inline ::ActivityMetadata_AddFollowers* ActivityMetadata::release_add_followers() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.add_followers)
  clear_has_add_followers();
  ::ActivityMetadata_AddFollowers* temp = add_followers_;
  add_followers_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_add_followers(::ActivityMetadata_AddFollowers* add_followers) {
  delete add_followers_;
  add_followers_ = add_followers;
  if (add_followers) {
    set_has_add_followers();
  } else {
    clear_has_add_followers();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.add_followers)
}

// optional .ActivityMetadata.MergeAccounts merge_accounts = 16;
inline bool ActivityMetadata::has_merge_accounts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActivityMetadata::set_has_merge_accounts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActivityMetadata::clear_has_merge_accounts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActivityMetadata::clear_merge_accounts() {
  if (merge_accounts_ != NULL) merge_accounts_->::ActivityMetadata_MergeAccounts::Clear();
  clear_has_merge_accounts();
}
inline const ::ActivityMetadata_MergeAccounts& ActivityMetadata::merge_accounts() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.merge_accounts)
  return merge_accounts_ != NULL ? *merge_accounts_
                         : *::ActivityMetadata_MergeAccounts::internal_default_instance();
}
inline ::ActivityMetadata_MergeAccounts* ActivityMetadata::mutable_merge_accounts() {
  set_has_merge_accounts();
  if (merge_accounts_ == NULL) {
    merge_accounts_ = new ::ActivityMetadata_MergeAccounts;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.merge_accounts)
  return merge_accounts_;
}
inline ::ActivityMetadata_MergeAccounts* ActivityMetadata::release_merge_accounts() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.merge_accounts)
  clear_has_merge_accounts();
  ::ActivityMetadata_MergeAccounts* temp = merge_accounts_;
  merge_accounts_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_merge_accounts(::ActivityMetadata_MergeAccounts* merge_accounts) {
  delete merge_accounts_;
  merge_accounts_ = merge_accounts;
  if (merge_accounts) {
    set_has_merge_accounts();
  } else {
    clear_has_merge_accounts();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.merge_accounts)
}

// optional .ActivityMetadata.PostComment post_comment = 8;
inline bool ActivityMetadata::has_post_comment() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActivityMetadata::set_has_post_comment() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActivityMetadata::clear_has_post_comment() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActivityMetadata::clear_post_comment() {
  if (post_comment_ != NULL) post_comment_->::ActivityMetadata_PostComment::Clear();
  clear_has_post_comment();
}
inline const ::ActivityMetadata_PostComment& ActivityMetadata::post_comment() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.post_comment)
  return post_comment_ != NULL ? *post_comment_
                         : *::ActivityMetadata_PostComment::internal_default_instance();
}
inline ::ActivityMetadata_PostComment* ActivityMetadata::mutable_post_comment() {
  set_has_post_comment();
  if (post_comment_ == NULL) {
    post_comment_ = new ::ActivityMetadata_PostComment;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.post_comment)
  return post_comment_;
}
inline ::ActivityMetadata_PostComment* ActivityMetadata::release_post_comment() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.post_comment)
  clear_has_post_comment();
  ::ActivityMetadata_PostComment* temp = post_comment_;
  post_comment_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_post_comment(::ActivityMetadata_PostComment* post_comment) {
  delete post_comment_;
  post_comment_ = post_comment;
  if (post_comment) {
    set_has_post_comment();
  } else {
    clear_has_post_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.post_comment)
}

// optional .ActivityMetadata.RemoveFollowers remove_followers = 17;
inline bool ActivityMetadata::has_remove_followers() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActivityMetadata::set_has_remove_followers() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActivityMetadata::clear_has_remove_followers() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActivityMetadata::clear_remove_followers() {
  if (remove_followers_ != NULL) remove_followers_->::ActivityMetadata_RemoveFollowers::Clear();
  clear_has_remove_followers();
}
inline const ::ActivityMetadata_RemoveFollowers& ActivityMetadata::remove_followers() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.remove_followers)
  return remove_followers_ != NULL ? *remove_followers_
                         : *::ActivityMetadata_RemoveFollowers::internal_default_instance();
}
inline ::ActivityMetadata_RemoveFollowers* ActivityMetadata::mutable_remove_followers() {
  set_has_remove_followers();
  if (remove_followers_ == NULL) {
    remove_followers_ = new ::ActivityMetadata_RemoveFollowers;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.remove_followers)
  return remove_followers_;
}
inline ::ActivityMetadata_RemoveFollowers* ActivityMetadata::release_remove_followers() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.remove_followers)
  clear_has_remove_followers();
  ::ActivityMetadata_RemoveFollowers* temp = remove_followers_;
  remove_followers_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_remove_followers(::ActivityMetadata_RemoveFollowers* remove_followers) {
  delete remove_followers_;
  remove_followers_ = remove_followers;
  if (remove_followers) {
    set_has_remove_followers();
  } else {
    clear_has_remove_followers();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.remove_followers)
}

// optional .ActivityMetadata.SavePhotos save_photos = 15;
inline bool ActivityMetadata::has_save_photos() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ActivityMetadata::set_has_save_photos() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ActivityMetadata::clear_has_save_photos() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ActivityMetadata::clear_save_photos() {
  if (save_photos_ != NULL) save_photos_->::ActivityMetadata_SavePhotos::Clear();
  clear_has_save_photos();
}
inline const ::ActivityMetadata_SavePhotos& ActivityMetadata::save_photos() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.save_photos)
  return save_photos_ != NULL ? *save_photos_
                         : *::ActivityMetadata_SavePhotos::internal_default_instance();
}
inline ::ActivityMetadata_SavePhotos* ActivityMetadata::mutable_save_photos() {
  set_has_save_photos();
  if (save_photos_ == NULL) {
    save_photos_ = new ::ActivityMetadata_SavePhotos;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.save_photos)
  return save_photos_;
}
inline ::ActivityMetadata_SavePhotos* ActivityMetadata::release_save_photos() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.save_photos)
  clear_has_save_photos();
  ::ActivityMetadata_SavePhotos* temp = save_photos_;
  save_photos_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_save_photos(::ActivityMetadata_SavePhotos* save_photos) {
  delete save_photos_;
  save_photos_ = save_photos;
  if (save_photos) {
    set_has_save_photos();
  } else {
    clear_has_save_photos();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.save_photos)
}

// optional .ActivityMetadata.ShareNew share_new = 9;
inline bool ActivityMetadata::has_share_new() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ActivityMetadata::set_has_share_new() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ActivityMetadata::clear_has_share_new() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ActivityMetadata::clear_share_new() {
  if (share_new_ != NULL) share_new_->::ActivityMetadata_ShareNew::Clear();
  clear_has_share_new();
}
inline const ::ActivityMetadata_ShareNew& ActivityMetadata::share_new() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.share_new)
  return share_new_ != NULL ? *share_new_
                         : *::ActivityMetadata_ShareNew::internal_default_instance();
}
inline ::ActivityMetadata_ShareNew* ActivityMetadata::mutable_share_new() {
  set_has_share_new();
  if (share_new_ == NULL) {
    share_new_ = new ::ActivityMetadata_ShareNew;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.share_new)
  return share_new_;
}
inline ::ActivityMetadata_ShareNew* ActivityMetadata::release_share_new() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.share_new)
  clear_has_share_new();
  ::ActivityMetadata_ShareNew* temp = share_new_;
  share_new_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_share_new(::ActivityMetadata_ShareNew* share_new) {
  delete share_new_;
  share_new_ = share_new;
  if (share_new) {
    set_has_share_new();
  } else {
    clear_has_share_new();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.share_new)
}

// optional .ActivityMetadata.ShareExisting share_existing = 10;
inline bool ActivityMetadata::has_share_existing() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ActivityMetadata::set_has_share_existing() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ActivityMetadata::clear_has_share_existing() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ActivityMetadata::clear_share_existing() {
  if (share_existing_ != NULL) share_existing_->::ActivityMetadata_ShareExisting::Clear();
  clear_has_share_existing();
}
inline const ::ActivityMetadata_ShareExisting& ActivityMetadata::share_existing() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.share_existing)
  return share_existing_ != NULL ? *share_existing_
                         : *::ActivityMetadata_ShareExisting::internal_default_instance();
}
inline ::ActivityMetadata_ShareExisting* ActivityMetadata::mutable_share_existing() {
  set_has_share_existing();
  if (share_existing_ == NULL) {
    share_existing_ = new ::ActivityMetadata_ShareExisting;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.share_existing)
  return share_existing_;
}
inline ::ActivityMetadata_ShareExisting* ActivityMetadata::release_share_existing() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.share_existing)
  clear_has_share_existing();
  ::ActivityMetadata_ShareExisting* temp = share_existing_;
  share_existing_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_share_existing(::ActivityMetadata_ShareExisting* share_existing) {
  delete share_existing_;
  share_existing_ = share_existing;
  if (share_existing) {
    set_has_share_existing();
  } else {
    clear_has_share_existing();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.share_existing)
}

// optional .ActivityMetadata.Unshare unshare = 11;
inline bool ActivityMetadata::has_unshare() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ActivityMetadata::set_has_unshare() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ActivityMetadata::clear_has_unshare() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ActivityMetadata::clear_unshare() {
  if (unshare_ != NULL) unshare_->::ActivityMetadata_Unshare::Clear();
  clear_has_unshare();
}
inline const ::ActivityMetadata_Unshare& ActivityMetadata::unshare() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.unshare)
  return unshare_ != NULL ? *unshare_
                         : *::ActivityMetadata_Unshare::internal_default_instance();
}
inline ::ActivityMetadata_Unshare* ActivityMetadata::mutable_unshare() {
  set_has_unshare();
  if (unshare_ == NULL) {
    unshare_ = new ::ActivityMetadata_Unshare;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.unshare)
  return unshare_;
}
inline ::ActivityMetadata_Unshare* ActivityMetadata::release_unshare() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.unshare)
  clear_has_unshare();
  ::ActivityMetadata_Unshare* temp = unshare_;
  unshare_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_unshare(::ActivityMetadata_Unshare* unshare) {
  delete unshare_;
  unshare_ = unshare;
  if (unshare) {
    set_has_unshare();
  } else {
    clear_has_unshare();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.unshare)
}

// optional .ActivityMetadata.UpdateEpisode update_episode = 12;
inline bool ActivityMetadata::has_update_episode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ActivityMetadata::set_has_update_episode() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ActivityMetadata::clear_has_update_episode() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ActivityMetadata::clear_update_episode() {
  if (update_episode_ != NULL) update_episode_->::ActivityMetadata_UpdateEpisode::Clear();
  clear_has_update_episode();
}
inline const ::ActivityMetadata_UpdateEpisode& ActivityMetadata::update_episode() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.update_episode)
  return update_episode_ != NULL ? *update_episode_
                         : *::ActivityMetadata_UpdateEpisode::internal_default_instance();
}
inline ::ActivityMetadata_UpdateEpisode* ActivityMetadata::mutable_update_episode() {
  set_has_update_episode();
  if (update_episode_ == NULL) {
    update_episode_ = new ::ActivityMetadata_UpdateEpisode;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.update_episode)
  return update_episode_;
}
inline ::ActivityMetadata_UpdateEpisode* ActivityMetadata::release_update_episode() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.update_episode)
  clear_has_update_episode();
  ::ActivityMetadata_UpdateEpisode* temp = update_episode_;
  update_episode_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_update_episode(::ActivityMetadata_UpdateEpisode* update_episode) {
  delete update_episode_;
  update_episode_ = update_episode;
  if (update_episode) {
    set_has_update_episode();
  } else {
    clear_has_update_episode();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.update_episode)
}

// optional .ActivityMetadata.UpdateViewpoint update_viewpoint = 13;
inline bool ActivityMetadata::has_update_viewpoint() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ActivityMetadata::set_has_update_viewpoint() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ActivityMetadata::clear_has_update_viewpoint() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ActivityMetadata::clear_update_viewpoint() {
  if (update_viewpoint_ != NULL) update_viewpoint_->::ActivityMetadata_UpdateViewpoint::Clear();
  clear_has_update_viewpoint();
}
inline const ::ActivityMetadata_UpdateViewpoint& ActivityMetadata::update_viewpoint() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.update_viewpoint)
  return update_viewpoint_ != NULL ? *update_viewpoint_
                         : *::ActivityMetadata_UpdateViewpoint::internal_default_instance();
}
inline ::ActivityMetadata_UpdateViewpoint* ActivityMetadata::mutable_update_viewpoint() {
  set_has_update_viewpoint();
  if (update_viewpoint_ == NULL) {
    update_viewpoint_ = new ::ActivityMetadata_UpdateViewpoint;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.update_viewpoint)
  return update_viewpoint_;
}
inline ::ActivityMetadata_UpdateViewpoint* ActivityMetadata::release_update_viewpoint() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.update_viewpoint)
  clear_has_update_viewpoint();
  ::ActivityMetadata_UpdateViewpoint* temp = update_viewpoint_;
  update_viewpoint_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_update_viewpoint(::ActivityMetadata_UpdateViewpoint* update_viewpoint) {
  delete update_viewpoint_;
  update_viewpoint_ = update_viewpoint;
  if (update_viewpoint) {
    set_has_update_viewpoint();
  } else {
    clear_has_update_viewpoint();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.update_viewpoint)
}

// optional .ActivityMetadata.UploadEpisode upload_episode = 14;
inline bool ActivityMetadata::has_upload_episode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ActivityMetadata::set_has_upload_episode() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ActivityMetadata::clear_has_upload_episode() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ActivityMetadata::clear_upload_episode() {
  if (upload_episode_ != NULL) upload_episode_->::ActivityMetadata_UploadEpisode::Clear();
  clear_has_upload_episode();
}
inline const ::ActivityMetadata_UploadEpisode& ActivityMetadata::upload_episode() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.upload_episode)
  return upload_episode_ != NULL ? *upload_episode_
                         : *::ActivityMetadata_UploadEpisode::internal_default_instance();
}
inline ::ActivityMetadata_UploadEpisode* ActivityMetadata::mutable_upload_episode() {
  set_has_upload_episode();
  if (upload_episode_ == NULL) {
    upload_episode_ = new ::ActivityMetadata_UploadEpisode;
  }
  // @@protoc_insertion_point(field_mutable:ActivityMetadata.upload_episode)
  return upload_episode_;
}
inline ::ActivityMetadata_UploadEpisode* ActivityMetadata::release_upload_episode() {
  // @@protoc_insertion_point(field_release:ActivityMetadata.upload_episode)
  clear_has_upload_episode();
  ::ActivityMetadata_UploadEpisode* temp = upload_episode_;
  upload_episode_ = NULL;
  return temp;
}
inline void ActivityMetadata::set_allocated_upload_episode(::ActivityMetadata_UploadEpisode* upload_episode) {
  delete upload_episode_;
  upload_episode_ = upload_episode;
  if (upload_episode) {
    set_has_upload_episode();
  } else {
    clear_has_upload_episode();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityMetadata.upload_episode)
}

// optional bool label_error = 20;
inline bool ActivityMetadata::has_label_error() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ActivityMetadata::set_has_label_error() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ActivityMetadata::clear_has_label_error() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ActivityMetadata::clear_label_error() {
  label_error_ = false;
  clear_has_label_error();
}
inline bool ActivityMetadata::label_error() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.label_error)
  return label_error_;
}
inline void ActivityMetadata::set_label_error(bool value) {
  set_has_label_error();
  label_error_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.label_error)
}

// optional bool provisional = 32;
inline bool ActivityMetadata::has_provisional() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ActivityMetadata::set_has_provisional() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ActivityMetadata::clear_has_provisional() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ActivityMetadata::clear_provisional() {
  provisional_ = false;
  clear_has_provisional();
}
inline bool ActivityMetadata::provisional() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.provisional)
  return provisional_;
}
inline void ActivityMetadata::set_provisional(bool value) {
  set_has_provisional();
  provisional_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.provisional)
}

// optional bool upload_activity = 30;
inline bool ActivityMetadata::has_upload_activity() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ActivityMetadata::set_has_upload_activity() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ActivityMetadata::clear_has_upload_activity() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ActivityMetadata::clear_upload_activity() {
  upload_activity_ = false;
  clear_has_upload_activity();
}
inline bool ActivityMetadata::upload_activity() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.upload_activity)
  return upload_activity_;
}
inline void ActivityMetadata::set_upload_activity(bool value) {
  set_has_upload_activity();
  upload_activity_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.upload_activity)
}

// optional double viewed_timestamp = 31;
inline bool ActivityMetadata::has_viewed_timestamp() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ActivityMetadata::set_has_viewed_timestamp() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ActivityMetadata::clear_has_viewed_timestamp() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ActivityMetadata::clear_viewed_timestamp() {
  viewed_timestamp_ = 0;
  clear_has_viewed_timestamp();
}
inline double ActivityMetadata::viewed_timestamp() const {
  // @@protoc_insertion_point(field_get:ActivityMetadata.viewed_timestamp)
  return viewed_timestamp_;
}
inline void ActivityMetadata::set_viewed_timestamp(double value) {
  set_has_viewed_timestamp();
  viewed_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ActivityMetadata.viewed_timestamp)
}

inline const ActivityMetadata* ActivityMetadata::internal_default_instance() {
  return &ActivityMetadata_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActivityMetadata_2eproto__INCLUDED
